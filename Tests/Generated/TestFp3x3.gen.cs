//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.FixedPoint.MathFp;
namespace Unity.Mathematics.FixedPoint.Tests
{
    [TestFixture]
    public class TestFp3x3
    {
#if ENABLE_DECIMAL
        [Test]
        public static void Fp3x3_zero()
        {
            TestUtils.AreEqual(Fp3x3.zero.c0.x, (Fp)0);
            TestUtils.AreEqual(Fp3x3.zero.c0.y, (Fp)0);
            TestUtils.AreEqual(Fp3x3.zero.c0.z, (Fp)0);
            TestUtils.AreEqual(Fp3x3.zero.c1.x, (Fp)0);
            TestUtils.AreEqual(Fp3x3.zero.c1.y, (Fp)0);
            TestUtils.AreEqual(Fp3x3.zero.c1.z, (Fp)0);
            TestUtils.AreEqual(Fp3x3.zero.c2.x, (Fp)0);
            TestUtils.AreEqual(Fp3x3.zero.c2.y, (Fp)0);
            TestUtils.AreEqual(Fp3x3.zero.c2.z, (Fp)0);
        }

        [Test]
        public static void Fp3x3_identity()
        {
            TestUtils.AreEqual(Fp3x3.identity.c0.x, (Fp)1);
            TestUtils.AreEqual(Fp3x3.identity.c0.y, (Fp)0);
            TestUtils.AreEqual(Fp3x3.identity.c0.z, (Fp)0);
            TestUtils.AreEqual(Fp3x3.identity.c1.x, (Fp)0);
            TestUtils.AreEqual(Fp3x3.identity.c1.y, (Fp)1);
            TestUtils.AreEqual(Fp3x3.identity.c1.z, (Fp)0);
            TestUtils.AreEqual(Fp3x3.identity.c2.x, (Fp)0);
            TestUtils.AreEqual(Fp3x3.identity.c2.y, (Fp)0);
            TestUtils.AreEqual(Fp3x3.identity.c2.z, (Fp)1);
        }

        [Test]
        public static void Fp3x3_operator_equal_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(304.0451m, -242.63562m, 323.91107m, -435.55502m, 198.06403m, -117.03351m, -384.73096m, 304.45056m, 57.849m);
            Fp3x3 b0 = Fp3x3(-264.28522m, -218.33426m, 253.03296m, 372.23932m, -171.82083m, 49.70288m, 261.85016m, -238.16519m, -368.79456m);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp3x3 a1 = Fp3x3(245.8263m, -303.59222m, -446.4428m, 238.98315m, 171.6228m, -291.7655m, -139.28052m, -372.00873m, 116.63696m);
            Fp3x3 b1 = Fp3x3(-479.64792m, 213.87708m, -320.8371m, 93.80847m, 25.883423m, -489.63315m, -447.4523m, 399.854m, -88.43811m);
            bool3x3 r1 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp3x3 a2 = Fp3x3(-412.20416m, 189.54596m, 60.885193m, 55.26001m, 466.31592m, 274.3271m, -337.95966m, -335.89508m, 503.47186m);
            Fp3x3 b2 = Fp3x3(-399.37903m, 96.70093m, -256.15207m, -480.7037m, -294.3447m, -162.43436m, 143.76892m, 382.4588m, 348.62878m);
            bool3x3 r2 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp3x3 a3 = Fp3x3(286.8064m, -329.8424m, 54.682617m, -430.5898m, 152.00482m, 479.45966m, -90.28839m, -366.7868m, -337.961m);
            Fp3x3 b3 = Fp3x3(-421.83197m, -433.79852m, -281.89743m, 50.561584m, 175.6972m, -181.5812m, -272.58496m, -119.11133m, -54.772003m);
            bool3x3 r3 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_equal_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(-441.88464m, -84.34961m, -254.78915m, -299.5752m, 336.64435m, 27.947937m, 309.77936m, -82.85208m, 150.21582m);
            Fp b0 = (280.80237m);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp3x3 a1 = Fp3x3(-192.66446m, -389.2873m, -329.5147m, 247.63269m, 90.41724m, -438.72107m, 169.65619m, -247.76123m, 231.31848m);
            Fp b1 = (440.7932m);
            bool3x3 r1 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp3x3 a2 = Fp3x3(-53.607788m, -504.72043m, 34.19281m, 508.6532m, 486.59094m, 400.13477m, -411.47345m, -216.84076m, 228.36359m);
            Fp b2 = (105.0813m);
            bool3x3 r2 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp3x3 a3 = Fp3x3(487.919m, 502.62256m, 165.63971m, 253.99951m, 139.4914m, -326.13837m, -389.4206m, -441.14172m, -21.546906m);
            Fp b3 = (-130.65189m);
            bool3x3 r3 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_equal_scalar_wide()
        {
            Fp a0 = (-193.7709m);
            Fp3x3 b0 = Fp3x3(-138.46414m, -273.42194m, 162.6225m, 187.72485m, 382.61987m, -82.54779m, 298.32867m, -235.21484m, 125.953125m);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp a1 = (-18.586182m);
            Fp3x3 b1 = Fp3x3(-251.19241m, -295.58725m, -402.58438m, 258.1311m, -128.23999m, 490.22418m, -125.58237m, -237.95346m, -202.5444m);
            bool3x3 r1 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp a2 = (210.6543m);
            Fp3x3 b2 = Fp3x3(-485.73117m, -451.5777m, 58.90094m, 60.381775m, -380.57666m, 428.50537m, -510.5632m, -168.52628m, 13.787476m);
            bool3x3 r2 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp a3 = (-168.90213m);
            Fp3x3 b3 = Fp3x3(-261.5316m, -10.708496m, 312.1266m, 324.50842m, 244.79773m, -431.5471m, -440.7053m, 39.593384m, 448.93793m);
            bool3x3 r3 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_not_equal_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(-498.66064m, 483.43823m, -368.5275m, -1.0883789m, -338.3922m, 405.47144m, -431.94257m, -256.16473m, 431.58868m);
            Fp3x3 b0 = Fp3x3(496.85205m, 490.64667m, -360.57568m, -70.759705m, -336.28644m, 308.89386m, -222.3328m, 60.620728m, 234.66309m);
            bool3x3 r0 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp3x3 a1 = Fp3x3(-181.17221m, -231.57767m, 338.64343m, 269.79736m, -118.2919m, -148.18341m, -383.60794m, -32.300903m, 97.237854m);
            Fp3x3 b1 = Fp3x3(-55.329132m, -350.50763m, 419.24213m, -435.70135m, 162.47571m, -183.24216m, -115.81906m, 292.2118m, -145.54517m);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp3x3 a2 = Fp3x3(-10.931793m, -461.59253m, 44.711792m, 78.70465m, 373.8048m, -40.56546m, -214.38165m, -475.03076m, 266.521m);
            Fp3x3 b2 = Fp3x3(-180.45279m, 473.34064m, -465.45633m, -226.7468m, -213.40073m, -457.89676m, -346.1724m, 89.81409m, 417.15234m);
            bool3x3 r2 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp3x3 a3 = Fp3x3(-394.08606m, -353.79138m, -291.1507m, 269.71625m, -434.57632m, -464.67853m, -170.8052m, 192.42938m, -440.44745m);
            Fp3x3 b3 = Fp3x3(363.84692m, -447.8039m, -444.82614m, 348.4359m, 356.8499m, 9.290466m, -212.15436m, 401.38043m, 100.04144m);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_not_equal_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(-491.50952m, 506.73987m, -201.46179m, 458.7696m, -47.28424m, -178.72217m, -4.25885m, -480.9433m, 380.7296m);
            Fp b0 = (-40.51297m);
            bool3x3 r0 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp3x3 a1 = Fp3x3(203.23236m, -210.24811m, 149.29901m, 307.94647m, -204.93494m, -81.21683m, 395.02234m, -193.018m, 237.71686m);
            Fp b1 = (178.6864m);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp3x3 a2 = Fp3x3(-401.1488m, 158.42194m, -454.762m, 403.64246m, -502.65527m, 317.45734m, -268.6849m, 202.21942m, 327.48834m);
            Fp b2 = (321.42255m);
            bool3x3 r2 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp3x3 a3 = Fp3x3(340.33936m, 366.2265m, 496.1463m, 97.20398m, 135.64307m, -484.8345m, 132.93549m, -162.78m, 191.71997m);
            Fp b3 = (-484.17932m);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_not_equal_scalar_wide()
        {
            Fp a0 = (-84.47537m);
            Fp3x3 b0 = Fp3x3(145.24762m, -294.39984m, -501.69632m, -231.25659m, -315.36432m, -83.16135m, -131.2561m, 504.67365m, -449.54895m);
            bool3x3 r0 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp a1 = (-457.44342m);
            Fp3x3 b1 = Fp3x3(-376.26813m, -385.2497m, 425.68658m, -18.988708m, -334.19855m, 155.14642m, -431.13464m, 231.5097m, -168.78336m);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp a2 = (-38.183533m);
            Fp3x3 b2 = Fp3x3(412.3233m, -199.63107m, -218.60913m, 351.11078m, 71.79602m, -157.31311m, -244.58215m, 202.2995m, 212.07178m);
            bool3x3 r2 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp a3 = (359.22083m);
            Fp3x3 b3 = Fp3x3(245.27911m, 115.828735m, 128.41241m, 372.49237m, -284.46402m, -114.39011m, -282.70642m, -313.51764m, -144.58865m);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_less_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(-248.45181m, -455.30365m, 320.315m, -270.12848m, -52.971436m, 351.49738m, -189.24158m, 166.60394m, -281.60788m);
            Fp3x3 b0 = Fp3x3(225.04071m, 307.312m, -435.28625m, 384.59454m, 128.18854m, 25.515686m, 253.86078m, -402.4974m, 39.97223m);
            bool3x3 r0 = bool3x3(true, true, false, true, true, false, true, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp3x3 a1 = Fp3x3(-328.3689m, 303.74066m, -10.85434m, -377.5345m, -204.24298m, -485.56396m, -118.21863m, -229.2432m, -47.903534m);
            Fp3x3 b1 = Fp3x3(-195.34567m, 480.38788m, 430.75067m, 456.32416m, -183.97815m, -316.16702m, 15.29895m, -77.77652m, -184.09119m);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, true, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp3x3 a2 = Fp3x3(-313.9403m, 465.46155m, -204.12457m, -197.98264m, 341.6419m, 407.021m, -347.1526m, 459.48096m, 465.06903m);
            Fp3x3 b2 = Fp3x3(-500.24542m, -144.36426m, 446.16736m, -84.16861m, -293.43997m, 321.036m, 479.0058m, 122.157715m, 245.73413m);
            bool3x3 r2 = bool3x3(false, false, true, true, false, false, true, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp3x3 a3 = Fp3x3(-374.56448m, -276.10492m, 172.8465m, 280.95673m, 358.1585m, -265.5928m, -257.24115m, -210.23566m, 423.44287m);
            Fp3x3 b3 = Fp3x3(-216.83966m, -374.0543m, 375.99078m, 425.84967m, -248.80441m, -175.80157m, 400.5349m, -161.30484m, -293.3625m);
            bool3x3 r3 = bool3x3(true, false, true, true, false, true, true, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_less_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(-217.34143m, -154.63306m, -189.59198m, -383.10138m, 449.96143m, -495.594m, 339.89673m, 278.93567m, 448.09546m);
            Fp b0 = (-277.67377m);
            bool3x3 r0 = bool3x3(false, false, false, true, false, true, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp3x3 a1 = Fp3x3(168.98419m, 231.91278m, 191.04297m, -42.53656m, 3.5787964m, -328.5581m, 409.57263m, -503.11368m, 321.62482m);
            Fp b1 = (-379.16406m);
            bool3x3 r1 = bool3x3(false, false, false, false, false, false, false, true, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp3x3 a2 = Fp3x3(-287.729m, 331.79572m, 164.5708m, 502.8482m, 303.45343m, 168.84894m, 442.40686m, -151.07874m, 409.4076m);
            Fp b2 = (-265.64056m);
            bool3x3 r2 = bool3x3(true, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp3x3 a3 = Fp3x3(-65.446625m, 264.36053m, 49.8692m, 326.2m, -96.36563m, 102.14215m, 98.628235m, -214.74396m, -339.4613m);
            Fp b3 = (268.86694m);
            bool3x3 r3 = bool3x3(true, true, true, false, true, true, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_less_scalar_wide()
        {
            Fp a0 = (-485.6832m);
            Fp3x3 b0 = Fp3x3(-362.635m, -4.044037m, 131.79993m, 413.48376m, 382.34747m, 55.00757m, -373.25812m, -144.24112m, -243.22845m);
            bool3x3 r0 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp a1 = (212.25671m);
            Fp3x3 b1 = Fp3x3(71.16406m, -104.41278m, 177.30798m, -44.35016m, -280.36896m, -397.822m, 453.41125m, -310.9288m, -159.81488m);
            bool3x3 r1 = bool3x3(false, false, false, false, false, false, true, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp a2 = (-139.51483m);
            Fp3x3 b2 = Fp3x3(-350.74994m, -428.73398m, -352.40662m, 62.795044m, 352.87518m, -509.05646m, 10.939697m, -200.63272m, 304.57733m);
            bool3x3 r2 = bool3x3(false, false, false, true, true, false, true, false, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp a3 = (-134.67667m);
            Fp3x3 b3 = Fp3x3(-237.67072m, 298.4048m, 290.37836m, -444.8108m, -93.98566m, -174.456m, -199.7934m, -411.79422m, -102.049805m);
            bool3x3 r3 = bool3x3(false, true, true, false, true, false, false, false, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_greater_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(-241.33841m, -475.21497m, -39.85724m, -167.34067m, -383.31873m, 119.09595m, 134.24622m, 295.21844m, -324.31348m);
            Fp3x3 b0 = Fp3x3(438.91602m, 228.49042m, -206.5971m, 366.85388m, 35.72583m, -91.07013m, 154.46704m, 467.31146m, -304.5686m);
            bool3x3 r0 = bool3x3(false, false, true, false, false, true, false, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp3x3 a1 = Fp3x3(278.55414m, -216.29721m, -217.02304m, 408.92578m, 408.4909m, -165.98468m, -188.39972m, 276.64758m, -91.25357m);
            Fp3x3 b1 = Fp3x3(-105.56061m, 118.17328m, 291.72064m, 198.42969m, 311.83734m, 477.4394m, 421.5794m, -35.827118m, 327.37164m);
            bool3x3 r1 = bool3x3(true, false, false, true, true, false, false, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp3x3 a2 = Fp3x3(-49.06787m, -288.82318m, 411.2578m, 85.75275m, 495.4361m, 22.718994m, 76.05542m, -267.30304m, 217.2334m);
            Fp3x3 b2 = Fp3x3(-200.52045m, -307.49384m, 104.79114m, 39.848938m, 371.0691m, 63.974304m, 455.26648m, -251.13776m, 204.78363m);
            bool3x3 r2 = bool3x3(true, true, true, true, true, false, false, false, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp3x3 a3 = Fp3x3(343.66144m, 143.93909m, 331.56464m, -103.08804m, 20.838562m, -287.87445m, 144.28229m, -266.27936m, 4.3792725m);
            Fp3x3 b3 = Fp3x3(152.48834m, -254.93558m, 273.71313m, 32.82202m, -348.75812m, 209.51654m, -341.9267m, 479.84674m, 388.20697m);
            bool3x3 r3 = bool3x3(true, true, true, false, true, false, true, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_greater_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(-348.3178m, -2.4205933m, 423.71265m, 250.03534m, -209.6311m, -121.415405m, 202.20648m, 420.89746m, 422.2362m);
            Fp b0 = (239.55536m);
            bool3x3 r0 = bool3x3(false, false, true, true, false, false, false, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp3x3 a1 = Fp3x3(-299.2479m, 17.824524m, 509.54065m, 501.89423m, -436.39563m, -129.45663m, -187.94016m, -292.8944m, -164.38376m);
            Fp b1 = (-84.361145m);
            bool3x3 r1 = bool3x3(false, true, true, true, false, false, false, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp3x3 a2 = Fp3x3(356.62354m, -205.14075m, -500.93753m, -29.945099m, 61.921204m, 499.33307m, -378.25275m, -97.266815m, 320.78027m);
            Fp b2 = (-255.7496m);
            bool3x3 r2 = bool3x3(true, true, false, true, true, true, false, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp3x3 a3 = Fp3x3(487.72894m, 305.70337m, 304.59412m, 452.4339m, -32.457245m, -96.72519m, -434.71063m, -21.196686m, -57.014587m);
            Fp b3 = (194.74487m);
            bool3x3 r3 = bool3x3(true, true, true, true, false, false, false, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_greater_scalar_wide()
        {
            Fp a0 = (-34.200226m);
            Fp3x3 b0 = Fp3x3(212.36633m, 82.05115m, 458.8661m, 136.99329m, 227.5271m, 495.51807m, -142.25m, -196.3866m, -97.57742m);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, true, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp a1 = (-241.31299m);
            Fp3x3 b1 = Fp3x3(-139.42554m, 305.07654m, -305.36148m, -506.0047m, -429.6786m, -430.8932m, 88.38849m, -263.5904m, -340.4632m);
            bool3x3 r1 = bool3x3(false, false, true, true, true, true, false, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp a2 = (438.38214m);
            Fp3x3 b2 = Fp3x3(114.980286m, 49.168518m, 458.23285m, 508.97046m, -243.17514m, -92.2117m, 21.118713m, -406.11978m, 454.279m);
            bool3x3 r2 = bool3x3(true, true, false, false, true, true, true, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp a3 = (-245.1478m);
            Fp3x3 b3 = Fp3x3(349.24713m, -351.03763m, -328.44318m, -90.44647m, -126.328m, 468.325m, 337.98163m, 91.24396m, -275.88748m);
            bool3x3 r3 = bool3x3(false, true, true, false, false, false, false, false, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_less_equal_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(-266.1326m, -124.733765m, -292.27527m, 24.822144m, -272.5923m, -285.86377m, 384.44617m, 267.29004m, 478.6623m);
            Fp3x3 b0 = Fp3x3(-192.43298m, -372.29657m, -239.20337m, -314.14038m, 439.8761m, 301.66156m, 257.67798m, -234.71451m, -127.03546m);
            bool3x3 r0 = bool3x3(true, false, true, false, true, true, false, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp3x3 a1 = Fp3x3(-110.5802m, 109.78064m, 178.77972m, 399.04333m, -236.436m, 166.79718m, 195.17603m, 101.0589m, -499.5724m);
            Fp3x3 b1 = Fp3x3(-511.36487m, -384.00253m, 8.338257m, -464.58316m, 166.00934m, -353.5489m, 5.9090576m, -159.5957m, 447.97522m);
            bool3x3 r1 = bool3x3(false, false, false, false, true, false, false, false, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp3x3 a2 = Fp3x3(226.72626m, -346.31998m, 91.10675m, 438.5157m, -422.07498m, -96.408264m, -38.98822m, 355.982m, -299.03247m);
            Fp3x3 b2 = Fp3x3(-339.27612m, 352.64783m, 175.11664m, -384.6341m, 184.44794m, 344.69257m, 490.128m, -427.9264m, 49.47937m);
            bool3x3 r2 = bool3x3(false, true, true, false, true, true, true, false, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp3x3 a3 = Fp3x3(-486.72812m, 140.7873m, -259.33997m, 509.23267m, 31.062439m, -267.29993m, -311.39737m, 245.25037m, 50.559265m);
            Fp3x3 b3 = Fp3x3(-394.13007m, 378.92804m, -339.6921m, 370.8128m, -431.0434m, 220.22723m, 32.04193m, 331.31482m, 305.93842m);
            bool3x3 r3 = bool3x3(true, true, false, false, false, true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_less_equal_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(-347.2307m, 357.8626m, -179.71185m, -320.96027m, 26.583496m, -314.84348m, 219.6524m, 479.43463m, 166.25684m);
            Fp b0 = (-160.18707m);
            bool3x3 r0 = bool3x3(true, false, true, true, false, true, false, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp3x3 a1 = Fp3x3(94.45245m, 43.63623m, 213.9112m, -351.45435m, -510.48376m, 58.587646m, -473.1872m, 335.4579m, 270.98102m);
            Fp b1 = (508.216m);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp3x3 a2 = Fp3x3(-309.0292m, -257.19537m, -489.77023m, -458.4973m, 456.54657m, 315.64874m, 368.87433m, -200.92328m, -79.75519m);
            Fp b2 = (235.10156m);
            bool3x3 r2 = bool3x3(true, true, true, true, false, false, false, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp3x3 a3 = Fp3x3(-10.78952m, -290.48325m, -424.3211m, -427.78427m, 432.9981m, 82.59479m, 336.81158m, -142.40524m, -327.4707m);
            Fp b3 = (-374.55328m);
            bool3x3 r3 = bool3x3(false, false, true, true, false, false, false, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_less_equal_scalar_wide()
        {
            Fp a0 = (-187.50052m);
            Fp3x3 b0 = Fp3x3(177.5221m, -221.34222m, -35.76126m, 354.90814m, 297.5418m, -487.66107m, 217.42084m, -94.54605m, 283.79358m);
            bool3x3 r0 = bool3x3(true, false, true, true, true, false, true, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp a1 = (431.82996m);
            Fp3x3 b1 = Fp3x3(-8.173676m, 456.12714m, -499.4815m, -282.17194m, -207.38339m, -116.17682m, 459.26715m, -479.46613m, 56.500244m);
            bool3x3 r1 = bool3x3(false, true, false, false, false, false, true, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp a2 = (-277.44678m);
            Fp3x3 b2 = Fp3x3(493.29077m, -505.90054m, 446.98572m, 460.13263m, 433.5786m, 504.737m, -263.66388m, -388.37427m, -148.78448m);
            bool3x3 r2 = bool3x3(true, false, true, true, true, true, true, false, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp a3 = (-227.64874m);
            Fp3x3 b3 = Fp3x3(-510.88272m, 417.94672m, -183.90958m, 309.99933m, -106.806915m, 509.4828m, -119.63547m, -457.39386m, -183.12982m);
            bool3x3 r3 = bool3x3(false, true, true, true, true, true, true, false, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_greater_equal_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(-480.5502m, -331.65723m, -467.8819m, -426.36612m, 130.68m, 397.9231m, 318.48987m, -65.386536m, 356.61475m);
            Fp3x3 b0 = Fp3x3(-13.955231m, -36.309723m, -361.51007m, -270.75452m, -221.99017m, 153.435m, 90.831665m, -417.45892m, 251.08832m);
            bool3x3 r0 = bool3x3(false, false, false, false, true, true, true, true, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp3x3 a1 = Fp3x3(435.95337m, -488.66916m, 131.80145m, 103.69757m, -163.08237m, 455.47546m, 93.445435m, 89.21301m, 489.87122m);
            Fp3x3 b1 = Fp3x3(137.00128m, -407.28433m, 228.05487m, -243.401m, 424.24408m, 269.84637m, 115.634094m, 445.47614m, -228.73865m);
            bool3x3 r1 = bool3x3(true, false, false, true, false, true, false, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp3x3 a2 = Fp3x3(-245.09006m, 491.81232m, -260.6297m, -310.3274m, 71.13989m, -46.399384m, -411.68314m, 66.261475m, 106.591736m);
            Fp3x3 b2 = Fp3x3(173.26428m, -298.96143m, -88.07672m, -60.371002m, -404.40866m, -99.03479m, -115.19504m, -255.03613m, 343.273m);
            bool3x3 r2 = bool3x3(false, true, false, false, true, true, false, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp3x3 a3 = Fp3x3(370.58514m, 366.2433m, 371.99274m, 313.57233m, -214.22995m, 196.56445m, -447.77808m, 112.96045m, 339.63116m);
            Fp3x3 b3 = Fp3x3(438.73413m, -47.712128m, 287.5191m, -338.6102m, 372.83356m, -229.71097m, 385.01367m, -348.6479m, -328.64954m);
            bool3x3 r3 = bool3x3(false, true, true, true, false, true, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_greater_equal_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(-100.195435m, 360.16846m, -374.34125m, 242.43842m, -297.3426m, 155.94312m, -314.72128m, 91.45465m, -222.22919m);
            Fp b0 = (71.966736m);
            bool3x3 r0 = bool3x3(false, true, false, true, false, true, false, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp3x3 a1 = Fp3x3(-388.12286m, 428.42255m, 321.47345m, -383.9345m, 287.05243m, -243.28503m, -333.85324m, 437.79694m, 298.99707m);
            Fp b1 = (-277.31842m);
            bool3x3 r1 = bool3x3(false, true, true, false, true, true, false, true, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp3x3 a2 = Fp3x3(127.66785m, -314.6262m, 347.53973m, -145.12482m, 35.18756m, -121.66431m, 350.87073m, -250.16486m, -48.212738m);
            Fp b2 = (314.34784m);
            bool3x3 r2 = bool3x3(false, false, true, false, false, false, true, false, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp3x3 a3 = Fp3x3(-136.74988m, -190.20853m, -291.74176m, 152.89203m, 114.13196m, -173.11151m, 317.08673m, -187.40225m, 472.24347m);
            Fp b3 = (343.28424m);
            bool3x3 r3 = bool3x3(false, false, false, false, false, false, false, false, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_greater_equal_scalar_wide()
        {
            Fp a0 = (66.15973m);
            Fp3x3 b0 = Fp3x3(228.81372m, -371.95468m, 184.22943m, 266.50446m, 225.0069m, -488.35345m, -52.242126m, 451.52258m, 52.532227m);
            bool3x3 r0 = bool3x3(false, true, false, false, false, true, true, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp a1 = (45.85956m);
            Fp3x3 b1 = Fp3x3(-379.48004m, 401.27222m, 172.98633m, 370.27435m, 192.75183m, 481.17358m, 15.350586m, 128.0401m, -165.92456m);
            bool3x3 r1 = bool3x3(true, false, false, false, false, false, true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp a2 = (-76.330444m);
            Fp3x3 b2 = Fp3x3(-327.95792m, 356.7912m, -9.228088m, -284.01025m, 313.27112m, -90.26172m, -321.32925m, -57.97351m, -106.32416m);
            bool3x3 r2 = bool3x3(true, false, false, true, false, true, true, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp a3 = (-178.8837m);
            Fp3x3 b3 = Fp3x3(209.28741m, 70.184814m, 105.86798m, 247.28058m, -206.20792m, 390.3213m, -330.80444m, -215.23157m, 188.87732m);
            bool3x3 r3 = bool3x3(false, false, false, false, true, false, true, true, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_add_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(149.59412m, 261.85114m, 134.76111m, 296.27722m, -87.83832m, 262.9261m, -230.0998m, -408.89618m, -478.518m);
            Fp3x3 b0 = Fp3x3(82.11688m, -336.5427m, -203.66907m, 348.16364m, 417.2708m, 96.18884m, -128.52588m, 215.17627m, 292.04285m);
            Fp3x3 r0 = Fp3x3(231.711m, -74.69156m, -68.90796m, 644.44086m, 329.4325m, 359.11493m, -358.62567m, -193.71991m, -186.47516m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp3x3 a1 = Fp3x3(195.41254m, -321.6739m, 350.58875m, 113.98291m, -90.31268m, -423.45035m, -448.143m, 438.0074m, -54.86862m);
            Fp3x3 b1 = Fp3x3(113.43524m, 155.31805m, -440.69635m, -165.62283m, 32.225952m, -454.52457m, -508.79465m, -153.16425m, -372.93164m);
            Fp3x3 r1 = Fp3x3(308.84778m, -166.35583m, -90.107605m, -51.639923m, -58.08673m, -877.9749m, -956.9376m, 284.84314m, -427.80026m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp3x3 a2 = Fp3x3(-195.57837m, 164.81592m, -389.52502m, 497.3791m, 428.81763m, 40.856934m, 233.47986m, 316.9823m, 174.2768m);
            Fp3x3 b2 = Fp3x3(180.11145m, -34.079956m, -110.680084m, -490.98834m, -308.06354m, 242.1145m, 255.45197m, -106.347046m, -212.55377m);
            Fp3x3 r2 = Fp3x3(-15.466919m, 130.73596m, -500.2051m, 6.390747m, 120.75409m, 282.97144m, 488.93182m, 210.63525m, -38.276978m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp3x3 a3 = Fp3x3(433.16278m, 243.52814m, 61.474426m, 398.64362m, 259.61395m, 353.41382m, 170.18146m, 438.34277m, -101.24536m);
            Fp3x3 b3 = Fp3x3(506.27606m, 190.54742m, -211.61603m, -247.94873m, -145.31372m, 259.72076m, 435.06445m, 476.03546m, -146.62946m);
            Fp3x3 r3 = Fp3x3(939.43884m, 434.07556m, -150.1416m, 150.69489m, 114.30023m, 613.1346m, 605.2459m, 914.37823m, -247.87482m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_add_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(-363.30127m, 85.21643m, 307.5595m, -324.80725m, 213.70538m, 85.79199m, -287.34515m, 389.57996m, 474.44275m);
            Fp b0 = (84.48932m);
            Fp3x3 r0 = Fp3x3(-278.81195m, 169.70575m, 392.04883m, -240.31793m, 298.1947m, 170.28131m, -202.85583m, 474.06927m, 558.93207m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp3x3 a1 = Fp3x3(286.0359m, -86.13693m, 429.21674m, 222.11395m, 192.88623m, 167.73853m, 114.861084m, -501.71588m, 160.07806m);
            Fp b1 = (-410.64044m);
            Fp3x3 r1 = Fp3x3(-124.60455m, -496.77737m, 18.576294m, -188.52649m, -217.75421m, -242.90192m, -295.77936m, -912.3563m, -250.56238m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp3x3 a2 = Fp3x3(-12.338318m, -175.8247m, 457.7224m, 507.90253m, -477.5033m, -375.98926m, 482.24597m, -182.66864m, 387.1908m);
            Fp b2 = (-398.42938m);
            Fp3x3 r2 = Fp3x3(-410.7677m, -574.2541m, 59.29303m, 109.473145m, -875.9327m, -774.41864m, 83.81659m, -581.098m, -11.238586m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp3x3 a3 = Fp3x3(-323.7256m, -389.15732m, 42.869568m, -385.58276m, -165.13174m, 323.4098m, 339.8897m, -161.7283m, 506.92566m);
            Fp b3 = (183.09943m);
            Fp3x3 r3 = Fp3x3(-140.62616m, -206.05789m, 225.969m, -202.48334m, 17.967682m, 506.50922m, 522.98914m, 21.371124m, 690.0251m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_add_scalar_wide()
        {
            Fp a0 = (-510.89264m);
            Fp3x3 b0 = Fp3x3(130.32959m, 272.09174m, 331.812m, -379.09714m, 397.8896m, -333.4043m, -9.8524475m, 236.39392m, -45.938232m);
            Fp3x3 r0 = Fp3x3(-380.56305m, -238.8009m, -179.08063m, -889.98975m, -113.00305m, -844.29694m, -520.7451m, -274.49872m, -556.8309m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp a1 = (-418.6372m);
            Fp3x3 b1 = Fp3x3(-504.4516m, 474.44263m, -500.95m, -202.51782m, -32.80835m, 113.29993m, -390.25403m, 114.28601m, 305.88098m);
            Fp3x3 r1 = Fp3x3(-923.0888m, 55.80542m, -919.5872m, -621.155m, -451.44556m, -305.33728m, -808.89124m, -304.3512m, -112.756226m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp a2 = (467.55792m);
            Fp3x3 b2 = Fp3x3(55.11212m, -58.26184m, 259.49323m, 167.08618m, 473.4843m, -351.8205m, 443.01263m, -388.40283m, -58.419525m);
            Fp3x3 r2 = Fp3x3(522.67004m, 409.29608m, 727.05115m, 634.6441m, 941.04224m, 115.73743m, 910.57056m, 79.15509m, 409.1384m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp a3 = (37.049866m);
            Fp3x3 b3 = Fp3x3(25.75061m, -475.7782m, 280.8266m, -155.1466m, -261.24048m, -306.7414m, 168.45288m, 207.63892m, -206.38287m);
            Fp3x3 r3 = Fp3x3(62.800476m, -438.72833m, 317.87646m, -118.09674m, -224.19061m, -269.69153m, 205.50275m, 244.68878m, -169.33301m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_sub_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(-493.45367m, -228.40881m, 463.7627m, 280.9309m, -394.85977m, -289.75592m, 248.1676m, 499.35565m, -272.3052m);
            Fp3x3 b0 = Fp3x3(-470.96182m, 95.77942m, 189.22583m, -88.87137m, -353.6308m, -352.10352m, 346.07532m, -379.2524m, -63.3519m);
            Fp3x3 r0 = Fp3x3(-22.491852m, -324.18823m, 274.53687m, 369.80228m, -41.228973m, 62.347595m, -97.907715m, 878.60803m, -208.95331m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp3x3 a1 = Fp3x3(-342.8852m, 328.01593m, -486.20126m, -428.74026m, -42.623505m, -502.78284m, -276.01123m, -211.62009m, -347.22595m);
            Fp3x3 b1 = Fp3x3(326.07965m, 57.516968m, -5.383026m, 204.36798m, -478.10825m, -341.72345m, 407.61432m, 310.6997m, 48.0141m);
            Fp3x3 r1 = Fp3x3(-668.96484m, 270.49896m, -480.81824m, -633.1083m, 435.48474m, -161.05939m, -683.62555m, -522.3198m, -395.24005m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp3x3 a2 = Fp3x3(-158.27963m, -173.81665m, -70.89194m, -173.12573m, -264.8333m, -74.43515m, -51.254578m, 108.359985m, -60.07065m);
            Fp3x3 b2 = Fp3x3(-163.44263m, 488.14728m, 180.8819m, 343.0777m, 319.71008m, 489.9417m, -263.96368m, 41.593506m, 480.24548m);
            Fp3x3 r2 = Fp3x3(5.1629944m, -661.9639m, -251.77383m, -516.2034m, -584.5434m, -564.37683m, 212.7091m, 66.76648m, -540.31616m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp3x3 a3 = Fp3x3(-330.40884m, -496.76056m, 12.519653m, -280.15063m, -98.08853m, 434.38043m, 371.51654m, 181.30127m, 291.02722m);
            Fp3x3 b3 = Fp3x3(-38.970642m, 288.97418m, -252.60535m, 247.03918m, 458.86365m, -185.37024m, 449.4679m, -60.658478m, 403.13745m);
            Fp3x3 r3 = Fp3x3(-291.4382m, -785.73474m, 265.125m, -527.1898m, -556.95215m, 619.7507m, -77.951355m, 241.95975m, -112.11023m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_sub_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(-483.1618m, 208.13171m, -387.3754m, -336.09125m, 167.81488m, -376.95837m, 348.0346m, -303.7441m, 237.17828m);
            Fp b0 = (-369.26047m);
            Fp3x3 r0 = Fp3x3(-113.90134m, 577.3922m, -18.11493m, 33.16922m, 537.0753m, -7.6979065m, 717.29504m, 65.51636m, 606.4387m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp3x3 a1 = Fp3x3(276.68842m, 308.1668m, 243.65826m, 246.66418m, -157.99301m, 350.88452m, 498.3803m, 183.44073m, 334.32684m);
            Fp b1 = (-357.72092m);
            Fp3x3 r1 = Fp3x3(634.4093m, 665.8877m, 601.37915m, 604.38513m, 199.7279m, 708.60547m, 856.1012m, 541.1616m, 692.0477m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp3x3 a2 = Fp3x3(-164.35855m, 238.23523m, -130.01239m, -231.33072m, 391.2126m, -119.787445m, -302.35925m, -145.07779m, -73.66461m);
            Fp b2 = (385.76703m);
            Fp3x3 r2 = Fp3x3(-550.1256m, -147.5318m, -515.7794m, -617.0978m, 5.4455566m, -505.55447m, -688.1263m, -530.84485m, -459.43164m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp3x3 a3 = Fp3x3(-177.00601m, 379.8385m, 181.22339m, 134.36224m, 133.43787m, -420.2645m, -479.589m, -332.15436m, -391.54102m);
            Fp b3 = (-481.27005m);
            Fp3x3 r3 = Fp3x3(304.26404m, 861.1085m, 662.4934m, 615.6323m, 614.7079m, 61.005554m, 1.6810608m, 149.11569m, 89.729034m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_sub_scalar_wide()
        {
            Fp a0 = (-400.4135m);
            Fp3x3 b0 = Fp3x3(-434.79865m, -476.15903m, 360.5266m, 427.36743m, 34.250977m, -102.27759m, -235.2923m, -404.2934m, 53.207886m);
            Fp3x3 r0 = Fp3x3(34.38513m, 75.745514m, -760.9401m, -827.78094m, -434.6645m, -298.13593m, -165.12122m, 3.8798828m, -453.6214m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp a1 = (-349.06525m);
            Fp3x3 b1 = Fp3x3(180.38147m, 508.37018m, 59.979797m, 278.88702m, 184.60626m, 476.90186m, 413.65137m, 336.2138m, -11.193787m);
            Fp3x3 r1 = Fp3x3(-529.4467m, -857.4354m, -409.04504m, -627.9523m, -533.6715m, -825.9671m, -762.7166m, -685.27905m, -337.87146m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp a2 = (-247.1394m);
            Fp3x3 b2 = Fp3x3(-336.0969m, -210.80411m, 498.80597m, 490.13202m, 413.41382m, -404.97784m, 323.63397m, 241.0108m, 277.08936m);
            Fp3x3 r2 = Fp3x3(88.95749m, -36.335297m, -745.9454m, -737.2714m, -660.5532m, 157.83844m, -570.7734m, -488.1502m, -524.22876m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp a3 = (156.94482m);
            Fp3x3 b3 = Fp3x3(-0.57788086m, 167.80084m, 239.34027m, 7.104553m, -43.08737m, 436.67523m, 214.51788m, 0.8171997m, 70.89612m);
            Fp3x3 r3 = Fp3x3(157.5227m, -10.856018m, -82.39545m, 149.84027m, 200.0322m, -279.7304m, -57.57306m, 156.12762m, 86.048706m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_mul_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(-326.98944m, 183.26929m, -95.33392m, -352.96515m, -222.24484m, 237.92462m, -66.21646m, -462.0301m, -500.88995m);
            Fp3x3 b0 = Fp3x3(351.58496m, 113.25659m, 286.7157m, 288.06653m, 327.3562m, 406.58655m, -200.43045m, 386.18604m, 363.50323m);
            Fp3x3 r0 = Fp3x3(-114964.57m, 20756.455m, -27333.732m, -101677.445m, -72753.23m, 96736.95m, 13271.795m, -178429.56m, -182075.12m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp3x3 a1 = Fp3x3(435.0948m, 252.29065m, -6.518158m, 322.92114m, 82.13257m, -243.62183m, -397.79288m, -227.1383m, -58.505035m);
            Fp3x3 b1 = Fp3x3(324.0984m, 356.03528m, -241.42923m, -351.41443m, -257.6211m, -54.470886m, -133.72797m, -409.5271m, 505.06732m);
            Fp3x3 r1 = Fp3x3(141013.52m, 89824.375m, 1573.6738m, -113479.15m, -21159.082m, 13270.297m, 53196.03m, 93019.29m, -29548.982m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp3x3 a2 = Fp3x3(79.093445m, 421.37585m, 272.33777m, -359.5229m, 412.57416m, 390.20898m, 262.00195m, 0.791626m, 269.64508m);
            Fp3x3 b2 = Fp3x3(-170.17267m, 133.84436m, 292.0456m, 392.42755m, 162.28137m, -168.54077m, 414.51172m, 82.95386m, 3.3320312m);
            Fp3x3 r2 = Fp3x3(-13459.543m, 56398.78m, 79535.05m, -141086.69m, 66953.1m, -65766.125m, 108602.88m, 65.66843m, 898.4658m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp3x3 a3 = Fp3x3(-72.31424m, -153.89685m, 302.33545m, -307.41687m, 19.688354m, 213.14911m, 121.72485m, 370.0746m, -204.90741m);
            Fp3x3 b3 = Fp3x3(-171.02472m, -87.30148m, -255.9195m, 416.65594m, 344.226m, -140.34741m, -168.68939m, -455.09738m, 181.28271m);
            Fp3x3 r3 = Fp3x3(12367.522m, 13435.423m, -77373.54m, -128087.07m, 6777.2437m, -29914.926m, -20533.691m, -168419.97m, -37146.17m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x3_operator_mul_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(398.63098m, 133.9815m, 100.58301m, 289.0614m, -66.26727m, -440.14893m, 265.87543m, 258.4983m, -59.58963m);
            Fp b0 = (188.26575m);
            Fp3x3 r0 = Fp3x3(75048.56m, 25224.129m, 18936.336m, 54420.36m, -12475.857m, -82864.97m, 50055.234m, 48666.375m, -11218.687m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp3x3 a1 = Fp3x3(338.4347m, -256.9532m, 383.3626m, -297.26385m, 206.87476m, 460.85834m, -33.312927m, -508.58292m, -417.235m);
            Fp b1 = (-313.44278m);
            Fp3x3 r1 = Fp3x3(-106079.914m, 80540.12m, -120162.24m, 93175.21m, -64843.4m, -144452.72m, 10441.696m, 159411.64m, 130779.3m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp3x3 a2 = Fp3x3(-454.5296m, 90.67731m, -353.6305m, 55.33612m, 67.805725m, 265.92883m, -257.91882m, 383.11536m, 387.38086m);
            Fp b2 = (22.078491m);
            Fp3x3 r2 = Fp3x3(-10035.328m, 2002.0182m, -7807.628m, 1221.738m, 1497.0481m, 5871.3076m, -5694.4585m, 8458.609m, 8552.785m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp3x3 a3 = Fp3x3(384.8125m, 498.15466m, 233.70929m, -203.77933m, -454.85236m, -35.77603m, -429.17346m, 449.79498m, -276.17242m);
            Fp b3 = (414.6073m);
            Fp3x3 r3 = Fp3x3(159546.08m, 206538.56m, 96897.58m, -84488.4m, -188585.11m, -14833.004m, -177938.45m, 186488.28m, -114503.1m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x3_operator_mul_scalar_wide()
        {
            Fp a0 = (291.10083m);
            Fp3x3 b0 = Fp3x3(85.88977m, -2.0483398m, -372.21533m, -32.73163m, -458.91272m, -425.4938m, 127.91998m, 166.95068m, -505.2238m);
            Fp3x3 r0 = Fp3x3(25002.584m, -596.27344m, -108352.195m, -9528.204m, -133589.88m, -123861.6m, 37237.613m, 48599.484m, -147071.06m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp a1 = (-52.959717m);
            Fp3x3 b1 = Fp3x3(493.21753m, -320.13397m, 459.70593m, -309.70544m, -463.31314m, 124.56317m, 393.03064m, 321.9226m, 324.49915m);
            Fp3x3 r1 = Fp3x3(-26120.66m, 16954.205m, -24345.896m, 16401.912m, 24536.934m, -6596.83m, -20814.791m, -17048.93m, -17185.383m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp a2 = (217.63403m);
            Fp3x3 b2 = Fp3x3(-343.80927m, 305.8797m, 312.56818m, -404.74002m, 86.315735m, -316.86298m, 242.69629m, 278.34778m, 185.50299m);
            Fp3x3 r2 = Fp3x3(-74824.59m, 66569.836m, 68025.48m, -88085.2m, 18785.242m, -68960.164m, 52818.973m, 60577.95m, 40371.766m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp a3 = (-128.3453m);
            Fp3x3 b3 = Fp3x3(336.5357m, -161.05597m, -490.4827m, 336.52277m, -449.29254m, -310.26248m, -17.471497m, -220.7156m, -161.46277m);
            Fp3x3 r3 = Fp3x3(-43192.777m, 20670.777m, 62951.152m, -43191.117m, 57664.59m, 39820.734m, 2242.3845m, 28327.812m, 20722.988m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x3_operator_div_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(-434.30182m, -58.547546m, -242.22162m, -61.09958m, 507.04565m, 55.52173m, 84.16864m, 121.1817m, -251.65366m);
            Fp3x3 b0 = Fp3x3(-418.87305m, 154.74506m, 228.1217m, 170.04639m, -183.44586m, 254.94373m, -327.2115m, -54.62494m, 345.10803m);
            Fp3x3 r0 = Fp3x3(1.036834m, -0.3783484m, -1.0618087m, -0.35931125m, -2.764007m, 0.21778034m, -0.2572301m, -2.2184317m, -0.72920257m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp3x3 a1 = Fp3x3(232.27637m, -11.3958435m, 29.057007m, 322.31866m, -203.0835m, -48.977356m, 42.2453m, -38.711334m, -135.21942m);
            Fp3x3 b1 = Fp3x3(82.34033m, -104.82977m, -236.51917m, 359.3108m, 322.64587m, 371.59705m, -355.33997m, -239.45645m, -266.5359m);
            Fp3x3 r1 = Fp3x3(2.8209307m, 0.10870808m, -0.12285265m, 0.897047m, -0.62943155m, -0.13180234m, -0.11888699m, 0.16166335m, 0.50732166m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp3x3 a2 = Fp3x3(-482.07678m, 242.29352m, 475.21832m, 136.9826m, 469.2395m, 122.68744m, -20.497894m, -467.7096m, -221.04147m);
            Fp3x3 b2 = Fp3x3(-357.02856m, -399.5715m, 476.43823m, 479.14832m, 31.718567m, -67.50827m, -476.12637m, -14.658966m, 455.77832m);
            Fp3x3 r2 = Fp3x3(1.3502471m, -0.6063834m, 0.9974395m, 0.2858877m, 14.793843m, -1.817369m, 0.043051373m, 31.906042m, -0.48497584m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp3x3 a3 = Fp3x3(267.99823m, 64.06995m, 344.4264m, -80.7948m, -292.97626m, 286.30884m, -218.34494m, 320.00793m, -84.54816m);
            Fp3x3 b3 = Fp3x3(182.52795m, -334.02838m, -89.53241m, 128.25458m, -376.5514m, -101.138336m, -188.37494m, -124.28238m, -406.6251m);
            Fp3x3 r3 = Fp3x3(1.4682585m, -0.1918099m, -3.8469465m, -0.6299565m, 0.7780512m, -2.8308637m, 1.1590976m, -2.5748456m, 0.20792656m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_div_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(338.5183m, 342.57233m, -162.55743m, 62.311157m, -435.44455m, 124.90289m, 336.1009m, -230.52808m, -93.8689m);
            Fp b0 = (18.585693m);
            Fp3x3 r0 = Fp3x3(18.213919m, 18.432045m, -8.746374m, 3.3526409m, -23.429018m, 6.7203784m, 18.08385m, -12.403523m, -5.0505996m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp3x3 a1 = Fp3x3(-125.544495m, -377.6493m, -358.36334m, -439.82245m, -253.62341m, -156.09784m, 115.1026m, -68.532166m, 6.3016357m);
            Fp b1 = (-412.19177m);
            Fp3x3 r1 = Fp3x3(0.3045779m, 0.916198m, 0.86940926m, 1.0670335m, 0.6153044m, 0.37870198m, -0.27924526m, 0.16626282m, -0.015288116m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp3x3 a2 = Fp3x3(484.37848m, -283.2752m, 219.09784m, -11.390045m, -192.22711m, 244.88446m, 145.513m, 89.89917m, -377.98132m);
            Fp b2 = (-506.15454m);
            Fp3x3 r2 = Fp3x3(-0.9569774m, 0.5596615m, -0.43286747m, 0.022503098m, 0.3797795m, -0.4838136m, -0.2874873m, -0.1776121m, 0.74677056m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp3x3 a3 = Fp3x3(-49.026733m, 404.14398m, -215.7409m, -93.07489m, -235.54022m, -14.345093m, -474.1825m, 276.6983m, -61.30887m);
            Fp b3 = (-204.02267m);
            Fp3x3 r3 = Fp3x3(0.24030042m, -1.9808778m, 1.0574359m, 0.45619875m, 1.1544806m, 0.07031127m, 2.3241656m, -1.3562135m, 0.30050027m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_div_scalar_wide()
        {
            Fp a0 = (2.9528809m);
            Fp3x3 b0 = Fp3x3(260.17004m, 427.25922m, -21.09494m, -20.552216m, -133.13852m, 254.63452m, -286.85498m, 186.54468m, 172.25421m);
            Fp3x3 r0 = Fp3x3(0.011349811m, 0.0069112163m, -0.13998052m, -0.14367701m, -0.022179013m, 0.011596546m, -0.010293985m, 0.015829349m, 0.017142575m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp a1 = (-81.20044m);
            Fp3x3 b1 = Fp3x3(483.28802m, 492.59583m, -428.58005m, -63.68457m, 464.9878m, 224.61633m, 360.40833m, -104.604706m, -371.11063m);
            Fp3x3 r1 = Fp3x3(-0.16801666m, -0.16484192m, 0.18946388m, 1.275041m, -0.17462918m, -0.36150727m, -0.22530124m, 0.7762599m, 0.21880387m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp a2 = (-185.77655m);
            Fp3x3 b2 = Fp3x3(472.09692m, 246.83105m, 280.94666m, 31.30542m, -239.26883m, -139.48044m, -405.13333m, -29.43277m, -456.4468m);
            Fp3x3 r2 = Fp3x3(-0.3935136m, -0.75264657m, -0.661252m, -5.934325m, 0.7764344m, 1.3319184m, 0.45855656m, 6.311895m, 0.4070059m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp a3 = (62.66205m);
            Fp3x3 b3 = Fp3x3(-290.4594m, -185.98166m, 120.48212m, 241.99762m, 86.05719m, -12.824341m, 35.62915m, -120.06207m, 509.15088m);
            Fp3x3 r3 = Fp3x3(-0.21573427m, -0.33692595m, 0.52009416m, 0.25893664m, 0.7281442m, -4.886181m, 1.7587298m, -0.52191377m, 0.12307167m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_mod_wide_wide()
        {
            Fp3x3 a0 = Fp3x3(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m, -385.32135m, 75.61359m, 147.87054m);
            Fp3x3 b0 = Fp3x3(470.2685m, -371.4406m, 161.94507m, -151.37039m, 170.21747m, 453.35284m, 433.15808m, -159.1189m, 190.11346m);
            Fp3x3 r0 = Fp3x3(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m, -385.32135m, 75.61359m, 147.87054m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp3x3 a1 = Fp3x3(-146.02231m, -188.04791m, 14.303833m, -56.95459m, -280.97797m, -139.49966m, -284.42224m, 74.799805m, -157.26028m);
            Fp3x3 b1 = Fp3x3(46.63446m, 297.8944m, -198.62778m, -45.952698m, 401.35815m, -246.4354m, -156.38309m, 33.645386m, 159.46942m);
            Fp3x3 r1 = Fp3x3(-6.118927m, -188.04791m, 14.303833m, -11.001892m, -280.97797m, -139.49966m, -128.03915m, 7.509033m, -157.26028m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp3x3 a2 = Fp3x3(208.92334m, 323.4063m, -427.9572m, -270.79147m, 321.25647m, -254.9324m, -347.11957m, -33.574707m, -27.461914m);
            Fp3x3 b2 = Fp3x3(314.51416m, 458.85156m, -95.67474m, 501.60535m, 141.61151m, 486.41327m, -299.43967m, 457.40955m, 49.858154m);
            Fp3x3 r2 = Fp3x3(208.92334m, 323.4063m, -45.25824m, -270.79147m, 38.033447m, -254.9324m, -47.6799m, -33.574707m, -27.461914m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp3x3 a3 = Fp3x3(-199.8555m, -56.03534m, 197.51398m, -69.076935m, 500.12927m, -57.36026m, -133.44693m, 78.418335m, 143.95776m);
            Fp3x3 b3 = Fp3x3(271.02557m, 448.409m, 460.18945m, 215.53345m, -330.93585m, -482.11996m, 93.033264m, 428.14417m, 345.35638m);
            Fp3x3 r3 = Fp3x3(-199.8555m, -56.03534m, 197.51398m, -69.076935m, 169.19342m, -57.36026m, -40.413666m, 78.418335m, 143.95776m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_mod_wide_scalar()
        {
            Fp3x3 a0 = Fp3x3(360.08112m, 57.401245m, -85.35019m, 449.2752m, 4.46344m, 469.19336m, -152.73862m, 262.32312m, 279.7296m);
            Fp b0 = (-297.3982m);
            Fp3x3 r0 = Fp3x3(62.682922m, 57.401245m, -85.35019m, 151.87701m, 4.46344m, 171.79517m, -152.73862m, 262.32312m, 279.7296m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp3x3 a1 = Fp3x3(-242.91284m, 109.5332m, -276.18713m, 357.42072m, 510.55994m, -287.36353m, 173.2602m, -111.50394m, 36.7323m);
            Fp b1 = (-24.107025m);
            Fp3x3 r1 = Fp3x3(-1.8425903m, 13.105103m, -11.009857m, 19.922363m, 4.3124084m, -22.186249m, 4.511017m, -15.075836m, 12.625275m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp3x3 a2 = Fp3x3(330.5569m, 175.37036m, 496.28973m, 497.073m, -223.45349m, 34.037292m, 279.83612m, -84.645294m, -64.484924m);
            Fp b2 = (443.2447m);
            Fp3x3 r2 = Fp3x3(330.5569m, 175.37036m, 53.045044m, 53.82831m, -223.45349m, 34.037292m, 279.83612m, -84.645294m, -64.484924m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp3x3 a3 = Fp3x3(-208.74591m, -392.8873m, -285.10107m, 496.4566m, -334.78363m, -146.48236m, 197.93994m, 127.76233m, 113.75244m);
            Fp b3 = (153.03174m);
            Fp3x3 r3 = Fp3x3(-55.714172m, -86.82382m, -132.06934m, 37.36139m, -28.720154m, -146.48236m, 44.908203m, 127.76233m, 113.75244m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_mod_scalar_wide()
        {
            Fp a0 = (321.83087m);
            Fp3x3 b0 = Fp3x3(-360.08008m, 271.34174m, -418.93903m, -57.065247m, -18.80716m, 10.327942m, 114.91266m, -373.9153m, -178.94406m);
            Fp3x3 r0 = Fp3x3(321.83087m, 50.489136m, 321.83087m, 36.50464m, 2.1091614m, 1.6646729m, 92.005554m, 321.83087m, 142.88681m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp a1 = (11.08252m);
            Fp3x3 b1 = Fp3x3(-162.6925m, 118.41644m, -13.732086m, -58.26706m, 219.90881m, -60.29535m, -317.5764m, -219.50665m, -362.4784m);
            Fp3x3 r1 = Fp3x3(11.08252m, 11.08252m, 11.08252m, 11.08252m, 11.08252m, 11.08252m, 11.08252m, 11.08252m, 11.08252m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp a2 = (-481.1638m);
            Fp3x3 b2 = Fp3x3(113.84534m, 331.60565m, -180.93997m, 462.0606m, -15.502106m, 163.53247m, -417.56512m, 307.13324m, 198.07489m);
            Fp3x3 r2 = Fp3x3(-25.78244m, -149.55814m, -119.283844m, -19.10318m, -0.59851074m, -154.09885m, -63.598663m, -174.03055m, -85.01401m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp a3 = (306.0138m);
            Fp3x3 b3 = Fp3x3(-494.00125m, 325.5888m, -93.9595m, 302.48358m, 394.8454m, 383.88586m, -397.79065m, -312.3375m, -14.388428m);
            Fp3x3 r3 = Fp3x3(306.0138m, 306.0138m, 24.135284m, 3.5302124m, 306.0138m, 306.0138m, 306.0138m, 306.0138m, 3.8568115m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x3_operator_plus()
        {
            Fp3x3 a0 = Fp3x3(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m, 298.37836m, 256.47144m, 167.59698m);
            Fp3x3 r0 = Fp3x3(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m, 298.37836m, 256.47144m, 167.59698m);
            TestUtils.AreEqual(+a0, r0);

            Fp3x3 a1 = Fp3x3(-323.4687m, -509.95538m, -135.21799m, -382.86426m, 322.83105m, -15.965393m, -401.84415m, -459.20764m, -74.09299m);
            Fp3x3 r1 = Fp3x3(-323.4687m, -509.95538m, -135.21799m, -382.86426m, 322.83105m, -15.965393m, -401.84415m, -459.20764m, -74.09299m);
            TestUtils.AreEqual(+a1, r1);

            Fp3x3 a2 = Fp3x3(-399.96255m, -299.72546m, -281.65063m, -477.81766m, -301.2943m, -481.5745m, 51.541565m, 22.880737m, 441.76825m);
            Fp3x3 r2 = Fp3x3(-399.96255m, -299.72546m, -281.65063m, -477.81766m, -301.2943m, -481.5745m, 51.541565m, 22.880737m, 441.76825m);
            TestUtils.AreEqual(+a2, r2);

            Fp3x3 a3 = Fp3x3(120.826416m, -311.4584m, 110.38733m, -326.90134m, 450.82037m, -236.8252m, 108.006165m, 123.47583m, -28.15158m);
            Fp3x3 r3 = Fp3x3(120.826416m, -311.4584m, 110.38733m, -326.90134m, 450.82037m, -236.8252m, 108.006165m, 123.47583m, -28.15158m);
            TestUtils.AreEqual(+a3, r3);
        }

        [Test]
        public static void Fp3x3_operator_neg()
        {
            Fp3x3 a0 = Fp3x3(-161.17307m, 91.577576m, -474.2732m, -138.7461m, -302.52325m, 428.21216m, 440.5053m, -457.04636m, 370.19952m);
            Fp3x3 r0 = Fp3x3(161.17307m, -91.577576m, 474.2732m, 138.7461m, 302.52325m, -428.21216m, -440.5053m, 457.04636m, -370.19952m);
            TestUtils.AreEqual(-a0, r0);

            Fp3x3 a1 = Fp3x3(-126.07272m, 176.51025m, -386.41965m, -161.73965m, -413.31476m, -179.76102m, -394.13074m, 43.724304m, -71.36215m);
            Fp3x3 r1 = Fp3x3(126.07272m, -176.51025m, 386.41965m, 161.73965m, 413.31476m, 179.76102m, 394.13074m, -43.724304m, 71.36215m);
            TestUtils.AreEqual(-a1, r1);

            Fp3x3 a2 = Fp3x3(147.67554m, -21.410583m, 480.02087m, 114.6911m, 355.2517m, -243.5343m, -263.83936m, 91.395386m, -428.1227m);
            Fp3x3 r2 = Fp3x3(-147.67554m, 21.410583m, -480.02087m, -114.6911m, -355.2517m, 243.5343m, 263.83936m, -91.395386m, 428.1227m);
            TestUtils.AreEqual(-a2, r2);

            Fp3x3 a3 = Fp3x3(-418.94492m, 60.900513m, 294.01508m, -288.94208m, 470.2558m, -17.734161m, 1.3660278m, 89.249756m, -141.22913m);
            Fp3x3 r3 = Fp3x3(418.94492m, -60.900513m, -294.01508m, 288.94208m, -470.2558m, 17.734161m, -1.3660278m, -89.249756m, 141.22913m);
            TestUtils.AreEqual(-a3, r3);
        }

        [Test]
        public static void Fp3x3_operator_prefix_inc()
        {
            Fp3x3 a0 = Fp3x3(-283.03375m, 366.7337m, -401.91684m, 187.16315m, 27.883484m, 130.98157m, -495.23444m, 224.36108m, 203.96112m);
            Fp3x3 r0 = Fp3x3(-282.03375m, 367.7337m, -400.91684m, 188.16315m, 28.883484m, 131.98157m, -494.23444m, 225.36108m, 204.96112m);
            TestUtils.AreEqual(++a0, r0);

            Fp3x3 a1 = Fp3x3(-308.8134m, -483.0141m, -269.13318m, -40.76111m, 21.258972m, 193.15027m, -143.68582m, 451.3499m, -61.16147m);
            Fp3x3 r1 = Fp3x3(-307.8134m, -482.0141m, -268.13318m, -39.76111m, 22.258972m, 194.15027m, -142.68582m, 452.3499m, -60.16147m);
            TestUtils.AreEqual(++a1, r1);

            Fp3x3 a2 = Fp3x3(-183.26956m, -180.14572m, 235.54474m, 493.35364m, 385.1552m, -135.32303m, 464.82544m, 386.85297m, -218.15811m);
            Fp3x3 r2 = Fp3x3(-182.26956m, -179.14572m, 236.54474m, 494.35364m, 386.1552m, -134.32303m, 465.82544m, 387.85297m, -217.15811m);
            TestUtils.AreEqual(++a2, r2);

            Fp3x3 a3 = Fp3x3(-507.06058m, -500.54514m, -229.95221m, 480.92822m, 75.92224m, -45.670044m, 232.49689m, 96.689026m, -64.63837m);
            Fp3x3 r3 = Fp3x3(-506.06058m, -499.54514m, -228.95221m, 481.92822m, 76.92224m, -44.670044m, 233.49689m, 97.689026m, -63.638367m);
            TestUtils.AreEqual(++a3, r3);
        }

        [Test]
        public static void Fp3x3_operator_postfix_inc()
        {
            Fp3x3 a0 = Fp3x3(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m, 145.12164m, -225.01251m, 375.78876m);
            Fp3x3 r0 = Fp3x3(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m, 145.12164m, -225.01251m, 375.78876m);
            TestUtils.AreEqual(a0++, r0);

            Fp3x3 a1 = Fp3x3(435.95538m, -302.35114m, -167.30942m, -432.4173m, -195.24594m, 430.40125m, -116.777405m, 495.3412m, -195.3482m);
            Fp3x3 r1 = Fp3x3(435.95538m, -302.35114m, -167.30942m, -432.4173m, -195.24594m, 430.40125m, -116.777405m, 495.3412m, -195.3482m);
            TestUtils.AreEqual(a1++, r1);

            Fp3x3 a2 = Fp3x3(-190.37909m, -214.7761m, -367.92316m, 425.3698m, 170.81726m, 43.400146m, -493.16553m, -73.47418m, 48.611633m);
            Fp3x3 r2 = Fp3x3(-190.37909m, -214.7761m, -367.92316m, 425.3698m, 170.81726m, 43.400146m, -493.16553m, -73.47418m, 48.611633m);
            TestUtils.AreEqual(a2++, r2);

            Fp3x3 a3 = Fp3x3(-364.19983m, -326.0879m, 392.2071m, 137.73834m, 98.75751m, 328.05072m, -421.77307m, 69.77661m, 363.83466m);
            Fp3x3 r3 = Fp3x3(-364.19983m, -326.0879m, 392.2071m, 137.73834m, 98.75751m, 328.05072m, -421.77307m, 69.77661m, 363.83466m);
            TestUtils.AreEqual(a3++, r3);
        }

        [Test]
        public static void Fp3x3_operator_prefix_dec()
        {
            Fp3x3 a0 = Fp3x3(127.71149m, 412.1825m, 421.8966m, -407.7751m, -148.3689m, -202.65967m, -365.90997m, 111.1109m, -473.15137m);
            Fp3x3 r0 = Fp3x3(126.71149m, 411.1825m, 420.8966m, -408.7751m, -149.3689m, -203.65967m, -366.90997m, 110.1109m, -474.15137m);
            TestUtils.AreEqual(--a0, r0);

            Fp3x3 a1 = Fp3x3(-278.87814m, -490.94742m, 437.7041m, 440.35724m, -22.001892m, 185.19067m, -135.55646m, 336.039m, -1.5646973m);
            Fp3x3 r1 = Fp3x3(-279.87814m, -491.94742m, 436.7041m, 439.35724m, -23.001892m, 184.19067m, -136.55646m, 335.039m, -2.5646973m);
            TestUtils.AreEqual(--a1, r1);

            Fp3x3 a2 = Fp3x3(310.96857m, 155.52148m, -183.0806m, 450.9137m, -27.427094m, 212.71722m, 299.13446m, 167.54565m, 260.42664m);
            Fp3x3 r2 = Fp3x3(309.96857m, 154.52148m, -184.0806m, 449.9137m, -28.427094m, 211.71722m, 298.13446m, 166.54565m, 259.42664m);
            TestUtils.AreEqual(--a2, r2);

            Fp3x3 a3 = Fp3x3(398.1562m, 122.074524m, 416.10016m, -365.77808m, 413.51202m, 361.9489m, 209.72174m, 137.383m, 284.3451m);
            Fp3x3 r3 = Fp3x3(397.1562m, 121.074524m, 415.10016m, -366.77808m, 412.51202m, 360.9489m, 208.72174m, 136.383m, 283.3451m);
            TestUtils.AreEqual(--a3, r3);
        }

        [Test]
        public static void Fp3x3_operator_postfix_dec()
        {
            Fp3x3 a0 = Fp3x3(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m, 106.726135m, -494.1874m, 442.7943m);
            Fp3x3 r0 = Fp3x3(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m, 106.726135m, -494.1874m, 442.7943m);
            TestUtils.AreEqual(a0--, r0);

            Fp3x3 a1 = Fp3x3(474.02826m, -259.07544m, -407.2235m, 256.4026m, 272.2155m, -431.75604m, 78.12311m, -341.83966m, 453.72626m);
            Fp3x3 r1 = Fp3x3(474.02826m, -259.07544m, -407.2235m, 256.4026m, 272.2155m, -431.75604m, 78.12311m, -341.83966m, 453.72626m);
            TestUtils.AreEqual(a1--, r1);

            Fp3x3 a2 = Fp3x3(-287.3698m, 355.79425m, 405.0161m, 420.21088m, -370.72998m, 249.26392m, 180.30334m, -492.0752m, 369.93585m);
            Fp3x3 r2 = Fp3x3(-287.3698m, 355.79425m, 405.0161m, 420.21088m, -370.72998m, 249.26392m, 180.30334m, -492.0752m, 369.93585m);
            TestUtils.AreEqual(a2--, r2);

            Fp3x3 a3 = Fp3x3(-352.15085m, -367.599m, -292.01447m, 185.35925m, 132.24475m, 157.39807m, 413.95624m, -91.33191m, -268.11438m);
            Fp3x3 r3 = Fp3x3(-352.15085m, -367.599m, -292.01447m, 185.35925m, 132.24475m, 157.39807m, 413.95624m, -91.33191m, -268.11438m);
            TestUtils.AreEqual(a3--, r3);
        }

#endif

    }
}
