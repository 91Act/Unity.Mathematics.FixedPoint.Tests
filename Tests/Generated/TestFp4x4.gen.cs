//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.FixedPoint.MathFp;
namespace Unity.Mathematics.FixedPoint.Tests
{
    [TestFixture]
    public class TestFp4x4
    {
#if ENABLE_DECIMAL
        [Test]
        public static void Fp4x4_zero()
        {
            TestUtils.AreEqual(Fp4x4.zero.c0.x, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c0.y, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c0.z, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c0.w, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c1.x, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c1.y, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c1.z, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c1.w, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c2.x, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c2.y, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c2.z, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c2.w, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c3.x, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c3.y, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c3.z, (Fp)0);
            TestUtils.AreEqual(Fp4x4.zero.c3.w, (Fp)0);
        }

        [Test]
        public static void Fp4x4_identity()
        {
            TestUtils.AreEqual(Fp4x4.identity.c0.x, (Fp)1);
            TestUtils.AreEqual(Fp4x4.identity.c0.y, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c0.z, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c0.w, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c1.x, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c1.y, (Fp)1);
            TestUtils.AreEqual(Fp4x4.identity.c1.z, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c1.w, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c2.x, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c2.y, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c2.z, (Fp)1);
            TestUtils.AreEqual(Fp4x4.identity.c2.w, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c3.x, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c3.y, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c3.z, (Fp)0);
            TestUtils.AreEqual(Fp4x4.identity.c3.w, (Fp)1);
        }

        [Test]
        public static void Fp4x4_operator_equal_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(304.0451m, -242.63562m, 323.91107m, -435.55502m, 198.06403m, -117.03351m, -384.73096m, 304.45056m, 57.849m, 245.8263m, -303.59222m, -446.4428m, 238.98315m, 171.6228m, -291.7655m, -139.28052m);
            Fp4x4 b0 = Fp4x4(-264.28522m, -218.33426m, 253.03296m, 372.23932m, -171.82083m, 49.70288m, 261.85016m, -238.16519m, -368.79456m, -479.64792m, 213.87708m, -320.8371m, 93.80847m, 25.883423m, -489.63315m, -447.4523m);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp4x4 a1 = Fp4x4(-372.00873m, 116.63696m, -412.20416m, 189.54596m, 60.885193m, 55.26001m, 466.31592m, 274.3271m, -337.95966m, -335.89508m, 503.47186m, 286.8064m, -329.8424m, 54.682617m, -430.5898m, 152.00482m);
            Fp4x4 b1 = Fp4x4(399.854m, -88.43811m, -399.37903m, 96.70093m, -256.15207m, -480.7037m, -294.3447m, -162.43436m, 143.76892m, 382.4588m, 348.62878m, -421.83197m, -433.79852m, -281.89743m, 50.561584m, 175.6972m);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp4x4 a2 = Fp4x4(479.45966m, -90.28839m, -366.7868m, -337.961m, -46.340546m, -28.533081m, -353.38293m, -275.153m, 331.48145m, -148.15692m, 358.2619m, -438.92413m, -398.9524m, -270.5957m, 57.938416m, 15.2907715m);
            Fp4x4 b2 = Fp4x4(-181.5812m, -272.58496m, -119.11133m, -54.772003m, -362.87463m, 464.55988m, -477.7391m, 21.32782m, -177.94284m, 76.465576m, -9.739319m, -208.63754m, 26.468933m, -490.40567m, -40.55661m, -501.6764m);
            bool4x4 r2 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp4x4 a3 = Fp4x4(103.84308m, -448.16336m, 307.94373m, -307.64752m, -30.27005m, -83.20065m, -134.8381m, 443.55096m, 353.3545m, -101.378845m, -313.2815m, 329.43524m, -254.65707m, -385.63257m, -360.51562m, 399.2896m);
            Fp4x4 b3 = Fp4x4(391.5628m, 135.89716m, 34.91205m, 293.15167m, 230.87695m, 354.3465m, 334.24652m, -364.10327m, -478.64526m, 259.35303m, -436.46075m, -22.801025m, -393.65085m, 118.74426m, -359.55536m, 506.21606m);
            bool4x4 r3 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_equal_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(-441.88464m, -84.34961m, -254.78915m, -299.5752m, 336.64435m, 27.947937m, 309.77936m, -82.85208m, 150.21582m, -192.66446m, 440.7932m, -389.2873m, -329.5147m, 247.63269m, 90.41724m, -438.72107m);
            Fp b0 = (280.80237m);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp4x4 a1 = Fp4x4(169.65619m, 231.31848m, -53.607788m, 105.0813m, -504.72043m, 34.19281m, 508.6532m, 486.59094m, 400.13477m, -411.47345m, -216.84076m, 228.36359m, 487.919m, -130.65189m, 502.62256m, 165.63971m);
            Fp b1 = (-247.76123m);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp4x4 a2 = Fp4x4(253.99951m, -326.13837m, -389.4206m, -441.14172m, -21.546906m, 266.03882m, 36.957397m, -380.5522m, 160.88977m, -20.193085m, 80.27557m, -180.76334m, 236.91956m, 254.39703m, 280.79614m, 175.90118m);
            Fp b2 = (139.4914m);
            bool4x4 r2 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp4x4 a3 = Fp4x4(225.74805m, 439.79572m, -491.12054m, -34.965942m, 273.52283m, 393.45758m, -251.44238m, -274.16608m, 448.50964m, -72.57858m, 14.620117m, 200.78436m, 174.29681m, 449.98743m, 450.17065m, -42.92697m);
            Fp b3 = (-136.57028m);
            bool4x4 r3 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_equal_scalar_wide()
        {
            Fp a0 = (-193.7709m);
            Fp4x4 b0 = Fp4x4(-138.46414m, -273.42194m, 162.6225m, 187.72485m, 382.61987m, -82.54779m, 298.32867m, -235.21484m, 125.953125m, -18.586182m, -251.19241m, -295.58725m, -402.58438m, 258.1311m, -128.23999m, 490.22418m);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp a1 = (-125.58237m);
            Fp4x4 b1 = Fp4x4(-237.95346m, -202.5444m, 210.6543m, -485.73117m, -451.5777m, 58.90094m, 60.381775m, -380.57666m, 428.50537m, -510.5632m, -168.52628m, 13.787476m, -168.90213m, -261.5316m, -10.708496m, 312.1266m);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp a2 = (324.50842m);
            Fp4x4 b2 = Fp4x4(244.79773m, -431.5471m, -440.7053m, 39.593384m, 448.93793m, 194.82922m, 175.26678m, 331.89807m, -319.51215m, -302.4013m, 191.6095m, 0.6691284m, 367.36908m, 332.20605m, 486.00653m, -213.91074m);
            bool4x4 r2 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp a3 = (409.1704m);
            Fp4x4 b3 = Fp4x4(287.4756m, -461.49915m, -336.43622m, -220.0397m, -198.88647m, 179.67712m, -409.75928m, 56.301514m, 466.1145m, -83.98462m, -45.14505m, 262.99768m, -217.14474m, -269.05463m, 271.51605m, -95.71384m);
            bool4x4 r3 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_not_equal_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(-498.66064m, 483.43823m, -368.5275m, -1.0883789m, -338.3922m, 405.47144m, -431.94257m, -256.16473m, 431.58868m, -181.17221m, -231.57767m, 338.64343m, 269.79736m, -118.2919m, -148.18341m, -383.60794m);
            Fp4x4 b0 = Fp4x4(496.85205m, 490.64667m, -360.57568m, -70.759705m, -336.28644m, 308.89386m, -222.3328m, 60.620728m, 234.66309m, -55.329132m, -350.50763m, 419.24213m, -435.70135m, 162.47571m, -183.24216m, -115.81906m);
            bool4x4 r0 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp4x4 a1 = Fp4x4(-32.300903m, 97.237854m, -10.931793m, -461.59253m, 44.711792m, 78.70465m, 373.8048m, -40.56546m, -214.38165m, -475.03076m, 266.521m, -394.08606m, -353.79138m, -291.1507m, 269.71625m, -434.57632m);
            Fp4x4 b1 = Fp4x4(292.2118m, -145.54517m, -180.45279m, 473.34064m, -465.45633m, -226.7468m, -213.40073m, -457.89676m, -346.1724m, 89.81409m, 417.15234m, 363.84692m, -447.8039m, -444.82614m, 348.4359m, 356.8499m);
            bool4x4 r1 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp4x4 a2 = Fp4x4(-464.67853m, -170.8052m, 192.42938m, -440.44745m, 184.25562m, 411.9591m, 82.78772m, -466.5627m, 116.864075m, -135.14267m, -220.2114m, 129.65997m, 174.29791m, -303.75378m, -401.3021m, -308.3756m);
            Fp4x4 b2 = Fp4x4(9.290466m, -212.15436m, 401.38043m, 100.04144m, -142.51285m, -278.12134m, 53.39026m, -28.80191m, -172.39514m, -314.011m, 38.57794m, 62.546753m, 245.39087m, -75.12793m, 495.23358m, 208.27588m);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp4x4 a3 = Fp4x4(481.12m, -274.06827m, 469.40448m, -138.32614m, -417.72495m, 417.55847m, -506.8068m, -230.9408m, -493.24118m, -49.690247m, -28.421417m, 65.06134m, 391.63055m, 125.54773m, 193.13422m, -10.656433m);
            Fp4x4 b3 = Fp4x4(233.85474m, -147.48566m, -340.41107m, -103.762085m, -63.072235m, -102.966156m, 396.03528m, 104.81836m, 249.65125m, -69.88861m, 391.4347m, 8.74353m, 278.648m, 459.0385m, 146.68048m, 201.02203m);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_not_equal_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(-491.50952m, 506.73987m, -201.46179m, 458.7696m, -47.28424m, -178.72217m, -4.25885m, -480.9433m, 380.7296m, 203.23236m, 178.6864m, -210.24811m, 149.29901m, 307.94647m, -204.93494m, -81.21683m);
            Fp b0 = (-40.51297m);
            bool4x4 r0 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp4x4 a1 = Fp4x4(395.02234m, 237.71686m, -401.1488m, 321.42255m, 158.42194m, -454.762m, 403.64246m, -502.65527m, 317.45734m, -268.6849m, 202.21942m, 327.48834m, 340.33936m, -484.17932m, 366.2265m, 496.1463m);
            Fp b1 = (-193.018m);
            bool4x4 r1 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp4x4 a2 = Fp4x4(97.20398m, -484.8345m, 132.93549m, -162.78m, 191.71997m, -389.97107m, 183.98065m, -345.20758m, -125.70331m, -88.20157m, -473.8589m, 5.4396973m, -388.48563m, -72.15341m, -442.79593m, -461.76166m);
            Fp b2 = (135.64307m);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp4x4 a3 = Fp4x4(78.045044m, -508.63474m, -394.75983m, -300.93213m, 313.06512m, 449.50183m, -93.10422m, 449.42487m, 147.25842m, -422.0373m, 305.52173m, -296.43164m, -471.60977m, 175.41168m, 324.4599m, -194.39444m);
            Fp b3 = (-264.57034m);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_not_equal_scalar_wide()
        {
            Fp a0 = (-84.47537m);
            Fp4x4 b0 = Fp4x4(145.24762m, -294.39984m, -501.69632m, -231.25659m, -315.36432m, -83.16135m, -131.2561m, 504.67365m, -449.54895m, -457.44342m, -376.26813m, -385.2497m, 425.68658m, -18.988708m, -334.19855m, 155.14642m);
            bool4x4 r0 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp a1 = (-431.13464m);
            Fp4x4 b1 = Fp4x4(231.5097m, -168.78336m, -38.183533m, 412.3233m, -199.63107m, -218.60913m, 351.11078m, 71.79602m, -157.31311m, -244.58215m, 202.2995m, 212.07178m, 359.22083m, 245.27911m, 115.828735m, 128.41241m);
            bool4x4 r1 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp a2 = (372.49237m);
            Fp4x4 b2 = Fp4x4(-284.46402m, -114.39011m, -282.70642m, -313.51764m, -144.58865m, 137.43195m, 464.09845m, -324.49036m, -260.69153m, 352.95264m, 176.74591m, 181.84991m, -345.412m, -267.4372m, 82.864136m, 319.99072m);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp a3 = (-88.92432m);
            Fp4x4 b3 = Fp4x4(419.27405m, 337.36133m, -356.05756m, 15.201294m, -167.12134m, 436.2093m, -340.80713m, 208.94739m, 353.9488m, -350.5792m, 178.4444m, -219.39813m, -296.7698m, -190.72256m, 19.903076m, -1.6621094m);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_less_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(-248.45181m, -455.30365m, 320.315m, -270.12848m, -52.971436m, 351.49738m, -189.24158m, 166.60394m, -281.60788m, -328.3689m, 303.74066m, -10.85434m, -377.5345m, -204.24298m, -485.56396m, -118.21863m);
            Fp4x4 b0 = Fp4x4(225.04071m, 307.312m, -435.28625m, 384.59454m, 128.18854m, 25.515686m, 253.86078m, -402.4974m, 39.97223m, -195.34567m, 480.38788m, 430.75067m, 456.32416m, -183.97815m, -316.16702m, 15.29895m);
            bool4x4 r0 = bool4x4(true, true, false, true, true, false, true, false, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp4x4 a1 = Fp4x4(-229.2432m, -47.903534m, -313.9403m, 465.46155m, -204.12457m, -197.98264m, 341.6419m, 407.021m, -347.1526m, 459.48096m, 465.06903m, -374.56448m, -276.10492m, 172.8465m, 280.95673m, 358.1585m);
            Fp4x4 b1 = Fp4x4(-77.77652m, -184.09119m, -500.24542m, -144.36426m, 446.16736m, -84.16861m, -293.43997m, 321.036m, 479.0058m, 122.157715m, 245.73413m, -216.83966m, -374.0543m, 375.99078m, 425.84967m, -248.80441m);
            bool4x4 r1 = bool4x4(true, false, false, false, true, true, false, false, true, false, false, true, false, true, true, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp4x4 a2 = Fp4x4(-265.5928m, -257.24115m, -210.23566m, 423.44287m, 86.51068m, -503.2211m, 166.37048m, -422.89124m, -462.69684m, -348.82556m, -263.64798m, 62.22992m, -215.21204m, -419.98627m, -161.09192m, 86.679016m);
            Fp4x4 b2 = Fp4x4(-175.80157m, 400.5349m, -161.30484m, -293.3625m, 327.99536m, 369.57336m, -438.68573m, 427.90552m, -13.278961m, -452.56976m, 271.62366m, 37.022644m, -343.06387m, -451.88602m, -422.52924m, -117.97421m);
            bool4x4 r2 = bool4x4(true, true, true, false, true, true, false, true, true, false, true, false, false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp4x4 a3 = Fp4x4(-423.99115m, -330.5758m, 475.80115m, 19.271667m, -456.43707m, -476.353m, 236.95526m, 128.78986m, -463.16306m, 326.68762m, 262.67523m, -497.15643m, 273.9685m, 103.74695m, -253.31857m, 379.72943m);
            Fp4x4 b3 = Fp4x4(-461.17825m, 5.4434814m, -505.51392m, 326.15228m, 240.84344m, -374.92633m, -232.13782m, -349.4192m, 256.94098m, -217.76431m, 298.72827m, -25.216461m, 217.7362m, -379.17178m, 363.32892m, -2.9600525m);
            bool4x4 r3 = bool4x4(false, true, false, true, true, true, false, false, true, false, true, true, false, false, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_less_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(-217.34143m, -154.63306m, -189.59198m, -383.10138m, 449.96143m, -495.594m, 339.89673m, 278.93567m, 448.09546m, 168.98419m, -379.16406m, 231.91278m, 191.04297m, -42.53656m, 3.5787964m, -328.5581m);
            Fp b0 = (-277.67377m);
            bool4x4 r0 = bool4x4(false, false, false, true, false, true, false, false, false, false, true, false, false, false, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp4x4 a1 = Fp4x4(409.57263m, 321.62482m, -287.729m, -265.64056m, 331.79572m, 164.5708m, 502.8482m, 303.45343m, 168.84894m, 442.40686m, -151.07874m, 409.4076m, -65.446625m, 268.86694m, 264.36053m, 49.8692m);
            Fp b1 = (-503.11368m);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp4x4 a2 = Fp4x4(326.2m, 102.14215m, 98.628235m, -214.74396m, -339.4613m, 503.901m, 490.4538m, 456.42938m, 488.25647m, 103.29474m, 62.97705m, 0.696167m, -43.749634m, 227.5871m, -495.7869m, -506.5776m);
            Fp b2 = (-96.36563m);
            bool4x4 r2 = bool4x4(false, false, false, true, true, false, false, false, false, false, false, false, false, false, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp4x4 a3 = Fp4x4(-128.41663m, 417.9605m, 375.72705m, -463.7009m, -97.46948m, 192.79614m, -180.44019m, -174.55481m, -230.88751m, -426.00082m, -21.024567m, 381.52808m, 1.5421143m, 412.11725m, -131.52463m, -329.95645m);
            Fp b3 = (426.11566m);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_less_scalar_wide()
        {
            Fp a0 = (-485.6832m);
            Fp4x4 b0 = Fp4x4(-362.635m, -4.044037m, 131.79993m, 413.48376m, 382.34747m, 55.00757m, -373.25812m, -144.24112m, -243.22845m, 212.25671m, 71.16406m, -104.41278m, 177.30798m, -44.35016m, -280.36896m, -397.822m);
            bool4x4 r0 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp a1 = (453.41125m);
            Fp4x4 b1 = Fp4x4(-310.9288m, -159.81488m, -139.51483m, -350.74994m, -428.73398m, -352.40662m, 62.795044m, 352.87518m, -509.05646m, 10.939697m, -200.63272m, 304.57733m, -134.67667m, -237.67072m, 298.4048m, 290.37836m);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp a2 = (-444.8108m);
            Fp4x4 b2 = Fp4x4(-93.98566m, -174.456m, -199.7934m, -411.79422m, -102.049805m, -114.2363m, -289.82532m, 41.89673m, 193.82751m, 468.4997m, -457.85388m, -10.88205m, -417.63577m, -400.27835m, 257.6792m, 226.22577m);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp a3 = (339.3797m);
            Fp4x4 b3 = Fp4x4(-82.70322m, 504.75275m, -76.27911m, 377.06677m, -445.901m, -163.63742m, -442.99512m, -451.39145m, 379.40393m, -467.93213m, 339.37463m, 63.18158m, 403.44818m, -62.07254m, 284.75922m, 117.20892m);
            bool4x4 r3 = bool4x4(false, true, false, true, false, false, false, false, true, false, false, false, true, false, false, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_greater_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(-241.33841m, -475.21497m, -39.85724m, -167.34067m, -383.31873m, 119.09595m, 134.24622m, 295.21844m, -324.31348m, 278.55414m, -216.29721m, -217.02304m, 408.92578m, 408.4909m, -165.98468m, -188.39972m);
            Fp4x4 b0 = Fp4x4(438.91602m, 228.49042m, -206.5971m, 366.85388m, 35.72583m, -91.07013m, 154.46704m, 467.31146m, -304.5686m, -105.56061m, 118.17328m, 291.72064m, 198.42969m, 311.83734m, 477.4394m, 421.5794m);
            bool4x4 r0 = bool4x4(false, false, true, false, false, true, false, false, false, true, false, false, true, true, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp4x4 a1 = Fp4x4(276.64758m, -91.25357m, -49.06787m, -288.82318m, 411.2578m, 85.75275m, 495.4361m, 22.718994m, 76.05542m, -267.30304m, 217.2334m, 343.66144m, 143.93909m, 331.56464m, -103.08804m, 20.838562m);
            Fp4x4 b1 = Fp4x4(-35.827118m, 327.37164m, -200.52045m, -307.49384m, 104.79114m, 39.848938m, 371.0691m, 63.974304m, 455.26648m, -251.13776m, 204.78363m, 152.48834m, -254.93558m, 273.71313m, 32.82202m, -348.75812m);
            bool4x4 r1 = bool4x4(true, false, true, true, true, true, true, false, false, false, true, true, true, true, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp4x4 a2 = Fp4x4(-287.87445m, 144.28229m, -266.27936m, 4.3792725m, 496.25458m, -4.81839m, -479.57953m, 308.2845m, -336.28937m, -276.21808m, 232.7425m, -307.654m, 132.51147m, -328.5674m, -20.085083m, 307.59418m);
            Fp4x4 b2 = Fp4x4(209.51654m, -341.9267m, 479.84674m, 388.20697m, 74.04797m, 190.91168m, 255.12799m, -474.14334m, -167.48337m, -109.25116m, -449.26196m, -440.13605m, 268.25812m, -306.13226m, -50.536285m, -133.56421m);
            bool4x4 r2 = bool4x4(false, true, false, false, true, false, false, true, false, false, true, true, false, false, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp4x4 a3 = Fp4x4(-428.0475m, -184.27661m, -285.21317m, -181.74637m, -61.112823m, -235.3923m, -302.398m, 120.06781m, -51.220093m, 98.0025m, -202.95993m, -69.50061m, 5.170532m, 37.56183m, 296.41418m, -103.70795m);
            Fp4x4 b3 = Fp4x4(-77.489075m, -226.08041m, -147.35428m, 108.20868m, -143.51004m, -368.8145m, -359.25027m, 400.81104m, 293.708m, -447.60468m, -381.91025m, -350.6125m, 72.418335m, -22.537476m, -201.48843m, 34.790894m);
            bool4x4 r3 = bool4x4(false, true, false, false, true, true, true, false, false, true, true, true, false, true, true, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_greater_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(-348.3178m, -2.4205933m, 423.71265m, 250.03534m, -209.6311m, -121.415405m, 202.20648m, 420.89746m, 422.2362m, -299.2479m, -84.361145m, 17.824524m, 509.54065m, 501.89423m, -436.39563m, -129.45663m);
            Fp b0 = (239.55536m);
            bool4x4 r0 = bool4x4(false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp4x4 a1 = Fp4x4(-187.94016m, -164.38376m, 356.62354m, -255.7496m, -205.14075m, -500.93753m, -29.945099m, 61.921204m, 499.33307m, -378.25275m, -97.266815m, 320.78027m, 487.72894m, 194.74487m, 305.70337m, 304.59412m);
            Fp b1 = (-292.8944m);
            bool4x4 r1 = bool4x4(true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp4x4 a2 = Fp4x4(452.4339m, -96.72519m, -434.71063m, -21.196686m, -57.014587m, 384.10565m, -426.88776m, -159.53464m, 197.20703m, -344.55518m, 287.53265m, 147.20874m, -264.22845m, -176.15524m, -295.30786m, -479.66397m);
            Fp b2 = (-32.457245m);
            bool4x4 r2 = bool4x4(true, false, false, true, false, true, false, false, true, false, true, true, false, false, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp4x4 a3 = Fp4x4(3.7381592m, 247.30951m, 412.95422m, 419.43176m, -67.303925m, -13.483063m, -58.342255m, -323.88586m, -196.9642m, -255.16263m, -212.52673m, -411.8828m, 446.50726m, 18.007263m, 121.935425m, 225.23041m);
            Fp b3 = (-294.6333m);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_greater_scalar_wide()
        {
            Fp a0 = (-34.200226m);
            Fp4x4 b0 = Fp4x4(212.36633m, 82.05115m, 458.8661m, 136.99329m, 227.5271m, 495.51807m, -142.25m, -196.3866m, -97.57742m, -241.31299m, -139.42554m, 305.07654m, -305.36148m, -506.0047m, -429.6786m, -430.8932m);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, true, true, true, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp a1 = (88.38849m);
            Fp4x4 b1 = Fp4x4(-263.5904m, -340.4632m, 438.38214m, 114.980286m, 49.168518m, 458.23285m, 508.97046m, -243.17514m, -92.2117m, 21.118713m, -406.11978m, 454.279m, -245.1478m, 349.24713m, -351.03763m, -328.44318m);
            bool4x4 r1 = bool4x4(true, true, false, false, true, false, false, true, true, true, true, false, true, false, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp a2 = (-90.44647m);
            Fp4x4 b2 = Fp4x4(-126.328m, 468.325m, 337.98163m, 91.24396m, -275.88748m, 57.502136m, 411.03888m, -284.83734m, 474.65033m, -493.6543m, 424.9469m, -26.373932m, -393.062m, -96.197266m, 128.28021m, -340.71063m);
            bool4x4 r2 = bool4x4(true, false, false, false, true, false, false, true, false, true, false, false, true, true, false, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp a3 = (498.52014m);
            Fp4x4 b3 = Fp4x4(-102.29932m, -315.30994m, 184.78027m, 362.81952m, -348.8022m, 135.8183m, 461.89563m, -131.83154m, -192.26123m, -37.600616m, -248.13022m, -138.66559m, -364.42963m, -78.56012m, -300.38794m, 121.519775m);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_less_equal_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(-266.1326m, -124.733765m, -292.27527m, 24.822144m, -272.5923m, -285.86377m, 384.44617m, 267.29004m, 478.6623m, -110.5802m, 109.78064m, 178.77972m, 399.04333m, -236.436m, 166.79718m, 195.17603m);
            Fp4x4 b0 = Fp4x4(-192.43298m, -372.29657m, -239.20337m, -314.14038m, 439.8761m, 301.66156m, 257.67798m, -234.71451m, -127.03546m, -511.36487m, -384.00253m, 8.338257m, -464.58316m, 166.00934m, -353.5489m, 5.9090576m);
            bool4x4 r0 = bool4x4(true, false, true, false, true, true, false, false, false, false, false, false, false, true, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp4x4 a1 = Fp4x4(101.0589m, -499.5724m, 226.72626m, -346.31998m, 91.10675m, 438.5157m, -422.07498m, -96.408264m, -38.98822m, 355.982m, -299.03247m, -486.72812m, 140.7873m, -259.33997m, 509.23267m, 31.062439m);
            Fp4x4 b1 = Fp4x4(-159.5957m, 447.97522m, -339.27612m, 352.64783m, 175.11664m, -384.6341m, 184.44794m, 344.69257m, 490.128m, -427.9264m, 49.47937m, -394.13007m, 378.92804m, -339.6921m, 370.8128m, -431.0434m);
            bool4x4 r1 = bool4x4(false, true, false, true, true, false, true, true, true, false, true, true, true, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp4x4 a2 = Fp4x4(-267.29993m, -311.39737m, 245.25037m, 50.559265m, -292.71548m, -90.47162m, -310.51825m, -81.58679m, 143.82513m, -307.00247m, -197.53088m, -207.0585m, -184.86758m, -204.8121m, 432.06384m, 355.41516m);
            Fp4x4 b2 = Fp4x4(220.22723m, 32.04193m, 331.31482m, 305.93842m, 48.771973m, 446.66394m, 51.41382m, -297.4046m, -69.1286m, 188.66919m, 111.102356m, -460.42044m, 406.55768m, 359.79822m, 505.37213m, 232.29395m);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, false, false, true, true, false, true, true, true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp4x4 a3 = Fp4x4(-367.94577m, 394.66583m, -16.154663m, -412.55777m, -72.431274m, 376.78912m, -372.049m, 428.38818m, -51.4852m, 28.482788m, 165.8153m, 278.4875m, -84.714264m, -295.0905m, 24.126892m, 385.87457m);
            Fp4x4 b3 = Fp4x4(357.55908m, -130.30222m, 383.5498m, 141.69696m, -461.95642m, 164.19556m, -421.39206m, -422.6265m, -473.93536m, 66.361206m, 354.39325m, 133.59772m, -362.97693m, 350.6927m, 202.76105m, -286.08765m);
            bool4x4 r3 = bool4x4(true, false, true, true, false, false, false, false, false, true, true, false, false, true, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_less_equal_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(-347.2307m, 357.8626m, -179.71185m, -320.96027m, 26.583496m, -314.84348m, 219.6524m, 479.43463m, 166.25684m, 94.45245m, 508.216m, 43.63623m, 213.9112m, -351.45435m, -510.48376m, 58.587646m);
            Fp b0 = (-160.18707m);
            bool4x4 r0 = bool4x4(true, false, true, true, false, true, false, false, false, false, false, false, false, true, true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp4x4 a1 = Fp4x4(-473.1872m, 270.98102m, -309.0292m, 235.10156m, -257.19537m, -489.77023m, -458.4973m, 456.54657m, 315.64874m, 368.87433m, -200.92328m, -79.75519m, -10.78952m, -374.55328m, -290.48325m, -424.3211m);
            Fp b1 = (335.4579m);
            bool4x4 r1 = bool4x4(true, true, true, true, true, true, true, false, true, false, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp4x4 a2 = Fp4x4(-427.78427m, 82.59479m, 336.81158m, -142.40524m, -327.4707m, -325.95245m, 359.69843m, 165.67804m, -270.4295m, -359.84552m, -474.07312m, -92.220276m, -285.88556m, -336.43512m, 300.15442m, 21.473389m);
            Fp b2 = (432.9981m);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp4x4 a3 = Fp4x4(392.04614m, 510.9978m, -83.22574m, -70.332275m, -414.99173m, 335.6328m, -233.21454m, -265.50687m, 222.93475m, -171.71777m, -91.42435m, 47.18982m, -334.95364m, -42.994263m, 286.69922m, -44.042694m);
            Fp b3 = (-191.80139m);
            bool4x4 r3 = bool4x4(false, false, false, false, true, false, true, true, false, false, false, false, true, false, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_less_equal_scalar_wide()
        {
            Fp a0 = (-187.50052m);
            Fp4x4 b0 = Fp4x4(177.5221m, -221.34222m, -35.76126m, 354.90814m, 297.5418m, -487.66107m, 217.42084m, -94.54605m, 283.79358m, 431.82996m, -8.173676m, 456.12714m, -499.4815m, -282.17194m, -207.38339m, -116.17682m);
            bool4x4 r0 = bool4x4(true, false, true, true, true, false, true, true, true, true, true, true, false, false, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp a1 = (459.26715m);
            Fp4x4 b1 = Fp4x4(-479.46613m, 56.500244m, -277.44678m, 493.29077m, -505.90054m, 446.98572m, 460.13263m, 433.5786m, 504.737m, -263.66388m, -388.37427m, -148.78448m, -227.64874m, -510.88272m, 417.94672m, -183.90958m);
            bool4x4 r1 = bool4x4(false, false, false, true, false, false, true, false, true, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp a2 = (309.99933m);
            Fp4x4 b2 = Fp4x4(-106.806915m, 509.4828m, -119.63547m, -457.39386m, -183.12982m, -286.7578m, 416.26123m, -344.05505m, -13.668213m, -126.87393m, 62.10132m, 480.54236m, -473.9209m, 303.8037m, -164.25012m, -283.23117m);
            bool4x4 r2 = bool4x4(false, true, false, false, false, false, true, false, false, false, false, true, false, false, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp a3 = (-37.874237m);
            Fp4x4 b3 = Fp4x4(69.28003m, 51.60565m, 177.4292m, -168.79129m, 171.4226m, -156.32797m, 16.10614m, 433.3296m, 304.8048m, 288.00287m, 93.795105m, -457.76157m, -0.5576782m, 430.7127m, 85.87958m, 128.03674m);
            bool4x4 r3 = bool4x4(true, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_greater_equal_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(-480.5502m, -331.65723m, -467.8819m, -426.36612m, 130.68m, 397.9231m, 318.48987m, -65.386536m, 356.61475m, 435.95337m, -488.66916m, 131.80145m, 103.69757m, -163.08237m, 455.47546m, 93.445435m);
            Fp4x4 b0 = Fp4x4(-13.955231m, -36.309723m, -361.51007m, -270.75452m, -221.99017m, 153.435m, 90.831665m, -417.45892m, 251.08832m, 137.00128m, -407.28433m, 228.05487m, -243.401m, 424.24408m, 269.84637m, 115.634094m);
            bool4x4 r0 = bool4x4(false, false, false, false, true, true, true, true, true, true, false, false, true, false, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp4x4 a1 = Fp4x4(89.21301m, 489.87122m, -245.09006m, 491.81232m, -260.6297m, -310.3274m, 71.13989m, -46.399384m, -411.68314m, 66.261475m, 106.591736m, 370.58514m, 366.2433m, 371.99274m, 313.57233m, -214.22995m);
            Fp4x4 b1 = Fp4x4(445.47614m, -228.73865m, 173.26428m, -298.96143m, -88.07672m, -60.371002m, -404.40866m, -99.03479m, -115.19504m, -255.03613m, 343.273m, 438.73413m, -47.712128m, 287.5191m, -338.6102m, 372.83356m);
            bool4x4 r1 = bool4x4(false, true, false, true, false, false, true, true, false, true, false, false, true, true, true, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp4x4 a2 = Fp4x4(196.56445m, -447.77808m, 112.96045m, 339.63116m, 271.276m, -114.36902m, 415.0431m, -355.08502m, 314.9984m, 323.92725m, -308.4151m, -502.9577m, -437.109m, -82.981964m, 313.27155m, -100.53375m);
            Fp4x4 b2 = Fp4x4(-229.71097m, 385.01367m, -348.6479m, -328.64954m, 222.9148m, 111.40759m, -319.8275m, -3.8937683m, 447.9524m, 58.67047m, -163.51846m, 257.94m, -460.86288m, 314.62207m, -307.7068m, -434.0195m);
            bool4x4 r2 = bool4x4(true, false, true, true, true, false, true, false, false, true, false, false, true, false, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp4x4 a3 = Fp4x4(-385.84677m, 255.06458m, -468.6306m, 300.00476m, 57.17383m, -14.312164m, -54.35797m, -488.30896m, -204.6271m, 484.5207m, -150.53741m, 169.24866m, -238.7533m, 310.12268m, 246.3341m, -129.92108m);
            Fp4x4 b3 = Fp4x4(-171.16098m, -211.14911m, 80.586914m, 448.96478m, -117.08899m, 395.67694m, -252.82242m, 174.07086m, -136.1135m, 377.61987m, 239.09955m, -151.91711m, -193.71808m, 61.823303m, -486.9909m, 66.98279m);
            bool4x4 r3 = bool4x4(false, true, false, false, true, false, true, false, false, true, false, true, false, true, true, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_greater_equal_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(-100.195435m, 360.16846m, -374.34125m, 242.43842m, -297.3426m, 155.94312m, -314.72128m, 91.45465m, -222.22919m, -388.12286m, -277.31842m, 428.42255m, 321.47345m, -383.9345m, 287.05243m, -243.28503m);
            Fp b0 = (71.966736m);
            bool4x4 r0 = bool4x4(false, true, false, true, false, true, false, true, false, false, false, true, true, false, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp4x4 a1 = Fp4x4(-333.85324m, 298.99707m, 127.66785m, 314.34784m, -314.6262m, 347.53973m, -145.12482m, 35.18756m, -121.66431m, 350.87073m, -250.16486m, -48.212738m, -136.74988m, 343.28424m, -190.20853m, -291.74176m);
            Fp b1 = (437.79694m);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp4x4 a2 = Fp4x4(152.89203m, -173.11151m, 317.08673m, -187.40225m, 472.24347m, 184.02753m, -308.51047m, -318.60474m, -49.63687m, 306.12463m, 350.2209m, -30.846375m, -373.6266m, -203.20139m, 325.81915m, 302.42157m);
            Fp b2 = (114.13196m);
            bool4x4 r2 = bool4x4(true, false, true, false, true, true, false, false, false, true, true, false, false, false, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp4x4 a3 = Fp4x4(73.06976m, 310.4131m, 352.63312m, 97.456726m, -125.407074m, -499.37122m, 282.78357m, -304.74915m, 336.32172m, 317.07233m, 447.44354m, -372.33264m, 426.5207m, -219.40714m, 424.89008m, 208.1643m);
            Fp b3 = (83.9668m);
            bool4x4 r3 = bool4x4(false, true, true, true, false, false, true, false, true, true, true, false, true, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_greater_equal_scalar_wide()
        {
            Fp a0 = (66.15973m);
            Fp4x4 b0 = Fp4x4(228.81372m, -371.95468m, 184.22943m, 266.50446m, 225.0069m, -488.35345m, -52.242126m, 451.52258m, 52.532227m, 45.85956m, -379.48004m, 401.27222m, 172.98633m, 370.27435m, 192.75183m, 481.17358m);
            bool4x4 r0 = bool4x4(false, true, false, false, false, true, true, false, true, true, true, false, false, false, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp a1 = (15.350586m);
            Fp4x4 b1 = Fp4x4(128.0401m, -165.92456m, -76.330444m, -327.95792m, 356.7912m, -9.228088m, -284.01025m, 313.27112m, -90.26172m, -321.32925m, -57.97351m, -106.32416m, -178.8837m, 209.28741m, 70.184814m, 105.86798m);
            bool4x4 r1 = bool4x4(false, true, true, true, false, true, true, false, true, true, true, true, true, false, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp a2 = (247.28058m);
            Fp4x4 b2 = Fp4x4(-206.20792m, 390.3213m, -330.80444m, -215.23157m, 188.87732m, -257.55756m, 372.47803m, 159.56116m, -240.46237m, 378.38586m, -419.5253m, 176.80475m, -218.40143m, 235.4201m, -200.84158m, 448.58197m);
            bool4x4 r2 = bool4x4(true, false, true, true, true, true, false, true, true, false, true, true, true, true, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp a3 = (468.20013m);
            Fp4x4 b3 = Fp4x4(-389.18036m, -389.29868m, 214.6178m, -117.882355m, 384.02252m, 149.27344m, -43.760284m, 465.23328m, -196.73141m, 344.97583m, -506.26862m, 45.84674m, -280.5841m, 348.57214m, 62.335205m, -216.5958m);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_add_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(149.59412m, 261.85114m, 134.76111m, 296.27722m, -87.83832m, 262.9261m, -230.0998m, -408.89618m, -478.518m, 195.41254m, -321.6739m, 350.58875m, 113.98291m, -90.31268m, -423.45035m, -448.143m);
            Fp4x4 b0 = Fp4x4(82.11688m, -336.5427m, -203.66907m, 348.16364m, 417.2708m, 96.18884m, -128.52588m, 215.17627m, 292.04285m, 113.43524m, 155.31805m, -440.69635m, -165.62283m, 32.225952m, -454.52457m, -508.79465m);
            Fp4x4 r0 = Fp4x4(231.711m, -74.69156m, -68.90796m, 644.44086m, 329.4325m, 359.11493m, -358.62567m, -193.71991m, -186.47516m, 308.84778m, -166.35583m, -90.107605m, -51.639923m, -58.08673m, -877.9749m, -956.9376m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp4x4 a1 = Fp4x4(438.0074m, -54.86862m, -195.57837m, 164.81592m, -389.52502m, 497.3791m, 428.81763m, 40.856934m, 233.47986m, 316.9823m, 174.2768m, 433.16278m, 243.52814m, 61.474426m, 398.64362m, 259.61395m);
            Fp4x4 b1 = Fp4x4(-153.16425m, -372.93164m, 180.11145m, -34.079956m, -110.680084m, -490.98834m, -308.06354m, 242.1145m, 255.45197m, -106.347046m, -212.55377m, 506.27606m, 190.54742m, -211.61603m, -247.94873m, -145.31372m);
            Fp4x4 r1 = Fp4x4(284.84314m, -427.80026m, -15.466919m, 130.73596m, -500.2051m, 6.390747m, 120.75409m, 282.97144m, 488.93182m, 210.63525m, -38.276978m, 939.43884m, 434.07556m, -150.1416m, 150.69489m, 114.30023m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp4x4 a2 = Fp4x4(353.41382m, 170.18146m, 438.34277m, -101.24536m, -384.77304m, -9.039703m, 169.93896m, -357.51395m, 305.52026m, 310.7461m, -259.50687m, -171.07147m, -74.32706m, -104.45975m, -393.36298m, 79.27643m);
            Fp4x4 b2 = Fp4x4(259.72076m, 435.06445m, 476.03546m, -146.62946m, -282.5075m, 301.00616m, 329.5771m, -89.95358m, 179.57281m, -166.90231m, 170.20404m, 138.56116m, -49.144684m, 125.87421m, -135.56805m, 370.4237m);
            Fp4x4 r2 = Fp4x4(613.1346m, 605.2459m, 914.37823m, -247.87482m, -667.2805m, 291.96646m, 499.51605m, -447.46753m, 485.09308m, 143.84378m, -89.302826m, -32.510315m, -123.47174m, 21.41446m, -528.931m, 449.70013m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp4x4 a3 = Fp4x4(141.70593m, -332.40216m, 33.755005m, 315.7718m, -155.30267m, -233.574m, 308.4859m, -175.6629m, 36.0614m, -5.1362915m, -46.694855m, -397.80685m, -81.20773m, -2.60849m, 68.49518m, -265.2665m);
            Fp4x4 b3 = Fp4x4(130.69281m, -342.90314m, 117.79248m, 269.4444m, -48.388214m, -55.2157m, -379.84338m, 425.951m, -360.572m, -292.92917m, -85.4837m, -328.79022m, -480.3797m, -24.512573m, 284.88043m, 262.79504m);
            Fp4x4 r3 = Fp4x4(272.39874m, -675.3053m, 151.54749m, 585.2162m, -203.69089m, -288.7897m, -71.35748m, 250.28809m, -324.5106m, -298.06546m, -132.17856m, -726.59705m, -561.5874m, -27.121063m, 353.3756m, -2.471466m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_add_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(-363.30127m, 85.21643m, 307.5595m, -324.80725m, 213.70538m, 85.79199m, -287.34515m, 389.57996m, 474.44275m, 286.0359m, -410.64044m, -86.13693m, 429.21674m, 222.11395m, 192.88623m, 167.73853m);
            Fp b0 = (84.48932m);
            Fp4x4 r0 = Fp4x4(-278.81195m, 169.70575m, 392.04883m, -240.31793m, 298.1947m, 170.28131m, -202.85583m, 474.06927m, 558.93207m, 370.5252m, -326.15112m, -1.6476135m, 513.70605m, 306.60327m, 277.37555m, 252.22784m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp4x4 a1 = Fp4x4(114.861084m, 160.07806m, -12.338318m, -398.42938m, -175.8247m, 457.7224m, 507.90253m, -477.5033m, -375.98926m, 482.24597m, -182.66864m, 387.1908m, -323.7256m, 183.09943m, -389.15732m, 42.869568m);
            Fp b1 = (-501.71588m);
            Fp4x4 r1 = Fp4x4(-386.8548m, -341.63782m, -514.0542m, -900.14526m, -677.5406m, -43.99347m, 6.1866455m, -979.2192m, -877.70514m, -19.46991m, -684.3845m, -114.525085m, -825.44147m, -318.61646m, -890.87317m, -458.8463m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp4x4 a2 = Fp4x4(-385.58276m, 323.4098m, 339.8897m, -161.7283m, 506.92566m, -37.201538m, 445.74646m, -77.56369m, 175.09296m, -228.52725m, 117.83142m, -248.03946m, -482.5395m, 215.46735m, 114.69861m, -28.614655m);
            Fp b2 = (-165.13174m);
            Fp4x4 r2 = Fp4x4(-550.7145m, 158.27805m, 174.75797m, -326.86005m, 341.7939m, -202.33328m, 280.61472m, -242.69543m, 9.961212m, -393.659m, -47.300323m, -413.1712m, -647.67126m, 50.3356m, -50.433136m, -193.7464m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp4x4 a3 = Fp4x4(-297.5697m, -36.866272m, 398.6939m, -476.8719m, -251.686m, 139.49396m, 311.65698m, -359.30396m, 77.6947m, 115.54602m, 407.3235m, -509.61084m, 286.16833m, -409.06354m, 490.51685m, 382.99347m);
            Fp b3 = (262.85773m);
            Fp4x4 r3 = Fp4x4(-34.711975m, 225.99146m, 661.55164m, -214.01416m, 11.171722m, 402.35168m, 574.5147m, -96.44623m, 340.55243m, 378.40375m, 670.1812m, -246.75311m, 549.02606m, -146.20581m, 753.3746m, 645.8512m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_add_scalar_wide()
        {
            Fp a0 = (-510.89264m);
            Fp4x4 b0 = Fp4x4(130.32959m, 272.09174m, 331.812m, -379.09714m, 397.8896m, -333.4043m, -9.8524475m, 236.39392m, -45.938232m, -418.6372m, -504.4516m, 474.44263m, -500.95m, -202.51782m, -32.80835m, 113.29993m);
            Fp4x4 r0 = Fp4x4(-380.56305m, -238.8009m, -179.08063m, -889.98975m, -113.00305m, -844.29694m, -520.7451m, -274.49872m, -556.8309m, -929.52985m, -1015.34424m, -36.450012m, -1011.84265m, -713.41046m, -543.701m, -397.5927m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp a1 = (-390.25403m);
            Fp4x4 b1 = Fp4x4(114.28601m, 305.88098m, 467.55792m, 55.11212m, -58.26184m, 259.49323m, 167.08618m, 473.4843m, -351.8205m, 443.01263m, -388.40283m, -58.419525m, 37.049866m, 25.75061m, -475.7782m, 280.8266m);
            Fp4x4 r1 = Fp4x4(-275.96802m, -84.37305m, 77.303894m, -335.1419m, -448.51587m, -130.7608m, -223.16785m, 83.230286m, -742.0745m, 52.758606m, -778.65686m, -448.67355m, -353.20416m, -364.50342m, -866.0322m, -109.42743m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp a2 = (-155.1466m);
            Fp4x4 b2 = Fp4x4(-261.24048m, -306.7414m, 168.45288m, 207.63892m, -206.38287m, -106.55582m, -46.857513m, -317.88055m, -244.52982m, 70.37067m, -18.837555m, -511.2447m, -230.74527m, 131.0094m, 284.31146m, -115.22104m);
            Fp4x4 r2 = Fp4x4(-416.3871m, -461.888m, 13.306274m, 52.49231m, -361.52948m, -261.70242m, -202.00412m, -473.02716m, -399.67642m, -84.77594m, -173.98416m, -666.3913m, -385.89188m, -24.137207m, 129.16486m, -270.36765m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp a3 = (-247.34314m);
            Fp4x4 b3 = Fp4x4(-138.56165m, -64.45004m, -64.91516m, -54.00476m, -323.40857m, -499.40152m, -347.27414m, -340.58148m, 237.71008m, -264.4169m, -133.44962m, -217.18655m, 429.0119m, 67.61218m, 483.3266m, -318.38397m);
            Fp4x4 r3 = Fp4x4(-385.9048m, -311.79318m, -312.2583m, -301.3479m, -570.7517m, -746.7446m, -594.6173m, -587.9246m, -9.633057m, -511.76004m, -380.79276m, -464.5297m, 181.66876m, -179.73096m, 235.98346m, -565.7271m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_sub_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(-493.45367m, -228.40881m, 463.7627m, 280.9309m, -394.85977m, -289.75592m, 248.1676m, 499.35565m, -272.3052m, -342.8852m, 328.01593m, -486.20126m, -428.74026m, -42.623505m, -502.78284m, -276.01123m);
            Fp4x4 b0 = Fp4x4(-470.96182m, 95.77942m, 189.22583m, -88.87137m, -353.6308m, -352.10352m, 346.07532m, -379.2524m, -63.3519m, 326.07965m, 57.516968m, -5.383026m, 204.36798m, -478.10825m, -341.72345m, 407.61432m);
            Fp4x4 r0 = Fp4x4(-22.491852m, -324.18823m, 274.53687m, 369.80228m, -41.228973m, 62.347595m, -97.907715m, 878.60803m, -208.95331m, -668.96484m, 270.49896m, -480.81824m, -633.1083m, 435.48474m, -161.05939m, -683.62555m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp4x4 a1 = Fp4x4(-211.62009m, -347.22595m, -158.27963m, -173.81665m, -70.89194m, -173.12573m, -264.8333m, -74.43515m, -51.254578m, 108.359985m, -60.07065m, -330.40884m, -496.76056m, 12.519653m, -280.15063m, -98.08853m);
            Fp4x4 b1 = Fp4x4(310.6997m, 48.0141m, -163.44263m, 488.14728m, 180.8819m, 343.0777m, 319.71008m, 489.9417m, -263.96368m, 41.593506m, 480.24548m, -38.970642m, 288.97418m, -252.60535m, 247.03918m, 458.86365m);
            Fp4x4 r1 = Fp4x4(-522.3198m, -395.24005m, 5.1629944m, -661.9639m, -251.77383m, -516.2034m, -584.5434m, -564.37683m, 212.7091m, 66.76648m, -540.31616m, -291.4382m, -785.73474m, 265.125m, -527.1898m, -556.95215m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp4x4 a2 = Fp4x4(434.38043m, 371.51654m, 181.30127m, 291.02722m, -401.53528m, -115.02838m, -281.3573m, -252.54971m, -233.19684m, 85.14636m, 61.916565m, -44.315033m, 129.10852m, 32.77466m, 336.03772m, 256.2979m);
            Fp4x4 b2 = Fp4x4(-185.37024m, 449.4679m, -60.658478m, 403.13745m, -319.03247m, -364.86603m, -317.27893m, -236.45035m, -20.565216m, 273.18085m, 194.3952m, -179.8656m, 203.74469m, 64.746155m, -433.2113m, 194.06891m);
            Fp4x4 r2 = Fp4x4(619.7507m, -77.951355m, 241.95975m, -112.11023m, -82.50281m, 249.83765m, 35.92163m, -16.099365m, -212.63162m, -188.03448m, -132.47864m, 135.55057m, -74.63617m, -31.971497m, 769.249m, 62.229004m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp4x4 a3 = Fp4x4(-233.02954m, 420.69727m, 460.19354m, -203.35962m, -42.990906m, -68.871216m, 83.273926m, -269.61334m, 29.523926m, 492.5915m, -350.10718m, -115.05289m, 370.94482m, -191.64066m, 418.56683m, -444.90027m);
            Fp4x4 b3 = Fp4x4(-119.98941m, 432.53693m, -11.903046m, -502.5961m, 217.22253m, -253.03818m, -477.54285m, 332.51837m, -263.03m, 252.41455m, 140.73065m, -272.01477m, 39.38214m, 489.55664m, -285.71893m, -480.32397m);
            Fp4x4 r3 = Fp4x4(-113.04013m, -11.839661m, 472.0966m, 299.23648m, -260.21344m, 184.16696m, 560.8168m, -602.1317m, 292.55392m, 240.17694m, -490.83783m, 156.96188m, 331.56268m, -681.19727m, 704.28577m, 35.423706m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_sub_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(-483.1618m, 208.13171m, -387.3754m, -336.09125m, 167.81488m, -376.95837m, 348.0346m, -303.7441m, 237.17828m, 276.68842m, -357.72092m, 308.1668m, 243.65826m, 246.66418m, -157.99301m, 350.88452m);
            Fp b0 = (-369.26047m);
            Fp4x4 r0 = Fp4x4(-113.90134m, 577.3922m, -18.11493m, 33.16922m, 537.0753m, -7.6979065m, 717.29504m, 65.51636m, 606.4387m, 645.94885m, 11.539551m, 677.42725m, 612.9187m, 615.9247m, 211.26746m, 720.145m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp4x4 a1 = Fp4x4(498.3803m, 334.32684m, -164.35855m, 385.76703m, 238.23523m, -130.01239m, -231.33072m, 391.2126m, -119.787445m, -302.35925m, -145.07779m, -73.66461m, -177.00601m, -481.27005m, 379.8385m, 181.22339m);
            Fp b1 = (183.44073m);
            Fp4x4 r1 = Fp4x4(314.93958m, 150.88611m, -347.7993m, 202.3263m, 54.794495m, -313.45312m, -414.77145m, 207.77185m, -303.22818m, -485.8m, -328.51852m, -257.10535m, -360.44675m, -664.7108m, 196.39777m, -2.2173462m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp4x4 a2 = Fp4x4(134.36224m, -420.2645m, -479.589m, -332.15436m, -391.54102m, 191.87445m, 411.00452m, -499.14108m, 281.05786m, 260.49707m, -217.60062m, -443.27805m, 42.814636m, -446.67798m, -190.90964m, -216.7891m);
            Fp b2 = (133.43787m);
            Fp4x4 r2 = Fp4x4(0.92437744m, -553.7024m, -613.02686m, -465.59222m, -524.9789m, 58.436584m, 277.56665m, -632.579m, 147.62m, 127.059204m, -351.03848m, -576.71594m, -90.62323m, -580.11584m, -324.3475m, -350.22696m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp4x4 a3 = Fp4x4(135.10205m, -109.734436m, 324.78192m, -356.92883m, -95.4957m, -173.85587m, 355.95532m, -215.30383m, -224.39764m, 437.40088m, -18.887573m, 281.92053m, -97.815704m, 245.95844m, -225.55945m, -385.05658m);
            Fp b3 = (300.84442m);
            Fp4x4 r3 = Fp4x4(-165.74237m, -410.57886m, 23.9375m, -657.77325m, -396.34012m, -474.7003m, 55.1109m, -516.14825m, -525.24207m, 136.55646m, -319.732m, -18.92389m, -398.66013m, -54.885986m, -526.4039m, -685.901m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_sub_scalar_wide()
        {
            Fp a0 = (-400.4135m);
            Fp4x4 b0 = Fp4x4(-434.79865m, -476.15903m, 360.5266m, 427.36743m, 34.250977m, -102.27759m, -235.2923m, -404.2934m, 53.207886m, -349.06525m, 180.38147m, 508.37018m, 59.979797m, 278.88702m, 184.60626m, 476.90186m);
            Fp4x4 r0 = Fp4x4(34.38513m, 75.745514m, -760.9401m, -827.78094m, -434.6645m, -298.13593m, -165.12122m, 3.8798828m, -453.6214m, -51.348267m, -580.795m, -908.7837m, -460.3933m, -679.30054m, -585.0198m, -877.31537m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp a1 = (413.65137m);
            Fp4x4 b1 = Fp4x4(336.2138m, -11.193787m, -247.1394m, -336.0969m, -210.80411m, 498.80597m, 490.13202m, 413.41382m, -404.97784m, 323.63397m, 241.0108m, 277.08936m, 156.94482m, -0.57788086m, 167.80084m, 239.34027m);
            Fp4x4 r1 = Fp4x4(77.43756m, 424.84515m, 660.7908m, 749.7483m, 624.45544m, -85.1546m, -76.48065m, 0.23754883m, 818.6292m, 90.017395m, 172.64056m, 136.56201m, 256.70654m, 414.22925m, 245.85052m, 174.3111m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp a2 = (7.104553m);
            Fp4x4 b2 = Fp4x4(-43.08737m, 436.67523m, 214.51788m, 0.8171997m, 70.89612m, 492.93268m, 53.249023m, -24.40625m, 433.5536m, 268.82m, -348.7055m, -467.96915m, 65.82904m, -399.74887m, 262.8744m, -171.33105m);
            Fp4x4 r2 = Fp4x4(50.191925m, -429.57068m, -207.41333m, 6.2873535m, -63.791565m, -485.82812m, -46.14447m, 31.510803m, -426.44904m, -261.71545m, 355.81006m, 475.0737m, -58.724487m, 406.85342m, -255.76984m, 178.43561m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp a3 = (129.06506m);
            Fp4x4 b3 = Fp4x4(1.7630005m, 28.37622m, -75.82001m, 447.68335m, 288.00543m, -462.965m, 382.3946m, -498.04642m, -72.77121m, 86.08844m, 35.6969m, -169.38275m, 408.26306m, 163.51263m, -499.4194m, -242.97012m);
            Fp4x4 r3 = Fp4x4(127.30206m, 100.68884m, 204.88507m, -318.6183m, -158.94037m, 592.03m, -253.32953m, 627.11145m, 201.83627m, 42.976624m, 93.368164m, 298.4478m, -279.198m, -34.44757m, 628.4845m, 372.0352m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_mul_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(-326.98944m, 183.26929m, -95.33392m, -352.96515m, -222.24484m, 237.92462m, -66.21646m, -462.0301m, -500.88995m, 435.0948m, 252.29065m, -6.518158m, 322.92114m, 82.13257m, -243.62183m, -397.79288m);
            Fp4x4 b0 = Fp4x4(351.58496m, 113.25659m, 286.7157m, 288.06653m, 327.3562m, 406.58655m, -200.43045m, 386.18604m, 363.50323m, 324.0984m, 356.03528m, -241.42923m, -351.41443m, -257.6211m, -54.470886m, -133.72797m);
            Fp4x4 r0 = Fp4x4(-114964.57m, 20756.455m, -27333.732m, -101677.445m, -72753.23m, 96736.95m, 13271.795m, -178429.56m, -182075.12m, 141013.52m, 89824.375m, 1573.6738m, -113479.15m, -21159.082m, 13270.297m, 53196.03m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp4x4 a1 = Fp4x4(-227.1383m, -58.505035m, 79.093445m, 421.37585m, 272.33777m, -359.5229m, 412.57416m, 390.20898m, 262.00195m, 0.791626m, 269.64508m, -72.31424m, -153.89685m, 302.33545m, -307.41687m, 19.688354m);
            Fp4x4 b1 = Fp4x4(-409.5271m, 505.06732m, -170.17267m, 133.84436m, 292.0456m, 392.42755m, 162.28137m, -168.54077m, 414.51172m, 82.95386m, 3.3320312m, -171.02472m, -87.30148m, -255.9195m, 416.65594m, 344.226m);
            Fp4x4 r1 = Fp4x4(93019.29m, -29548.982m, -13459.543m, 56398.78m, 79535.05m, -141086.69m, 66953.1m, -65766.125m, 108602.88m, 65.66843m, 898.4658m, 12367.522m, 13435.423m, -77373.54m, -128087.07m, 6777.2437m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp4x4 a2 = Fp4x4(213.14911m, 121.72485m, 370.0746m, -204.90741m, 454.12738m, -460.23938m, 203.55817m, -142.00342m, -229.62341m, -7.623047m, 456.7375m, 108.62695m, 174.78717m, 146.96411m, 39.49182m, -70.73874m);
            Fp4x4 b2 = Fp4x4(-140.34741m, -168.68939m, -455.09738m, 181.28271m, -210.74957m, 472.24512m, 113.05426m, -351.3603m, -261.32666m, -146.13354m, 31.253235m, 281.52972m, -399.48032m, -345.60504m, 165.29535m, 367.68182m);
            Fp4x4 r2 = Fp4x4(-29914.926m, -20533.691m, -168419.97m, -37146.17m, -95707.15m, -217345.8m, 23013.117m, 49894.363m, 60006.72m, 1113.9829m, 14274.524m, 30581.717m, -69824.03m, -50791.54m, 6527.8145m, -26009.348m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp4x4 a3 = Fp4x4(-239.64276m, -332.7215m, -471.44348m, -26.615356m, 107.41913m, 140.82648m, -48.42862m, 137.41711m, -457.29807m, 485.70392m, -87.72101m, 399.48853m, 263.02563m, 168.5235m, -90.06152m, -370.2091m);
            Fp4x4 b3 = Fp4x4(-191.7489m, 40.92157m, 46.898376m, 205.0993m, 331.5089m, -31.605316m, -32.559326m, 245.04889m, 141.69574m, 465.9098m, -346.1781m, -330.10416m, 352.1952m, 257.55493m, -371.30237m, -223.16794m);
            Fp4x4 r3 = Fp4x4(45951.234m, -13615.486m, -22109.934m, -5458.791m, 35610.4m, -4450.865m, 1576.8032m, 33673.91m, -64797.188m, 226294.2m, 30367.092m, -131872.83m, 92636.37m, 43404.06m, 33440.06m, 82618.805m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4x4_operator_mul_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(398.63098m, 133.9815m, 100.58301m, 289.0614m, -66.26727m, -440.14893m, 265.87543m, 258.4983m, -59.58963m, 338.4347m, -313.44278m, -256.9532m, 383.3626m, -297.26385m, 206.87476m, 460.85834m);
            Fp b0 = (188.26575m);
            Fp4x4 r0 = Fp4x4(75048.56m, 25224.129m, 18936.336m, 54420.36m, -12475.857m, -82864.97m, 50055.234m, 48666.375m, -11218.687m, 63715.66m, -59010.54m, -48375.484m, 72174.05m, -55964.6m, 38947.43m, 86763.836m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp4x4 a1 = Fp4x4(-33.312927m, -417.235m, -454.5296m, 22.078491m, 90.67731m, -353.6305m, 55.33612m, 67.805725m, 265.92883m, -257.91882m, 383.11536m, 387.38086m, 384.8125m, 414.6073m, 498.15466m, 233.70929m);
            Fp b1 = (-508.58292m);
            Fp4x4 r1 = Fp4x4(16942.385m, 212198.58m, 231165.98m, -11228.743m, -46116.93m, 179850.42m, -28143.006m, -34484.832m, -135246.86m, 131173.11m, -194845.92m, -197015.28m, -195709.06m, -210862.19m, -253352.95m, -118860.555m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp4x4 a2 = Fp4x4(-203.77933m, -35.77603m, -429.17346m, 449.79498m, -276.17242m, 171.27441m, 165.24231m, -190.5217m, -458.19623m, -215.45883m, 118.29358m, -8.003906m, 465.33032m, -249.69058m, 329.82104m, 447.44873m);
            Fp b2 = (-454.85236m);
            Fp4x4 r2 = Fp4x4(92689.51m, 16272.8125m, 195210.56m, -204590.31m, 125617.68m, -77904.57m, -75160.85m, 86659.24m, 208411.64m, 98001.96m, -53806.113m, 3640.5957m, -211656.6m, 113572.35m, -150019.88m, -203523.11m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp4x4 a3 = Fp4x4(-8.64975m, -478.3301m, 489.3354m, -135.44751m, -414.41153m, -24.388m, -466.7531m, -290.74432m, 179.8039m, 329.7699m, 394.76013m, 383.11743m, 67.59784m, 435.8274m, -299.59747m, 21.337524m);
            Fp b3 = (159.77039m);
            Fp4x4 r3 = Fp4x4(-1381.9739m, -76422.984m, 78181.305m, -21640.5m, -66210.69m, -3896.4802m, -74573.33m, -46452.332m, 28727.338m, 52687.465m, 63070.98m, 61210.82m, 10800.133m, 69632.31m, -47866.805m, 3409.1045m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4x4_operator_mul_scalar_wide()
        {
            Fp a0 = (291.10083m);
            Fp4x4 b0 = Fp4x4(85.88977m, -2.0483398m, -372.21533m, -32.73163m, -458.91272m, -425.4938m, 127.91998m, 166.95068m, -505.2238m, -52.959717m, 493.21753m, -320.13397m, 459.70593m, -309.70544m, -463.31314m, 124.56317m);
            Fp4x4 r0 = Fp4x4(25002.584m, -596.27344m, -108352.195m, -9528.204m, -133589.88m, -123861.6m, 37237.613m, 48599.484m, -147071.06m, -15416.617m, 143576.03m, -93191.266m, 133820.78m, -90155.516m, -134870.84m, 36260.44m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp a1 = (393.03064m);
            Fp4x4 b1 = Fp4x4(321.9226m, 324.49915m, 217.63403m, -343.80927m, 305.8797m, 312.56818m, -404.74002m, 86.315735m, -316.86298m, 242.69629m, 278.34778m, 185.50299m, -128.3453m, 336.5357m, -161.05597m, -490.4827m);
            Fp4x4 r1 = Fp4x4(126525.445m, 127538.11m, 85536.84m, -135127.58m, 120220.09m, 122848.87m, -159075.23m, 33924.727m, -124536.86m, 95387.08m, 109399.2m, 72908.36m, -50443.637m, 132268.84m, -63299.93m, -192774.73m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp a2 = (336.52277m);
            Fp4x4 b2 = Fp4x4(-449.29254m, -310.26248m, -17.471497m, -220.7156m, -161.46277m, 74.024414m, -469.40152m, 260.23444m, -321.9057m, -158.21378m, 114.330505m, -120.21582m, -337.7763m, -161.93655m, 211.29724m, -78.268585m);
            Fp4x4 r2 = Fp4x4(-151197.17m, -104410.39m, -5879.556m, -74275.83m, -54335.9m, 24910.9m, -157964.3m, 87574.81m, -108328.59m, -53242.54m, 38474.816m, -40455.36m, -113669.414m, -54495.336m, 71106.336m, -26339.16m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp a3 = (157.67505m);
            Fp4x4 b3 = Fp4x4(-436.1093m, -234.8489m, -371.2535m, 122.910095m, 292.01013m, 197.38348m, -479.47534m, 392.95264m, 369.95026m, -156.19006m, 361.5722m, 493.4477m, 135.12152m, 122.50458m, 142.2735m, -341.6513m);
            Fp4x4 r3 = Fp4x4(-68763.555m, -37029.812m, -58537.414m, 19379.855m, 46042.71m, 31122.451m, -75601.3m, 61958.83m, 58331.926m, -24627.275m, 57010.914m, 77804.39m, 21305.293m, 19315.916m, 22432.98m, -53869.887m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4x4_operator_div_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(-434.30182m, -58.547546m, -242.22162m, -61.09958m, 507.04565m, 55.52173m, 84.16864m, 121.1817m, -251.65366m, 232.27637m, -11.3958435m, 29.057007m, 322.31866m, -203.0835m, -48.977356m, 42.2453m);
            Fp4x4 b0 = Fp4x4(-418.87305m, 154.74506m, 228.1217m, 170.04639m, -183.44586m, 254.94373m, -327.2115m, -54.62494m, 345.10803m, 82.34033m, -104.82977m, -236.51917m, 359.3108m, 322.64587m, 371.59705m, -355.33997m);
            Fp4x4 r0 = Fp4x4(1.036834m, -0.3783484m, -1.0618087m, -0.35931125m, -2.764007m, 0.21778034m, -0.2572301m, -2.2184317m, -0.72920257m, 2.8209307m, 0.10870808m, -0.12285265m, 0.897047m, -0.62943155m, -0.13180234m, -0.11888699m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp4x4 a1 = Fp4x4(-38.711334m, -135.21942m, -482.07678m, 242.29352m, 475.21832m, 136.9826m, 469.2395m, 122.68744m, -20.497894m, -467.7096m, -221.04147m, 267.99823m, 64.06995m, 344.4264m, -80.7948m, -292.97626m);
            Fp4x4 b1 = Fp4x4(-239.45645m, -266.5359m, -357.02856m, -399.5715m, 476.43823m, 479.14832m, 31.718567m, -67.50827m, -476.12637m, -14.658966m, 455.77832m, 182.52795m, -334.02838m, -89.53241m, 128.25458m, -376.5514m);
            Fp4x4 r1 = Fp4x4(0.16166335m, 0.50732166m, 1.3502471m, -0.6063834m, 0.9974395m, 0.2858877m, 14.793843m, -1.817369m, 0.043051373m, 31.906042m, -0.48497584m, 1.4682585m, -0.1918099m, -3.8469465m, -0.6299565m, 0.7780512m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp4x4 a2 = Fp4x4(286.30884m, -218.34494m, 320.00793m, -84.54816m, -409.18546m, 119.12207m, 270.18762m, -193.7587m, -275.37662m, -168.85626m, 327.30664m, 377.70154m, 4.545288m, 181.39417m, -189.45496m, 193.22327m);
            Fp4x4 b2 = Fp4x4(-101.138336m, -188.37494m, -124.28238m, -406.6251m, 119.84784m, 24.165955m, 61.90869m, -221.39993m, 376.42474m, -84.85095m, -455.09573m, 17.510376m, 194.25262m, 363.9516m, -180.17407m, -165.03625m);
            Fp4x4 r2 = Fp4x4(-2.8308637m, 1.1590976m, -2.5748456m, 0.20792656m, -3.414208m, 4.929334m, 4.364292m, 0.87515247m, -0.7315582m, 1.9900337m, -0.71920395m, 21.570156m, 0.02339885m, 0.49840188m, 1.0515107m, -1.1707928m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp4x4 a3 = Fp4x4(257.41443m, -319.16052m, -261.93646m, 124.483826m, 120.42175m, -117.47348m, -175.34375m, 424.34033m, 371.7303m, -326.15582m, -214.88919m, -191.85806m, 33.160156m, 319.07977m, 206.32349m, 294.82983m);
            Fp4x4 b3 = Fp4x4(1.5340576m, 58.37787m, -200.93765m, -408.2155m, 450.91553m, 171.11066m, -268.1677m, -509.83875m, 53.826294m, 54.780457m, 303.8747m, 229.40454m, 276.1447m, -386.24472m, 63.500244m, 282.9886m);
            Fp4x4 r3 = Fp4x4(167.79971m, -5.4671493m, 1.3035709m, -0.30494633m, 0.26706055m, -0.6865351m, 0.6538586m, -0.83230305m, 6.90611m, -5.9538717m, -0.7071638m, -0.8363307m, 0.12008253m, -0.8261078m, 3.2491763m, 1.0418435m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_div_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(338.5183m, 342.57233m, -162.55743m, 62.311157m, -435.44455m, 124.90289m, 336.1009m, -230.52808m, -93.8689m, -125.544495m, -412.19177m, -377.6493m, -358.36334m, -439.82245m, -253.62341m, -156.09784m);
            Fp b0 = (18.585693m);
            Fp4x4 r0 = Fp4x4(18.213919m, 18.432045m, -8.746374m, 3.3526409m, -23.429018m, 6.7203784m, 18.08385m, -12.403523m, -5.0505996m, -6.7548995m, -22.177906m, -20.319355m, -19.281677m, -23.66457m, -13.646164m, -8.398817m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp4x4 a1 = Fp4x4(115.1026m, 6.3016357m, 484.37848m, -506.15454m, -283.2752m, 219.09784m, -11.390045m, -192.22711m, 244.88446m, 145.513m, 89.89917m, -377.98132m, -49.026733m, -204.02267m, 404.14398m, -215.7409m);
            Fp b1 = (-68.532166m);
            Fp4x4 r1 = Fp4x4(-1.6795412m, -0.091951504m, -7.0678997m, 7.385649m, 4.1334634m, -3.1970074m, 0.16619998m, 2.804918m, -3.5732777m, -2.1232803m, -1.3117807m, 5.5153856m, 0.7153828m, 2.9770353m, -5.897143m, 3.148024m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp4x4 a2 = Fp4x4(-93.07489m, -14.345093m, -474.1825m, 276.6983m, -61.30887m, -489.2709m, -321.411m, 84.750244m, 352.727m, 491.47058m, 200.21655m, 482.09705m, -180.04575m, 222.72388m, -320.0974m, -434.30676m);
            Fp b2 = (-235.54022m);
            Fp4x4 r2 = Fp4x4(0.39515498m, 0.060902942m, 2.01317m, -1.1747391m, 0.26029044m, 2.0772288m, 1.3645695m, -0.3598122m, -1.4975234m, -2.0865676m, -0.85003126m, -2.0467715m, 0.7643949m, -0.94558746m, 1.3589926m, 1.8438752m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp4x4 a3 = Fp4x4(-172.2522m, 506.38116m, -480.5987m, 332.67285m, -210.1391m, -388.52557m, 360.83258m, -257.46173m, -168.32901m, 491.3899m, -265.79828m, -364.54675m, 467.15784m, -433.52182m, -304.33575m, 350.0916m);
            Fp b3 = (-191.13495m);
            Fp4x4 r3 = Fp4x4(0.9012072m, -2.6493385m, 2.514447m, -1.740513m, 1.0994279m, 2.0327291m, -1.8878419m, 1.3470155m, 0.88068146m, -2.5709054m, 1.3906314m, 1.9072741m, -2.4441257m, 2.2681453m, 1.592256m, -1.8316462m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_div_scalar_wide()
        {
            Fp a0 = (2.9528809m);
            Fp4x4 b0 = Fp4x4(260.17004m, 427.25922m, -21.09494m, -20.552216m, -133.13852m, 254.63452m, -286.85498m, 186.54468m, 172.25421m, -81.20044m, 483.28802m, 492.59583m, -428.58005m, -63.68457m, 464.9878m, 224.61633m);
            Fp4x4 r0 = Fp4x4(0.011349811m, 0.0069112163m, -0.13998052m, -0.14367701m, -0.022179013m, 0.011596546m, -0.010293985m, 0.015829349m, 0.017142575m, -0.03636533m, 0.0061099813m, 0.005994531m, -0.006889917m, -0.046367288m, 0.0063504484m, 0.0131463315m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp a1 = (360.40833m);
            Fp4x4 b1 = Fp4x4(-104.604706m, -371.11063m, -185.77655m, 472.09692m, 246.83105m, 280.94666m, 31.30542m, -239.26883m, -139.48044m, -405.13333m, -29.43277m, -456.4468m, 62.66205m, -290.4594m, -185.98166m, 120.48212m);
            Fp4x4 r1 = Fp4x4(-3.4454312m, -0.9711614m, -1.9400098m, 0.76342016m, 1.4601418m, 1.2828355m, 11.51265m, -1.5062903m, -2.5839345m, -0.8896042m, -12.245138m, -0.7895955m, 5.751621m, -1.2408216m, -1.9378703m, 2.9913845m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp a2 = (241.99762m);
            Fp4x4 b2 = Fp4x4(86.05719m, -12.824341m, 35.62915m, -120.06207m, 509.15088m, -50.303864m, -33.012024m, 293.0298m, 434.4776m, -111.848816m, 143.36371m, 430.94067m, 413.18213m, -32.590485m, -409.5517m, 136.31873m);
            Fp4x4 r2 = Fp4x4(2.8120558m, -18.87018m, 6.7921243m, -2.0156043m, 0.47529647m, -4.810716m, -7.3305902m, 0.8258465m, 0.55698526m, -2.1636136m, 1.6879978m, 0.5615567m, 0.58569235m, -7.4254074m, -0.5908842m, 1.7752339m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp a3 = (443.50647m);
            Fp4x4 b3 = Fp4x4(123.39221m, 155.34485m, -191.35544m, 42.855957m, -498.66095m, -365.68744m, 459.59967m, -293.2834m, -505.65808m, 147.76782m, 254.57782m, 130.99146m, -402.40784m, -302.74106m, 157.26971m, -139.88629m);
            Fp4x4 r3 = Fp4x4(3.5942826m, 2.8549802m, -2.3177104m, 10.348771m, -0.8893948m, -1.212802m, 0.9649843m, -1.5122113m, -0.87708765m, 3.0013738m, 1.7421254m, 3.3857665m, -1.1021318m, -1.4649696m, 2.8200374m, -3.1704783m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_mod_wide_wide()
        {
            Fp4x4 a0 = Fp4x4(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m, -385.32135m, 75.61359m, 147.87054m, -146.02231m, -188.04791m, 14.303833m, -56.95459m, -280.97797m, -139.49966m, -284.42224m);
            Fp4x4 b0 = Fp4x4(470.2685m, -371.4406m, 161.94507m, -151.37039m, 170.21747m, 453.35284m, 433.15808m, -159.1189m, 190.11346m, 46.63446m, 297.8944m, -198.62778m, -45.952698m, 401.35815m, -246.4354m, -156.38309m);
            Fp4x4 r0 = Fp4x4(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m, -385.32135m, 75.61359m, 147.87054m, -6.118927m, -188.04791m, 14.303833m, -11.001892m, -280.97797m, -139.49966m, -128.03915m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp4x4 a1 = Fp4x4(74.799805m, -157.26028m, 208.92334m, 323.4063m, -427.9572m, -270.79147m, 321.25647m, -254.9324m, -347.11957m, -33.574707m, -27.461914m, -199.8555m, -56.03534m, 197.51398m, -69.076935m, 500.12927m);
            Fp4x4 b1 = Fp4x4(33.645386m, 159.46942m, 314.51416m, 458.85156m, -95.67474m, 501.60535m, 141.61151m, 486.41327m, -299.43967m, 457.40955m, 49.858154m, 271.02557m, 448.409m, 460.18945m, 215.53345m, -330.93585m);
            Fp4x4 r1 = Fp4x4(7.509033m, -157.26028m, 208.92334m, 323.4063m, -45.25824m, -270.79147m, 38.033447m, -254.9324m, -47.6799m, -33.574707m, -27.461914m, -199.8555m, -56.03534m, 197.51398m, -69.076935m, 169.19342m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp4x4 a2 = Fp4x4(-57.36026m, -133.44693m, 78.418335m, 143.95776m, 378.70715m, -37.408386m, 56.685852m, -7.884247m, -303.02026m, 236.47766m, 299.13928m, 383.0788m, -278.49908m, -296.49524m, -394.99982m, 15.928528m);
            Fp4x4 b2 = Fp4x4(-482.11996m, 93.033264m, 428.14417m, 345.35638m, -92.87387m, 419.62683m, 24.698425m, 313.4339m, -255.39124m, -352.06m, -229.83185m, -487.05832m, 83.71417m, 272.51434m, 375.21686m, -131.49063m);
            Fp4x4 r2 = Fp4x4(-57.36026m, -40.413666m, 78.418335m, 143.95776m, 7.21167m, -37.408386m, 7.2890015m, -7.884247m, -47.62903m, 236.47766m, 69.307434m, 383.0788m, -27.356567m, -23.980896m, -19.782959m, 15.928528m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp4x4 a3 = Fp4x4(-83.804016m, 46.965637m, -236.94153m, -104.0051m, 68.60254m, -433.29755m, -424.7335m, -297.66034m, -55.706787m, 251.20972m, 491.0558m, -118.075165m, -353.1988m, -140.46768m, 212.6394m, 228.3562m);
            Fp4x4 b3 = Fp4x4(-451.85562m, 291.3764m, 164.03436m, -263.26373m, 133.06891m, -446.588m, -107.48233m, 431.26624m, 396.08008m, -325.68567m, 340.18927m, -339.5284m, -158.38861m, 506.70422m, 383.44342m, -508.50974m);
            Fp4x4 r3 = Fp4x4(-83.804016m, 46.965637m, -72.907166m, -104.0051m, 68.60254m, -433.29755m, -102.2865m, -297.66034m, -55.706787m, 251.20972m, 150.86652m, -118.075165m, -36.42157m, -140.46768m, 212.6394m, 228.3562m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_mod_wide_scalar()
        {
            Fp4x4 a0 = Fp4x4(360.08112m, 57.401245m, -85.35019m, 449.2752m, 4.46344m, 469.19336m, -152.73862m, 262.32312m, 279.7296m, -242.91284m, -24.107025m, 109.5332m, -276.18713m, 357.42072m, 510.55994m, -287.36353m);
            Fp b0 = (-297.3982m);
            Fp4x4 r0 = Fp4x4(62.682922m, 57.401245m, -85.35019m, 151.87701m, 4.46344m, 171.79517m, -152.73862m, 262.32312m, 279.7296m, -242.91284m, -24.107025m, 109.5332m, -276.18713m, 60.022522m, 213.16174m, -287.36353m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp4x4 a1 = Fp4x4(173.2602m, 36.7323m, 330.5569m, 443.2447m, 175.37036m, 496.28973m, 497.073m, -223.45349m, 34.037292m, 279.83612m, -84.645294m, -64.484924m, -208.74591m, 153.03174m, -392.8873m, -285.10107m);
            Fp b1 = (-111.50394m);
            Fp4x4 r1 = Fp4x4(61.756256m, 36.7323m, 107.54901m, 108.73288m, 63.866425m, 50.273987m, 51.05725m, -0.44561768m, 34.037292m, 56.828247m, -84.645294m, -64.484924m, -97.241974m, 41.5278m, -58.37549m, -62.0932m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp4x4 a2 = Fp4x4(496.4566m, -146.48236m, 197.93994m, 127.76233m, 113.75244m, 179.05444m, 27.126526m, 486.995m, 239.77802m, -145.02597m, 309.901m, 36.09198m, 246.49023m, 367.036m, -333.216m, -91.463715m);
            Fp b2 = (-334.78363m);
            Fp4x4 r2 = Fp4x4(161.67297m, -146.48236m, 197.93994m, 127.76233m, 113.75244m, 179.05444m, 27.126526m, 152.21136m, 239.77802m, -145.02597m, 309.901m, 36.09198m, 246.49023m, 32.25238m, -333.216m, -91.463715m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp4x4 a3 = Fp4x4(-91.38098m, 36.170105m, 82.30145m, 428.83643m, 39.231445m, 73.11151m, -70.42322m, 160.7287m, 482.4262m, -322.64276m, 443.90668m, -185.19193m, -23.524475m, 116.05542m, -143.21973m, -117.36575m);
            Fp b3 = (-128.27039m);
            Fp4x4 r3 = Fp4x4(-91.38098m, 36.170105m, 82.30145m, 44.02527m, 39.231445m, 73.11151m, -70.42322m, 32.458313m, 97.61505m, -66.10199m, 59.09552m, -56.92154m, -23.524475m, 116.05542m, -14.949341m, -117.36575m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_mod_scalar_wide()
        {
            Fp a0 = (321.83087m);
            Fp4x4 b0 = Fp4x4(-360.08008m, 271.34174m, -418.93903m, -57.065247m, -18.80716m, 10.327942m, 114.91266m, -373.9153m, -178.94406m, 11.08252m, -162.6925m, 118.41644m, -13.732086m, -58.26706m, 219.90881m, -60.29535m);
            Fp4x4 r0 = Fp4x4(321.83087m, 50.489136m, 321.83087m, 36.50464m, 2.1091614m, 1.6646729m, 92.005554m, 321.83087m, 142.88681m, 0.43780518m, 159.13837m, 84.997986m, 5.9928894m, 30.495575m, 101.92206m, 20.354126m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp a1 = (-317.5764m);
            Fp4x4 b1 = Fp4x4(-219.50665m, -362.4784m, -481.1638m, 113.84534m, 331.60565m, -180.93997m, 462.0606m, -15.502106m, 163.53247m, -417.56512m, 307.13324m, 198.07489m, 306.0138m, -494.00125m, 325.5888m, -93.9595m);
            Fp4x4 r1 = Fp4x4(-98.06973m, -317.5764m, -317.5764m, -89.88571m, -317.5764m, -136.63641m, -317.5764m, -7.5342712m, -154.04391m, -317.5764m, -10.443146m, -119.501495m, -11.562592m, -317.5764m, -317.5764m, -35.697876m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp a2 = (302.48358m);
            Fp4x4 b2 = Fp4x4(394.8454m, 383.88586m, -397.79065m, -312.3375m, -14.388428m, 471.38623m, 441.5105m, 152.63403m, -120.74936m, 30.262573m, -328.94565m, -276.52444m, 72.96094m, 491.12256m, 183.73468m, -144.66742m);
            Fp4x4 r2 = Fp4x4(302.48358m, 302.48358m, 302.48358m, 302.48358m, 0.32659912m, 302.48358m, 302.48358m, 149.84955m, 60.984863m, 30.120422m, 302.48358m, 25.959137m, 10.639832m, 302.48358m, 118.7489m, 13.148743m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp a3 = (379.18573m);
            Fp4x4 b3 = Fp4x4(19.016785m, 394.58148m, -244.59918m, -304.01447m, -179.68573m, -59.718323m, -368.99963m, 470.43683m, 329.66034m, -84.10693m, 319.77936m, -59.990204m, 27.042114m, -6.9161987m, 23.718689m, -299.62402m);
            Fp4x4 r3 = Fp4x4(17.866821m, 379.18573m, 134.58655m, 75.171265m, 19.81427m, 20.875793m, 10.186096m, 379.18573m, 49.52539m, 42.757996m, 59.406372m, 19.244507m, 0.5961304m, 5.7109985m, 23.405396m, 79.56171m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4x4_operator_plus()
        {
            Fp4x4 a0 = Fp4x4(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m, 298.37836m, 256.47144m, 167.59698m, -323.4687m, 500.9478m, -509.95538m, -135.21799m, -382.86426m, 322.83105m, -15.965393m);
            Fp4x4 r0 = Fp4x4(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m, 298.37836m, 256.47144m, 167.59698m, -323.4687m, 500.9478m, -509.95538m, -135.21799m, -382.86426m, 322.83105m, -15.965393m);
            TestUtils.AreEqual(+a0, r0);

            Fp4x4 a1 = Fp4x4(-401.84415m, -74.09299m, -399.96255m, -457.5369m, -299.72546m, -281.65063m, -477.81766m, -301.2943m, -481.5745m, 51.541565m, 22.880737m, 441.76825m, 120.826416m, -191.02594m, -311.4584m, 110.38733m);
            Fp4x4 r1 = Fp4x4(-401.84415m, -74.09299m, -399.96255m, -457.5369m, -299.72546m, -281.65063m, -477.81766m, -301.2943m, -481.5745m, 51.541565m, 22.880737m, 441.76825m, 120.826416m, -191.02594m, -311.4584m, 110.38733m);
            TestUtils.AreEqual(+a1, r1);

            Fp4x4 a2 = Fp4x4(-326.90134m, -236.8252m, 108.006165m, 123.47583m, -28.15158m, 73.70422m, 201.86536m, -374.0833m, -123.46573m, -396.68372m, 150.03204m, 188.16742m, 273.73688m, 58.68341m, 353.95337m, 251.90247m);
            Fp4x4 r2 = Fp4x4(-326.90134m, -236.8252m, 108.006165m, 123.47583m, -28.15158m, 73.70422m, 201.86536m, -374.0833m, -123.46573m, -396.68372m, 150.03204m, 188.16742m, 273.73688m, 58.68341m, 353.95337m, 251.90247m);
            TestUtils.AreEqual(+a2, r2);

            Fp4x4 a3 = Fp4x4(428.5384m, -110.35205m, 424.528m, 506.58624m, -294.03546m, 451.79242m, 316.08093m, 506.80017m, -432.5316m, 135.26459m, -236.50241m, 326.7032m, -465.22943m, 379.55725m, 300.40625m, -108.34274m);
            Fp4x4 r3 = Fp4x4(428.5384m, -110.35205m, 424.528m, 506.58624m, -294.03546m, 451.79242m, 316.08093m, 506.80017m, -432.5316m, 135.26459m, -236.50241m, 326.7032m, -465.22943m, 379.55725m, 300.40625m, -108.34274m);
            TestUtils.AreEqual(+a3, r3);
        }

        [Test]
        public static void Fp4x4_operator_neg()
        {
            Fp4x4 a0 = Fp4x4(-161.17307m, 91.577576m, -474.2732m, -138.7461m, -302.52325m, 428.21216m, 440.5053m, -457.04636m, 370.19952m, -126.07272m, 62.18921m, 176.51025m, -386.41965m, -161.73965m, -413.31476m, -179.76102m);
            Fp4x4 r0 = Fp4x4(161.17307m, -91.577576m, 474.2732m, 138.7461m, 302.52325m, -428.21216m, -440.5053m, 457.04636m, -370.19952m, 126.07272m, -62.18921m, -176.51025m, 386.41965m, 161.73965m, 413.31476m, 179.76102m);
            TestUtils.AreEqual(-a0, r0);

            Fp4x4 a1 = Fp4x4(-394.13074m, -71.36215m, 147.67554m, 356.8322m, -21.410583m, 480.02087m, 114.6911m, 355.2517m, -243.5343m, -263.83936m, 91.395386m, -428.1227m, -418.94492m, 0.4013672m, 60.900513m, 294.01508m);
            Fp4x4 r1 = Fp4x4(394.13074m, 71.36215m, -147.67554m, -356.8322m, 21.410583m, -480.02087m, -114.6911m, -355.2517m, 243.5343m, 263.83936m, -91.395386m, 428.1227m, 418.94492m, -0.4013672m, -60.900513m, -294.01508m);
            TestUtils.AreEqual(-a1, r1);

            Fp4x4 a2 = Fp4x4(-288.94208m, -17.734161m, 1.3660278m, 89.249756m, -141.22913m, -493.38446m, 230.21906m, 361.0404m, 358.10712m, -481.57816m, 39.228638m, -141.58911m, 14.299866m, 131.12927m, 275.95508m, -174.57275m);
            Fp4x4 r2 = Fp4x4(288.94208m, 17.734161m, -1.3660278m, -89.249756m, 141.22913m, 493.38446m, -230.21906m, -361.0404m, -358.10712m, 481.57816m, -39.228638m, 141.58911m, -14.299866m, -131.12927m, -275.95508m, 174.57275m);
            TestUtils.AreEqual(-a2, r2);

            Fp4x4 a3 = Fp4x4(-27.763397m, 165.0943m, -33.01825m, -6.0052795m, -59.50058m, 123.55664m, -76.964294m, 18.002258m, 453.01105m, 180.05151m, -162.89008m, 483.07635m, 277.14447m, 385.52588m, -510.71133m, 394.49518m);
            Fp4x4 r3 = Fp4x4(27.763397m, -165.0943m, 33.01825m, 6.0052795m, 59.50058m, -123.55664m, 76.964294m, -18.002258m, -453.01105m, -180.05151m, 162.89008m, -483.07635m, -277.14447m, -385.52588m, 510.71133m, -394.49518m);
            TestUtils.AreEqual(-a3, r3);
        }

        [Test]
        public static void Fp4x4_operator_prefix_inc()
        {
            Fp4x4 a0 = Fp4x4(-283.03375m, 366.7337m, -401.91684m, 187.16315m, 27.883484m, 130.98157m, -495.23444m, 224.36108m, 203.96112m, -308.8134m, 28.987854m, -483.0141m, -269.13318m, -40.76111m, 21.258972m, 193.15027m);
            Fp4x4 r0 = Fp4x4(-282.03375m, 367.7337m, -400.91684m, 188.16315m, 28.883484m, 131.98157m, -494.23444m, 225.36108m, 204.96112m, -307.8134m, 29.987854m, -482.0141m, -268.13318m, -39.76111m, 22.258972m, 194.15027m);
            TestUtils.AreEqual(++a0, r0);

            Fp4x4 a1 = Fp4x4(-143.68582m, -61.16147m, -183.26956m, 370.29773m, -180.14572m, 235.54474m, 493.35364m, 385.1552m, -135.32303m, 464.82544m, 386.85297m, -218.15811m, -507.06058m, 170.8164m, -500.54514m, -229.95221m);
            Fp4x4 r1 = Fp4x4(-142.68582m, -60.16147m, -182.26956m, 371.29773m, -179.14572m, 236.54474m, 494.35364m, 386.1552m, -134.32303m, 465.82544m, 387.85297m, -217.15811m, -506.06058m, 171.8164m, -499.54514m, -228.95221m);
            TestUtils.AreEqual(++a1, r1);

            Fp4x4 a2 = Fp4x4(480.92822m, -45.670044m, 232.49689m, 96.689026m, -64.63837m, 339.2564m, -287.92206m, -287.37982m, 448.8714m, -258.9793m, 30.043335m, -154.20187m, -511.78778m, -214.91736m, 194.84082m, 171.26593m);
            Fp4x4 r2 = Fp4x4(481.92822m, -44.670044m, 233.49689m, 97.689026m, -63.638367m, 340.2564m, -286.92206m, -286.37982m, 449.8714m, -257.9793m, 31.043335m, -153.20187m, -510.78778m, -213.91736m, 195.84082m, 172.26593m);
            TestUtils.AreEqual(++a2, r2);

            Fp4x4 a3 = Fp4x4(-137.3793m, 470.92084m, 179.48022m, -141.33148m, 272.70264m, -380.8111m, -383.2705m, 314.00793m, -348.7935m, 178.15613m, -370.0874m, -69.480804m, 199.02167m, 32.37018m, 17.53302m, 258.9381m);
            Fp4x4 r3 = Fp4x4(-136.3793m, 471.92084m, 180.48022m, -140.33148m, 273.70264m, -379.8111m, -382.2705m, 315.00793m, -347.7935m, 179.15613m, -369.0874m, -68.480804m, 200.02167m, 33.37018m, 18.53302m, 259.9381m);
            TestUtils.AreEqual(++a3, r3);
        }

        [Test]
        public static void Fp4x4_operator_postfix_inc()
        {
            Fp4x4 a0 = Fp4x4(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m, 145.12164m, -225.01251m, 375.78876m, 435.95538m, -219.50537m, -302.35114m, -167.30942m, -432.4173m, -195.24594m, 430.40125m);
            Fp4x4 r0 = Fp4x4(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m, 145.12164m, -225.01251m, 375.78876m, 435.95538m, -219.50537m, -302.35114m, -167.30942m, -432.4173m, -195.24594m, 430.40125m);
            TestUtils.AreEqual(a0++, r0);

            Fp4x4 a1 = Fp4x4(-116.777405m, -195.3482m, -190.37909m, -511.83737m, -214.7761m, -367.92316m, 425.3698m, 170.81726m, 43.400146m, -493.16553m, -73.47418m, 48.611633m, -364.19983m, 462.49628m, -326.0879m, 392.2071m);
            Fp4x4 r1 = Fp4x4(-116.777405m, -195.3482m, -190.37909m, -511.83737m, -214.7761m, -367.92316m, 425.3698m, 170.81726m, 43.400146m, -493.16553m, -73.47418m, 48.611633m, -364.19983m, 462.49628m, -326.0879m, 392.2071m);
            TestUtils.AreEqual(a1++, r1);

            Fp4x4 a2 = Fp4x4(137.73834m, 328.05072m, -421.77307m, 69.77661m, 363.83466m, 166.80347m, -75.18613m, -158.2237m, 209.37146m, 228.0227m, 50.96631m, -22.291565m, 213.3335m, -268.98807m, -432.4211m, 457.58594m);
            Fp4x4 r2 = Fp4x4(137.73834m, 328.05072m, -421.77307m, 69.77661m, 363.83466m, 166.80347m, -75.18613m, -158.2237m, 209.37146m, 228.0227m, 50.96631m, -22.291565m, 213.3335m, -268.98807m, -432.4211m, 457.58594m);
            TestUtils.AreEqual(a2++, r2);

            Fp4x4 a3 = Fp4x4(-151.09213m, 440.5094m, 333.53156m, 365.98383m, 123.22754m, 35.199585m, -303.27686m, -499.56912m, -365.54834m, -129.69327m, -293.40414m, 238.3758m, 227.98853m, 485.4591m, -405.41748m, -182.55823m);
            Fp4x4 r3 = Fp4x4(-151.09213m, 440.5094m, 333.53156m, 365.98383m, 123.22754m, 35.199585m, -303.27686m, -499.56912m, -365.54834m, -129.69327m, -293.40414m, 238.3758m, 227.98853m, 485.4591m, -405.41748m, -182.55823m);
            TestUtils.AreEqual(a3++, r3);
        }

        [Test]
        public static void Fp4x4_operator_prefix_dec()
        {
            Fp4x4 a0 = Fp4x4(127.71149m, 412.1825m, 421.8966m, -407.7751m, -148.3689m, -202.65967m, -365.90997m, 111.1109m, -473.15137m, -278.87814m, 49.586304m, -490.94742m, 437.7041m, 440.35724m, -22.001892m, 185.19067m);
            Fp4x4 r0 = Fp4x4(126.71149m, 411.1825m, 420.8966m, -408.7751m, -149.3689m, -203.65967m, -366.90997m, 110.1109m, -474.15137m, -279.87814m, 48.586304m, -491.94742m, 436.7041m, 439.35724m, -23.001892m, 184.19067m);
            TestUtils.AreEqual(--a0, r0);

            Fp4x4 a1 = Fp4x4(-135.55646m, -1.5646973m, 310.96857m, 290.07666m, 155.52148m, -183.0806m, 450.9137m, -27.427094m, 212.71722m, 299.13446m, 167.54565m, 260.42664m, 398.1562m, 405.4978m, 122.074524m, 416.10016m);
            Fp4x4 r1 = Fp4x4(-136.55646m, -2.5646973m, 309.96857m, 289.07666m, 154.52148m, -184.0806m, 449.9137m, -28.427094m, 211.71722m, 298.13446m, 166.54565m, 259.42664m, 397.1562m, 404.4978m, 121.074524m, 415.10016m);
            TestUtils.AreEqual(--a1, r1);

            Fp4x4 a2 = Fp4x4(-365.77808m, 361.9489m, 209.72174m, 137.383m, 284.3451m, 228.0152m, 163.27411m, -501.06403m, 171.1377m, -318.34418m, -114.14139m, -280.686m, 455.7815m, 305.87256m, -268.68317m, 178.64142m);
            Fp4x4 r2 = Fp4x4(-366.77808m, 360.9489m, 208.72174m, 136.383m, 283.3451m, 227.0152m, 162.27411m, -502.06403m, 170.1377m, -319.34418m, -115.14139m, -281.686m, 454.7815m, 304.87256m, -269.68317m, 177.64142m);
            TestUtils.AreEqual(--a2, r2);

            Fp4x4 a3 = Fp4x4(-94.71127m, -206.85123m, -335.73944m, 349.63483m, -148.53052m, 83.26312m, 482.98297m, 131.65204m, 150.91388m, 10.205872m, -21.455658m, 362.68433m, -359.30756m, -172.37592m, 439.51178m, -395.04758m);
            Fp4x4 r3 = Fp4x4(-95.71127m, -207.85123m, -336.73944m, 348.63483m, -149.53052m, 82.26312m, 481.98297m, 130.65204m, 149.91388m, 9.205872m, -22.455658m, 361.68433m, -360.30756m, -173.37592m, 438.51178m, -396.04758m);
            TestUtils.AreEqual(--a3, r3);
        }

        [Test]
        public static void Fp4x4_operator_postfix_dec()
        {
            Fp4x4 a0 = Fp4x4(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m, 106.726135m, -494.1874m, 442.7943m, 474.02826m, -498.21182m, -259.07544m, -407.2235m, 256.4026m, 272.2155m, -431.75604m);
            Fp4x4 r0 = Fp4x4(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m, 106.726135m, -494.1874m, 442.7943m, 474.02826m, -498.21182m, -259.07544m, -407.2235m, 256.4026m, 272.2155m, -431.75604m);
            TestUtils.AreEqual(a0--, r0);

            Fp4x4 a1 = Fp4x4(78.12311m, 453.72626m, -287.3698m, 211.68933m, 355.79425m, 405.0161m, 420.21088m, -370.72998m, 249.26392m, 180.30334m, -492.0752m, 369.93585m, -352.15085m, 98.14557m, -367.599m, -292.01447m);
            Fp4x4 r1 = Fp4x4(78.12311m, 453.72626m, -287.3698m, 211.68933m, 355.79425m, 405.0161m, 420.21088m, -370.72998m, 249.26392m, 180.30334m, -492.0752m, 369.93585m, -352.15085m, 98.14557m, -367.599m, -292.01447m);
            TestUtils.AreEqual(a1--, r1);

            Fp4x4 a2 = Fp4x4(185.35925m, 157.39807m, 413.95624m, -91.33191m, -268.11438m, -462.4564m, -216.78436m, 453.41187m, 373.06952m, -53.40094m, -196.32397m, 468.72064m, -339.4515m, 186.70697m, 448.0797m, -283.4308m);
            Fp4x4 r2 = Fp4x4(185.35925m, 157.39807m, 413.95624m, -91.33191m, -268.11438m, -462.4564m, -216.78436m, 453.41187m, 373.06952m, -53.40094m, -196.32397m, 468.72064m, -339.4515m, 186.70697m, 448.0797m, -283.4308m);
            TestUtils.AreEqual(a2--, r2);

            Fp4x4 a3 = Fp4x4(-436.14502m, -121.74011m, 190.15942m, -390.30884m, -242.66309m, -108.52286m, 243.83588m, -374.8565m, 75.359314m, 370.70947m, 86.80133m, -352.12323m, 282.94513m, -136.11731m, 381.38715m, -479.06094m);
            Fp4x4 r3 = Fp4x4(-436.14502m, -121.74011m, 190.15942m, -390.30884m, -242.66309m, -108.52286m, 243.83588m, -374.8565m, 75.359314m, 370.70947m, 86.80133m, -352.12323m, 282.94513m, -136.11731m, 381.38715m, -479.06094m);
            TestUtils.AreEqual(a3--, r3);
        }

#endif

    }
}
