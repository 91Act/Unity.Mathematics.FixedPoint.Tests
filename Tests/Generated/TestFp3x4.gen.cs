//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.FixedPoint.MathFp;
namespace Unity.Mathematics.FixedPoint.Tests
{
    [TestFixture]
    public class TestFp3x4
    {
#if ENABLE_DECIMAL
        [Test]
        public static void Fp3x4_zero()
        {
            TestUtils.AreEqual(Fp3x4.zero.c0.x, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c0.y, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c0.z, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c1.x, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c1.y, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c1.z, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c2.x, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c2.y, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c2.z, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c3.x, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c3.y, (Fp)0);
            TestUtils.AreEqual(Fp3x4.zero.c3.z, (Fp)0);
        }

        [Test]
        public static void Fp3x4_operator_equal_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(304.0451m, -242.63562m, 323.91107m, -435.55502m, 198.06403m, -117.03351m, -384.73096m, 304.45056m, 57.849m, 245.8263m, -303.59222m, -446.4428m);
            Fp3x4 b0 = Fp3x4(-264.28522m, -218.33426m, 253.03296m, 372.23932m, -171.82083m, 49.70288m, 261.85016m, -238.16519m, -368.79456m, -479.64792m, 213.87708m, -320.8371m);
            bool3x4 r0 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp3x4 a1 = Fp3x4(238.98315m, 171.6228m, -291.7655m, -139.28052m, -372.00873m, 116.63696m, -412.20416m, 189.54596m, 60.885193m, 55.26001m, 466.31592m, 274.3271m);
            Fp3x4 b1 = Fp3x4(93.80847m, 25.883423m, -489.63315m, -447.4523m, 399.854m, -88.43811m, -399.37903m, 96.70093m, -256.15207m, -480.7037m, -294.3447m, -162.43436m);
            bool3x4 r1 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp3x4 a2 = Fp3x4(-337.95966m, -335.89508m, 503.47186m, 286.8064m, -329.8424m, 54.682617m, -430.5898m, 152.00482m, 479.45966m, -90.28839m, -366.7868m, -337.961m);
            Fp3x4 b2 = Fp3x4(143.76892m, 382.4588m, 348.62878m, -421.83197m, -433.79852m, -281.89743m, 50.561584m, 175.6972m, -181.5812m, -272.58496m, -119.11133m, -54.772003m);
            bool3x4 r2 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp3x4 a3 = Fp3x4(-46.340546m, -28.533081m, -353.38293m, -275.153m, 331.48145m, -148.15692m, 358.2619m, -438.92413m, -398.9524m, -270.5957m, 57.938416m, 15.2907715m);
            Fp3x4 b3 = Fp3x4(-362.87463m, 464.55988m, -477.7391m, 21.32782m, -177.94284m, 76.465576m, -9.739319m, -208.63754m, 26.468933m, -490.40567m, -40.55661m, -501.6764m);
            bool3x4 r3 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_equal_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(-441.88464m, -84.34961m, -254.78915m, -299.5752m, 336.64435m, 27.947937m, 309.77936m, -82.85208m, 150.21582m, -192.66446m, 440.7932m, -389.2873m);
            Fp b0 = (280.80237m);
            bool3x4 r0 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp3x4 a1 = Fp3x4(-329.5147m, 90.41724m, -438.72107m, 169.65619m, -247.76123m, 231.31848m, -53.607788m, 105.0813m, -504.72043m, 34.19281m, 508.6532m, 486.59094m);
            Fp b1 = (247.63269m);
            bool3x4 r1 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp3x4 a2 = Fp3x4(400.13477m, -216.84076m, 228.36359m, 487.919m, -130.65189m, 502.62256m, 165.63971m, 253.99951m, 139.4914m, -326.13837m, -389.4206m, -441.14172m);
            Fp b2 = (-411.47345m);
            bool3x4 r2 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp3x4 a3 = Fp3x4(-21.546906m, 36.957397m, -380.5522m, 160.88977m, -20.193085m, 80.27557m, -180.76334m, 236.91956m, 254.39703m, 280.79614m, 175.90118m, 225.74805m);
            Fp b3 = (266.03882m);
            bool3x4 r3 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_equal_scalar_wide()
        {
            Fp a0 = (-193.7709m);
            Fp3x4 b0 = Fp3x4(-138.46414m, -273.42194m, 162.6225m, 187.72485m, 382.61987m, -82.54779m, 298.32867m, -235.21484m, 125.953125m, -18.586182m, -251.19241m, -295.58725m);
            bool3x4 r0 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp a1 = (-402.58438m);
            Fp3x4 b1 = Fp3x4(258.1311m, -128.23999m, 490.22418m, -125.58237m, -237.95346m, -202.5444m, 210.6543m, -485.73117m, -451.5777m, 58.90094m, 60.381775m, -380.57666m);
            bool3x4 r1 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp a2 = (428.50537m);
            Fp3x4 b2 = Fp3x4(-510.5632m, -168.52628m, 13.787476m, -168.90213m, -261.5316m, -10.708496m, 312.1266m, 324.50842m, 244.79773m, -431.5471m, -440.7053m, 39.593384m);
            bool3x4 r2 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp a3 = (448.93793m);
            Fp3x4 b3 = Fp3x4(194.82922m, 175.26678m, 331.89807m, -319.51215m, -302.4013m, 191.6095m, 0.6691284m, 367.36908m, 332.20605m, 486.00653m, -213.91074m, 409.1704m);
            bool3x4 r3 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_not_equal_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(-498.66064m, 483.43823m, -368.5275m, -1.0883789m, -338.3922m, 405.47144m, -431.94257m, -256.16473m, 431.58868m, -181.17221m, -231.57767m, 338.64343m);
            Fp3x4 b0 = Fp3x4(496.85205m, 490.64667m, -360.57568m, -70.759705m, -336.28644m, 308.89386m, -222.3328m, 60.620728m, 234.66309m, -55.329132m, -350.50763m, 419.24213m);
            bool3x4 r0 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp3x4 a1 = Fp3x4(269.79736m, -118.2919m, -148.18341m, -383.60794m, -32.300903m, 97.237854m, -10.931793m, -461.59253m, 44.711792m, 78.70465m, 373.8048m, -40.56546m);
            Fp3x4 b1 = Fp3x4(-435.70135m, 162.47571m, -183.24216m, -115.81906m, 292.2118m, -145.54517m, -180.45279m, 473.34064m, -465.45633m, -226.7468m, -213.40073m, -457.89676m);
            bool3x4 r1 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp3x4 a2 = Fp3x4(-214.38165m, -475.03076m, 266.521m, -394.08606m, -353.79138m, -291.1507m, 269.71625m, -434.57632m, -464.67853m, -170.8052m, 192.42938m, -440.44745m);
            Fp3x4 b2 = Fp3x4(-346.1724m, 89.81409m, 417.15234m, 363.84692m, -447.8039m, -444.82614m, 348.4359m, 356.8499m, 9.290466m, -212.15436m, 401.38043m, 100.04144m);
            bool3x4 r2 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp3x4 a3 = Fp3x4(184.25562m, 411.9591m, 82.78772m, -466.5627m, 116.864075m, -135.14267m, -220.2114m, 129.65997m, 174.29791m, -303.75378m, -401.3021m, -308.3756m);
            Fp3x4 b3 = Fp3x4(-142.51285m, -278.12134m, 53.39026m, -28.80191m, -172.39514m, -314.011m, 38.57794m, 62.546753m, 245.39087m, -75.12793m, 495.23358m, 208.27588m);
            bool3x4 r3 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_not_equal_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(-491.50952m, 506.73987m, -201.46179m, 458.7696m, -47.28424m, -178.72217m, -4.25885m, -480.9433m, 380.7296m, 203.23236m, 178.6864m, -210.24811m);
            Fp b0 = (-40.51297m);
            bool3x4 r0 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp3x4 a1 = Fp3x4(149.29901m, -204.93494m, -81.21683m, 395.02234m, -193.018m, 237.71686m, -401.1488m, 321.42255m, 158.42194m, -454.762m, 403.64246m, -502.65527m);
            Fp b1 = (307.94647m);
            bool3x4 r1 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp3x4 a2 = Fp3x4(317.45734m, 202.21942m, 327.48834m, 340.33936m, -484.17932m, 366.2265m, 496.1463m, 97.20398m, 135.64307m, -484.8345m, 132.93549m, -162.78m);
            Fp b2 = (-268.6849m);
            bool3x4 r2 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp3x4 a3 = Fp3x4(191.71997m, 183.98065m, -345.20758m, -125.70331m, -88.20157m, -473.8589m, 5.4396973m, -388.48563m, -72.15341m, -442.79593m, -461.76166m, 78.045044m);
            Fp b3 = (-389.97107m);
            bool3x4 r3 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_not_equal_scalar_wide()
        {
            Fp a0 = (-84.47537m);
            Fp3x4 b0 = Fp3x4(145.24762m, -294.39984m, -501.69632m, -231.25659m, -315.36432m, -83.16135m, -131.2561m, 504.67365m, -449.54895m, -457.44342m, -376.26813m, -385.2497m);
            bool3x4 r0 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp a1 = (425.68658m);
            Fp3x4 b1 = Fp3x4(-18.988708m, -334.19855m, 155.14642m, -431.13464m, 231.5097m, -168.78336m, -38.183533m, 412.3233m, -199.63107m, -218.60913m, 351.11078m, 71.79602m);
            bool3x4 r1 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp a2 = (-157.31311m);
            Fp3x4 b2 = Fp3x4(-244.58215m, 202.2995m, 212.07178m, 359.22083m, 245.27911m, 115.828735m, 128.41241m, 372.49237m, -284.46402m, -114.39011m, -282.70642m, -313.51764m);
            bool3x4 r2 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp a3 = (-144.58865m);
            Fp3x4 b3 = Fp3x4(137.43195m, 464.09845m, -324.49036m, -260.69153m, 352.95264m, 176.74591m, 181.84991m, -345.412m, -267.4372m, 82.864136m, 319.99072m, -88.92432m);
            bool3x4 r3 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_less_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(-248.45181m, -455.30365m, 320.315m, -270.12848m, -52.971436m, 351.49738m, -189.24158m, 166.60394m, -281.60788m, -328.3689m, 303.74066m, -10.85434m);
            Fp3x4 b0 = Fp3x4(225.04071m, 307.312m, -435.28625m, 384.59454m, 128.18854m, 25.515686m, 253.86078m, -402.4974m, 39.97223m, -195.34567m, 480.38788m, 430.75067m);
            bool3x4 r0 = bool3x4(true, true, false, true, true, false, true, false, true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp3x4 a1 = Fp3x4(-377.5345m, -204.24298m, -485.56396m, -118.21863m, -229.2432m, -47.903534m, -313.9403m, 465.46155m, -204.12457m, -197.98264m, 341.6419m, 407.021m);
            Fp3x4 b1 = Fp3x4(456.32416m, -183.97815m, -316.16702m, 15.29895m, -77.77652m, -184.09119m, -500.24542m, -144.36426m, 446.16736m, -84.16861m, -293.43997m, 321.036m);
            bool3x4 r1 = bool3x4(true, true, true, true, true, false, false, false, true, true, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp3x4 a2 = Fp3x4(-347.1526m, 459.48096m, 465.06903m, -374.56448m, -276.10492m, 172.8465m, 280.95673m, 358.1585m, -265.5928m, -257.24115m, -210.23566m, 423.44287m);
            Fp3x4 b2 = Fp3x4(479.0058m, 122.157715m, 245.73413m, -216.83966m, -374.0543m, 375.99078m, 425.84967m, -248.80441m, -175.80157m, 400.5349m, -161.30484m, -293.3625m);
            bool3x4 r2 = bool3x4(true, false, false, true, false, true, true, false, true, true, true, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp3x4 a3 = Fp3x4(86.51068m, -503.2211m, 166.37048m, -422.89124m, -462.69684m, -348.82556m, -263.64798m, 62.22992m, -215.21204m, -419.98627m, -161.09192m, 86.679016m);
            Fp3x4 b3 = Fp3x4(327.99536m, 369.57336m, -438.68573m, 427.90552m, -13.278961m, -452.56976m, 271.62366m, 37.022644m, -343.06387m, -451.88602m, -422.52924m, -117.97421m);
            bool3x4 r3 = bool3x4(true, true, false, true, true, false, true, false, false, false, false, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_less_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(-217.34143m, -154.63306m, -189.59198m, -383.10138m, 449.96143m, -495.594m, 339.89673m, 278.93567m, 448.09546m, 168.98419m, -379.16406m, 231.91278m);
            Fp b0 = (-277.67377m);
            bool3x4 r0 = bool3x4(false, false, false, true, false, true, false, false, false, false, true, false);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp3x4 a1 = Fp3x4(191.04297m, 3.5787964m, -328.5581m, 409.57263m, -503.11368m, 321.62482m, -287.729m, -265.64056m, 331.79572m, 164.5708m, 502.8482m, 303.45343m);
            Fp b1 = (-42.53656m);
            bool3x4 r1 = bool3x4(false, false, true, false, true, false, true, true, false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp3x4 a2 = Fp3x4(168.84894m, -151.07874m, 409.4076m, -65.446625m, 268.86694m, 264.36053m, 49.8692m, 326.2m, -96.36563m, 102.14215m, 98.628235m, -214.74396m);
            Fp b2 = (442.40686m);
            bool3x4 r2 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp3x4 a3 = Fp3x4(-339.4613m, 490.4538m, 456.42938m, 488.25647m, 103.29474m, 62.97705m, 0.696167m, -43.749634m, 227.5871m, -495.7869m, -506.5776m, -128.41663m);
            Fp b3 = (503.901m);
            bool3x4 r3 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_less_scalar_wide()
        {
            Fp a0 = (-485.6832m);
            Fp3x4 b0 = Fp3x4(-362.635m, -4.044037m, 131.79993m, 413.48376m, 382.34747m, 55.00757m, -373.25812m, -144.24112m, -243.22845m, 212.25671m, 71.16406m, -104.41278m);
            bool3x4 r0 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp a1 = (177.30798m);
            Fp3x4 b1 = Fp3x4(-44.35016m, -280.36896m, -397.822m, 453.41125m, -310.9288m, -159.81488m, -139.51483m, -350.74994m, -428.73398m, -352.40662m, 62.795044m, 352.87518m);
            bool3x4 r1 = bool3x4(false, false, false, true, false, false, false, false, false, false, false, true);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp a2 = (-509.05646m);
            Fp3x4 b2 = Fp3x4(10.939697m, -200.63272m, 304.57733m, -134.67667m, -237.67072m, 298.4048m, 290.37836m, -444.8108m, -93.98566m, -174.456m, -199.7934m, -411.79422m);
            bool3x4 r2 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp a3 = (-102.049805m);
            Fp3x4 b3 = Fp3x4(-114.2363m, -289.82532m, 41.89673m, 193.82751m, 468.4997m, -457.85388m, -10.88205m, -417.63577m, -400.27835m, 257.6792m, 226.22577m, 339.3797m);
            bool3x4 r3 = bool3x4(false, false, true, true, true, false, true, false, false, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_greater_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(-241.33841m, -475.21497m, -39.85724m, -167.34067m, -383.31873m, 119.09595m, 134.24622m, 295.21844m, -324.31348m, 278.55414m, -216.29721m, -217.02304m);
            Fp3x4 b0 = Fp3x4(438.91602m, 228.49042m, -206.5971m, 366.85388m, 35.72583m, -91.07013m, 154.46704m, 467.31146m, -304.5686m, -105.56061m, 118.17328m, 291.72064m);
            bool3x4 r0 = bool3x4(false, false, true, false, false, true, false, false, false, true, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp3x4 a1 = Fp3x4(408.92578m, 408.4909m, -165.98468m, -188.39972m, 276.64758m, -91.25357m, -49.06787m, -288.82318m, 411.2578m, 85.75275m, 495.4361m, 22.718994m);
            Fp3x4 b1 = Fp3x4(198.42969m, 311.83734m, 477.4394m, 421.5794m, -35.827118m, 327.37164m, -200.52045m, -307.49384m, 104.79114m, 39.848938m, 371.0691m, 63.974304m);
            bool3x4 r1 = bool3x4(true, true, false, false, true, false, true, true, true, true, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp3x4 a2 = Fp3x4(76.05542m, -267.30304m, 217.2334m, 343.66144m, 143.93909m, 331.56464m, -103.08804m, 20.838562m, -287.87445m, 144.28229m, -266.27936m, 4.3792725m);
            Fp3x4 b2 = Fp3x4(455.26648m, -251.13776m, 204.78363m, 152.48834m, -254.93558m, 273.71313m, 32.82202m, -348.75812m, 209.51654m, -341.9267m, 479.84674m, 388.20697m);
            bool3x4 r2 = bool3x4(false, false, true, true, true, true, false, true, false, true, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp3x4 a3 = Fp3x4(496.25458m, -4.81839m, -479.57953m, 308.2845m, -336.28937m, -276.21808m, 232.7425m, -307.654m, 132.51147m, -328.5674m, -20.085083m, 307.59418m);
            Fp3x4 b3 = Fp3x4(74.04797m, 190.91168m, 255.12799m, -474.14334m, -167.48337m, -109.25116m, -449.26196m, -440.13605m, 268.25812m, -306.13226m, -50.536285m, -133.56421m);
            bool3x4 r3 = bool3x4(true, false, false, true, false, false, true, true, false, false, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_greater_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(-348.3178m, -2.4205933m, 423.71265m, 250.03534m, -209.6311m, -121.415405m, 202.20648m, 420.89746m, 422.2362m, -299.2479m, -84.361145m, 17.824524m);
            Fp b0 = (239.55536m);
            bool3x4 r0 = bool3x4(false, false, true, true, false, false, false, true, true, false, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp3x4 a1 = Fp3x4(509.54065m, -436.39563m, -129.45663m, -187.94016m, -292.8944m, -164.38376m, 356.62354m, -255.7496m, -205.14075m, -500.93753m, -29.945099m, 61.921204m);
            Fp b1 = (501.89423m);
            bool3x4 r1 = bool3x4(true, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp3x4 a2 = Fp3x4(499.33307m, -97.266815m, 320.78027m, 487.72894m, 194.74487m, 305.70337m, 304.59412m, 452.4339m, -32.457245m, -96.72519m, -434.71063m, -21.196686m);
            Fp b2 = (-378.25275m);
            bool3x4 r2 = bool3x4(true, true, true, true, true, true, true, true, true, true, false, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp3x4 a3 = Fp3x4(-57.014587m, -426.88776m, -159.53464m, 197.20703m, -344.55518m, 287.53265m, 147.20874m, -264.22845m, -176.15524m, -295.30786m, -479.66397m, 3.7381592m);
            Fp b3 = (384.10565m);
            bool3x4 r3 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_greater_scalar_wide()
        {
            Fp a0 = (-34.200226m);
            Fp3x4 b0 = Fp3x4(212.36633m, 82.05115m, 458.8661m, 136.99329m, 227.5271m, 495.51807m, -142.25m, -196.3866m, -97.57742m, -241.31299m, -139.42554m, 305.07654m);
            bool3x4 r0 = bool3x4(false, false, false, false, false, false, true, true, true, true, true, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp a1 = (-305.36148m);
            Fp3x4 b1 = Fp3x4(-506.0047m, -429.6786m, -430.8932m, 88.38849m, -263.5904m, -340.4632m, 438.38214m, 114.980286m, 49.168518m, 458.23285m, 508.97046m, -243.17514m);
            bool3x4 r1 = bool3x4(true, true, true, false, false, true, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp a2 = (-92.2117m);
            Fp3x4 b2 = Fp3x4(21.118713m, -406.11978m, 454.279m, -245.1478m, 349.24713m, -351.03763m, -328.44318m, -90.44647m, -126.328m, 468.325m, 337.98163m, 91.24396m);
            bool3x4 r2 = bool3x4(false, true, false, true, false, true, true, false, true, false, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp a3 = (-275.88748m);
            Fp3x4 b3 = Fp3x4(57.502136m, 411.03888m, -284.83734m, 474.65033m, -493.6543m, 424.9469m, -26.373932m, -393.062m, -96.197266m, 128.28021m, -340.71063m, 498.52014m);
            bool3x4 r3 = bool3x4(false, false, true, false, true, false, false, true, false, false, true, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_less_equal_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(-266.1326m, -124.733765m, -292.27527m, 24.822144m, -272.5923m, -285.86377m, 384.44617m, 267.29004m, 478.6623m, -110.5802m, 109.78064m, 178.77972m);
            Fp3x4 b0 = Fp3x4(-192.43298m, -372.29657m, -239.20337m, -314.14038m, 439.8761m, 301.66156m, 257.67798m, -234.71451m, -127.03546m, -511.36487m, -384.00253m, 8.338257m);
            bool3x4 r0 = bool3x4(true, false, true, false, true, true, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp3x4 a1 = Fp3x4(399.04333m, -236.436m, 166.79718m, 195.17603m, 101.0589m, -499.5724m, 226.72626m, -346.31998m, 91.10675m, 438.5157m, -422.07498m, -96.408264m);
            Fp3x4 b1 = Fp3x4(-464.58316m, 166.00934m, -353.5489m, 5.9090576m, -159.5957m, 447.97522m, -339.27612m, 352.64783m, 175.11664m, -384.6341m, 184.44794m, 344.69257m);
            bool3x4 r1 = bool3x4(false, true, false, false, false, true, false, true, true, false, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp3x4 a2 = Fp3x4(-38.98822m, 355.982m, -299.03247m, -486.72812m, 140.7873m, -259.33997m, 509.23267m, 31.062439m, -267.29993m, -311.39737m, 245.25037m, 50.559265m);
            Fp3x4 b2 = Fp3x4(490.128m, -427.9264m, 49.47937m, -394.13007m, 378.92804m, -339.6921m, 370.8128m, -431.0434m, 220.22723m, 32.04193m, 331.31482m, 305.93842m);
            bool3x4 r2 = bool3x4(true, false, true, true, true, false, false, false, true, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp3x4 a3 = Fp3x4(-292.71548m, -90.47162m, -310.51825m, -81.58679m, 143.82513m, -307.00247m, -197.53088m, -207.0585m, -184.86758m, -204.8121m, 432.06384m, 355.41516m);
            Fp3x4 b3 = Fp3x4(48.771973m, 446.66394m, 51.41382m, -297.4046m, -69.1286m, 188.66919m, 111.102356m, -460.42044m, 406.55768m, 359.79822m, 505.37213m, 232.29395m);
            bool3x4 r3 = bool3x4(true, true, true, false, false, true, true, false, true, true, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_less_equal_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(-347.2307m, 357.8626m, -179.71185m, -320.96027m, 26.583496m, -314.84348m, 219.6524m, 479.43463m, 166.25684m, 94.45245m, 508.216m, 43.63623m);
            Fp b0 = (-160.18707m);
            bool3x4 r0 = bool3x4(true, false, true, true, false, true, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp3x4 a1 = Fp3x4(213.9112m, -510.48376m, 58.587646m, -473.1872m, 335.4579m, 270.98102m, -309.0292m, 235.10156m, -257.19537m, -489.77023m, -458.4973m, 456.54657m);
            Fp b1 = (-351.45435m);
            bool3x4 r1 = bool3x4(false, true, false, true, false, false, false, false, false, true, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp3x4 a2 = Fp3x4(315.64874m, -200.92328m, -79.75519m, -10.78952m, -374.55328m, -290.48325m, -424.3211m, -427.78427m, 432.9981m, 82.59479m, 336.81158m, -142.40524m);
            Fp b2 = (368.87433m);
            bool3x4 r2 = bool3x4(true, true, true, true, true, true, true, true, false, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp3x4 a3 = Fp3x4(-327.4707m, 359.69843m, 165.67804m, -270.4295m, -359.84552m, -474.07312m, -92.220276m, -285.88556m, -336.43512m, 300.15442m, 21.473389m, 392.04614m);
            Fp b3 = (-325.95245m);
            bool3x4 r3 = bool3x4(true, false, false, false, true, true, false, false, true, false, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_less_equal_scalar_wide()
        {
            Fp a0 = (-187.50052m);
            Fp3x4 b0 = Fp3x4(177.5221m, -221.34222m, -35.76126m, 354.90814m, 297.5418m, -487.66107m, 217.42084m, -94.54605m, 283.79358m, 431.82996m, -8.173676m, 456.12714m);
            bool3x4 r0 = bool3x4(true, false, true, true, true, false, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp a1 = (-499.4815m);
            Fp3x4 b1 = Fp3x4(-282.17194m, -207.38339m, -116.17682m, 459.26715m, -479.46613m, 56.500244m, -277.44678m, 493.29077m, -505.90054m, 446.98572m, 460.13263m, 433.5786m);
            bool3x4 r1 = bool3x4(true, true, true, true, true, true, true, true, false, true, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp a2 = (504.737m);
            Fp3x4 b2 = Fp3x4(-263.66388m, -388.37427m, -148.78448m, -227.64874m, -510.88272m, 417.94672m, -183.90958m, 309.99933m, -106.806915m, 509.4828m, -119.63547m, -457.39386m);
            bool3x4 r2 = bool3x4(false, false, false, false, false, false, false, false, false, true, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp a3 = (-183.12982m);
            Fp3x4 b3 = Fp3x4(-286.7578m, 416.26123m, -344.05505m, -13.668213m, -126.87393m, 62.10132m, 480.54236m, -473.9209m, 303.8037m, -164.25012m, -283.23117m, -37.874237m);
            bool3x4 r3 = bool3x4(false, true, false, true, true, true, true, false, true, true, false, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_greater_equal_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(-480.5502m, -331.65723m, -467.8819m, -426.36612m, 130.68m, 397.9231m, 318.48987m, -65.386536m, 356.61475m, 435.95337m, -488.66916m, 131.80145m);
            Fp3x4 b0 = Fp3x4(-13.955231m, -36.309723m, -361.51007m, -270.75452m, -221.99017m, 153.435m, 90.831665m, -417.45892m, 251.08832m, 137.00128m, -407.28433m, 228.05487m);
            bool3x4 r0 = bool3x4(false, false, false, false, true, true, true, true, true, true, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp3x4 a1 = Fp3x4(103.69757m, -163.08237m, 455.47546m, 93.445435m, 89.21301m, 489.87122m, -245.09006m, 491.81232m, -260.6297m, -310.3274m, 71.13989m, -46.399384m);
            Fp3x4 b1 = Fp3x4(-243.401m, 424.24408m, 269.84637m, 115.634094m, 445.47614m, -228.73865m, 173.26428m, -298.96143m, -88.07672m, -60.371002m, -404.40866m, -99.03479m);
            bool3x4 r1 = bool3x4(true, false, true, false, false, true, false, true, false, false, true, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp3x4 a2 = Fp3x4(-411.68314m, 66.261475m, 106.591736m, 370.58514m, 366.2433m, 371.99274m, 313.57233m, -214.22995m, 196.56445m, -447.77808m, 112.96045m, 339.63116m);
            Fp3x4 b2 = Fp3x4(-115.19504m, -255.03613m, 343.273m, 438.73413m, -47.712128m, 287.5191m, -338.6102m, 372.83356m, -229.71097m, 385.01367m, -348.6479m, -328.64954m);
            bool3x4 r2 = bool3x4(false, true, false, false, true, true, true, false, true, false, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp3x4 a3 = Fp3x4(271.276m, -114.36902m, 415.0431m, -355.08502m, 314.9984m, 323.92725m, -308.4151m, -502.9577m, -437.109m, -82.981964m, 313.27155m, -100.53375m);
            Fp3x4 b3 = Fp3x4(222.9148m, 111.40759m, -319.8275m, -3.8937683m, 447.9524m, 58.67047m, -163.51846m, 257.94m, -460.86288m, 314.62207m, -307.7068m, -434.0195m);
            bool3x4 r3 = bool3x4(true, false, true, false, false, true, false, false, true, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_greater_equal_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(-100.195435m, 360.16846m, -374.34125m, 242.43842m, -297.3426m, 155.94312m, -314.72128m, 91.45465m, -222.22919m, -388.12286m, -277.31842m, 428.42255m);
            Fp b0 = (71.966736m);
            bool3x4 r0 = bool3x4(false, true, false, true, false, true, false, true, false, false, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp3x4 a1 = Fp3x4(321.47345m, 287.05243m, -243.28503m, -333.85324m, 437.79694m, 298.99707m, 127.66785m, 314.34784m, -314.6262m, 347.53973m, -145.12482m, 35.18756m);
            Fp b1 = (-383.9345m);
            bool3x4 r1 = bool3x4(true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp3x4 a2 = Fp3x4(-121.66431m, -250.16486m, -48.212738m, -136.74988m, 343.28424m, -190.20853m, -291.74176m, 152.89203m, 114.13196m, -173.11151m, 317.08673m, -187.40225m);
            Fp b2 = (350.87073m);
            bool3x4 r2 = bool3x4(false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp3x4 a3 = Fp3x4(472.24347m, -308.51047m, -318.60474m, -49.63687m, 306.12463m, 350.2209m, -30.846375m, -373.6266m, -203.20139m, 325.81915m, 302.42157m, 73.06976m);
            Fp b3 = (184.02753m);
            bool3x4 r3 = bool3x4(true, false, false, false, true, true, false, false, false, true, true, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_greater_equal_scalar_wide()
        {
            Fp a0 = (66.15973m);
            Fp3x4 b0 = Fp3x4(228.81372m, -371.95468m, 184.22943m, 266.50446m, 225.0069m, -488.35345m, -52.242126m, 451.52258m, 52.532227m, 45.85956m, -379.48004m, 401.27222m);
            bool3x4 r0 = bool3x4(false, true, false, false, false, true, true, false, true, true, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp a1 = (172.98633m);
            Fp3x4 b1 = Fp3x4(370.27435m, 192.75183m, 481.17358m, 15.350586m, 128.0401m, -165.92456m, -76.330444m, -327.95792m, 356.7912m, -9.228088m, -284.01025m, 313.27112m);
            bool3x4 r1 = bool3x4(false, false, false, true, true, true, true, true, false, true, true, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp a2 = (-90.26172m);
            Fp3x4 b2 = Fp3x4(-321.32925m, -57.97351m, -106.32416m, -178.8837m, 209.28741m, 70.184814m, 105.86798m, 247.28058m, -206.20792m, 390.3213m, -330.80444m, -215.23157m);
            bool3x4 r2 = bool3x4(true, false, true, true, false, false, false, false, true, false, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp a3 = (188.87732m);
            Fp3x4 b3 = Fp3x4(-257.55756m, 372.47803m, 159.56116m, -240.46237m, 378.38586m, -419.5253m, 176.80475m, -218.40143m, 235.4201m, -200.84158m, 448.58197m, 468.20013m);
            bool3x4 r3 = bool3x4(true, false, true, true, false, true, true, true, false, true, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_add_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(149.59412m, 261.85114m, 134.76111m, 296.27722m, -87.83832m, 262.9261m, -230.0998m, -408.89618m, -478.518m, 195.41254m, -321.6739m, 350.58875m);
            Fp3x4 b0 = Fp3x4(82.11688m, -336.5427m, -203.66907m, 348.16364m, 417.2708m, 96.18884m, -128.52588m, 215.17627m, 292.04285m, 113.43524m, 155.31805m, -440.69635m);
            Fp3x4 r0 = Fp3x4(231.711m, -74.69156m, -68.90796m, 644.44086m, 329.4325m, 359.11493m, -358.62567m, -193.71991m, -186.47516m, 308.84778m, -166.35583m, -90.107605m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp3x4 a1 = Fp3x4(113.98291m, -90.31268m, -423.45035m, -448.143m, 438.0074m, -54.86862m, -195.57837m, 164.81592m, -389.52502m, 497.3791m, 428.81763m, 40.856934m);
            Fp3x4 b1 = Fp3x4(-165.62283m, 32.225952m, -454.52457m, -508.79465m, -153.16425m, -372.93164m, 180.11145m, -34.079956m, -110.680084m, -490.98834m, -308.06354m, 242.1145m);
            Fp3x4 r1 = Fp3x4(-51.639923m, -58.08673m, -877.9749m, -956.9376m, 284.84314m, -427.80026m, -15.466919m, 130.73596m, -500.2051m, 6.390747m, 120.75409m, 282.97144m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp3x4 a2 = Fp3x4(233.47986m, 316.9823m, 174.2768m, 433.16278m, 243.52814m, 61.474426m, 398.64362m, 259.61395m, 353.41382m, 170.18146m, 438.34277m, -101.24536m);
            Fp3x4 b2 = Fp3x4(255.45197m, -106.347046m, -212.55377m, 506.27606m, 190.54742m, -211.61603m, -247.94873m, -145.31372m, 259.72076m, 435.06445m, 476.03546m, -146.62946m);
            Fp3x4 r2 = Fp3x4(488.93182m, 210.63525m, -38.276978m, 939.43884m, 434.07556m, -150.1416m, 150.69489m, 114.30023m, 613.1346m, 605.2459m, 914.37823m, -247.87482m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp3x4 a3 = Fp3x4(-384.77304m, -9.039703m, 169.93896m, -357.51395m, 305.52026m, 310.7461m, -259.50687m, -171.07147m, -74.32706m, -104.45975m, -393.36298m, 79.27643m);
            Fp3x4 b3 = Fp3x4(-282.5075m, 301.00616m, 329.5771m, -89.95358m, 179.57281m, -166.90231m, 170.20404m, 138.56116m, -49.144684m, 125.87421m, -135.56805m, 370.4237m);
            Fp3x4 r3 = Fp3x4(-667.2805m, 291.96646m, 499.51605m, -447.46753m, 485.09308m, 143.84378m, -89.302826m, -32.510315m, -123.47174m, 21.41446m, -528.931m, 449.70013m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_add_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(-363.30127m, 85.21643m, 307.5595m, -324.80725m, 213.70538m, 85.79199m, -287.34515m, 389.57996m, 474.44275m, 286.0359m, -410.64044m, -86.13693m);
            Fp b0 = (84.48932m);
            Fp3x4 r0 = Fp3x4(-278.81195m, 169.70575m, 392.04883m, -240.31793m, 298.1947m, 170.28131m, -202.85583m, 474.06927m, 558.93207m, 370.5252m, -326.15112m, -1.6476135m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp3x4 a1 = Fp3x4(429.21674m, 192.88623m, 167.73853m, 114.861084m, -501.71588m, 160.07806m, -12.338318m, -398.42938m, -175.8247m, 457.7224m, 507.90253m, -477.5033m);
            Fp b1 = (222.11395m);
            Fp3x4 r1 = Fp3x4(651.3307m, 415.00018m, 389.85248m, 336.97504m, -279.60193m, 382.19202m, 209.77563m, -176.31543m, 46.289246m, 679.83636m, 730.0165m, -255.38934m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp3x4 a2 = Fp3x4(-375.98926m, -182.66864m, 387.1908m, -323.7256m, 183.09943m, -389.15732m, 42.869568m, -385.58276m, -165.13174m, 323.4098m, 339.8897m, -161.7283m);
            Fp b2 = (482.24597m);
            Fp3x4 r2 = Fp3x4(106.256714m, 299.57733m, 869.43677m, 158.52039m, 665.3454m, 93.08865m, 525.11554m, 96.66321m, 317.11423m, 805.65576m, 822.1357m, 320.51767m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp3x4 a3 = Fp3x4(506.92566m, 445.74646m, -77.56369m, 175.09296m, -228.52725m, 117.83142m, -248.03946m, -482.5395m, 215.46735m, 114.69861m, -28.614655m, -297.5697m);
            Fp b3 = (-37.201538m);
            Fp3x4 r3 = Fp3x4(469.72412m, 408.54492m, -114.76523m, 137.89142m, -265.7288m, 80.62988m, -285.241m, -519.741m, 178.26581m, 77.49707m, -65.81619m, -334.77124m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_add_scalar_wide()
        {
            Fp a0 = (-510.89264m);
            Fp3x4 b0 = Fp3x4(130.32959m, 272.09174m, 331.812m, -379.09714m, 397.8896m, -333.4043m, -9.8524475m, 236.39392m, -45.938232m, -418.6372m, -504.4516m, 474.44263m);
            Fp3x4 r0 = Fp3x4(-380.56305m, -238.8009m, -179.08063m, -889.98975m, -113.00305m, -844.29694m, -520.7451m, -274.49872m, -556.8309m, -929.52985m, -1015.34424m, -36.450012m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp a1 = (-500.95m);
            Fp3x4 b1 = Fp3x4(-202.51782m, -32.80835m, 113.29993m, -390.25403m, 114.28601m, 305.88098m, 467.55792m, 55.11212m, -58.26184m, 259.49323m, 167.08618m, 473.4843m);
            Fp3x4 r1 = Fp3x4(-703.46783m, -533.75836m, -387.6501m, -891.20404m, -386.664m, -195.06903m, -33.39209m, -445.8379m, -559.21185m, -241.45679m, -333.86383m, -27.465698m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp a2 = (-351.8205m);
            Fp3x4 b2 = Fp3x4(443.01263m, -388.40283m, -58.419525m, 37.049866m, 25.75061m, -475.7782m, 280.8266m, -155.1466m, -261.24048m, -306.7414m, 168.45288m, 207.63892m);
            Fp3x4 r2 = Fp3x4(91.19214m, -740.2233m, -410.24002m, -314.77063m, -326.0699m, -827.5987m, -70.9939m, -506.9671m, -613.061m, -658.5619m, -183.36761m, -144.18158m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp a3 = (-206.38287m);
            Fp3x4 b3 = Fp3x4(-106.55582m, -46.857513m, -317.88055m, -244.52982m, 70.37067m, -18.837555m, -511.2447m, -230.74527m, 131.0094m, 284.31146m, -115.22104m, -247.34314m);
            Fp3x4 r3 = Fp3x4(-312.9387m, -253.24039m, -524.2634m, -450.9127m, -136.0122m, -225.22043m, -717.62756m, -437.12814m, -75.373474m, 77.92859m, -321.6039m, -453.726m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_sub_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(-493.45367m, -228.40881m, 463.7627m, 280.9309m, -394.85977m, -289.75592m, 248.1676m, 499.35565m, -272.3052m, -342.8852m, 328.01593m, -486.20126m);
            Fp3x4 b0 = Fp3x4(-470.96182m, 95.77942m, 189.22583m, -88.87137m, -353.6308m, -352.10352m, 346.07532m, -379.2524m, -63.3519m, 326.07965m, 57.516968m, -5.383026m);
            Fp3x4 r0 = Fp3x4(-22.491852m, -324.18823m, 274.53687m, 369.80228m, -41.228973m, 62.347595m, -97.907715m, 878.60803m, -208.95331m, -668.96484m, 270.49896m, -480.81824m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp3x4 a1 = Fp3x4(-428.74026m, -42.623505m, -502.78284m, -276.01123m, -211.62009m, -347.22595m, -158.27963m, -173.81665m, -70.89194m, -173.12573m, -264.8333m, -74.43515m);
            Fp3x4 b1 = Fp3x4(204.36798m, -478.10825m, -341.72345m, 407.61432m, 310.6997m, 48.0141m, -163.44263m, 488.14728m, 180.8819m, 343.0777m, 319.71008m, 489.9417m);
            Fp3x4 r1 = Fp3x4(-633.1083m, 435.48474m, -161.05939m, -683.62555m, -522.3198m, -395.24005m, 5.1629944m, -661.9639m, -251.77383m, -516.2034m, -584.5434m, -564.37683m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp3x4 a2 = Fp3x4(-51.254578m, 108.359985m, -60.07065m, -330.40884m, -496.76056m, 12.519653m, -280.15063m, -98.08853m, 434.38043m, 371.51654m, 181.30127m, 291.02722m);
            Fp3x4 b2 = Fp3x4(-263.96368m, 41.593506m, 480.24548m, -38.970642m, 288.97418m, -252.60535m, 247.03918m, 458.86365m, -185.37024m, 449.4679m, -60.658478m, 403.13745m);
            Fp3x4 r2 = Fp3x4(212.7091m, 66.76648m, -540.31616m, -291.4382m, -785.73474m, 265.125m, -527.1898m, -556.95215m, 619.7507m, -77.951355m, 241.95975m, -112.11023m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp3x4 a3 = Fp3x4(-401.53528m, -115.02838m, -281.3573m, -252.54971m, -233.19684m, 85.14636m, 61.916565m, -44.315033m, 129.10852m, 32.77466m, 336.03772m, 256.2979m);
            Fp3x4 b3 = Fp3x4(-319.03247m, -364.86603m, -317.27893m, -236.45035m, -20.565216m, 273.18085m, 194.3952m, -179.8656m, 203.74469m, 64.746155m, -433.2113m, 194.06891m);
            Fp3x4 r3 = Fp3x4(-82.50281m, 249.83765m, 35.92163m, -16.099365m, -212.63162m, -188.03448m, -132.47864m, 135.55057m, -74.63617m, -31.971497m, 769.249m, 62.229004m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_sub_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(-483.1618m, 208.13171m, -387.3754m, -336.09125m, 167.81488m, -376.95837m, 348.0346m, -303.7441m, 237.17828m, 276.68842m, -357.72092m, 308.1668m);
            Fp b0 = (-369.26047m);
            Fp3x4 r0 = Fp3x4(-113.90134m, 577.3922m, -18.11493m, 33.16922m, 537.0753m, -7.6979065m, 717.29504m, 65.51636m, 606.4387m, 645.94885m, 11.539551m, 677.42725m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp3x4 a1 = Fp3x4(243.65826m, -157.99301m, 350.88452m, 498.3803m, 183.44073m, 334.32684m, -164.35855m, 385.76703m, 238.23523m, -130.01239m, -231.33072m, 391.2126m);
            Fp b1 = (246.66418m);
            Fp3x4 r1 = Fp3x4(-3.0059204m, -404.6572m, 104.22034m, 251.71613m, -63.22345m, 87.66266m, -411.02274m, 139.10284m, -8.428955m, -376.67657m, -477.9949m, 144.5484m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp3x4 a2 = Fp3x4(-119.787445m, -145.07779m, -73.66461m, -177.00601m, -481.27005m, 379.8385m, 181.22339m, 134.36224m, 133.43787m, -420.2645m, -479.589m, -332.15436m);
            Fp b2 = (-302.35925m);
            Fp3x4 r2 = Fp3x4(182.57181m, 157.28146m, 228.69464m, 125.35324m, -178.9108m, 682.19775m, 483.58264m, 436.7215m, 435.79712m, -117.90524m, -177.22974m, -29.795105m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp3x4 a3 = Fp3x4(-391.54102m, 411.00452m, -499.14108m, 281.05786m, 260.49707m, -217.60062m, -443.27805m, 42.814636m, -446.67798m, -190.90964m, -216.7891m, 135.10205m);
            Fp b3 = (191.87445m);
            Fp3x4 r3 = Fp3x4(-583.41547m, 219.13007m, -691.0155m, 89.18341m, 68.62262m, -409.47507m, -635.15247m, -149.05981m, -638.5524m, -382.7841m, -408.66354m, -56.7724m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_sub_scalar_wide()
        {
            Fp a0 = (-400.4135m);
            Fp3x4 b0 = Fp3x4(-434.79865m, -476.15903m, 360.5266m, 427.36743m, 34.250977m, -102.27759m, -235.2923m, -404.2934m, 53.207886m, -349.06525m, 180.38147m, 508.37018m);
            Fp3x4 r0 = Fp3x4(34.38513m, 75.745514m, -760.9401m, -827.78094m, -434.6645m, -298.13593m, -165.12122m, 3.8798828m, -453.6214m, -51.348267m, -580.795m, -908.7837m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp a1 = (59.979797m);
            Fp3x4 b1 = Fp3x4(278.88702m, 184.60626m, 476.90186m, 413.65137m, 336.2138m, -11.193787m, -247.1394m, -336.0969m, -210.80411m, 498.80597m, 490.13202m, 413.41382m);
            Fp3x4 r1 = Fp3x4(-218.90723m, -124.626465m, -416.92206m, -353.67157m, -276.234m, 71.173584m, 307.1192m, 396.0767m, 270.7839m, -438.82617m, -430.15222m, -353.43402m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp a2 = (-404.97784m);
            Fp3x4 b2 = Fp3x4(323.63397m, 241.0108m, 277.08936m, 156.94482m, -0.57788086m, 167.80084m, 239.34027m, 7.104553m, -43.08737m, 436.67523m, 214.51788m, 0.8171997m);
            Fp3x4 r2 = Fp3x4(-728.6118m, -645.98865m, -682.0672m, -561.92267m, -404.39996m, -572.7787m, -644.3181m, -412.0824m, -361.89047m, -841.6531m, -619.4957m, -405.79504m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp a3 = (70.89612m);
            Fp3x4 b3 = Fp3x4(492.93268m, 53.249023m, -24.40625m, 433.5536m, 268.82m, -348.7055m, -467.96915m, 65.82904m, -399.74887m, 262.8744m, -171.33105m, 129.06506m);
            Fp3x4 r3 = Fp3x4(-422.03656m, 17.647095m, 95.30237m, -362.65747m, -197.92389m, 419.60162m, 538.86523m, 5.0670776m, 470.645m, -191.97827m, 242.22717m, -58.168945m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_mul_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(-326.98944m, 183.26929m, -95.33392m, -352.96515m, -222.24484m, 237.92462m, -66.21646m, -462.0301m, -500.88995m, 435.0948m, 252.29065m, -6.518158m);
            Fp3x4 b0 = Fp3x4(351.58496m, 113.25659m, 286.7157m, 288.06653m, 327.3562m, 406.58655m, -200.43045m, 386.18604m, 363.50323m, 324.0984m, 356.03528m, -241.42923m);
            Fp3x4 r0 = Fp3x4(-114964.57m, 20756.455m, -27333.732m, -101677.445m, -72753.23m, 96736.95m, 13271.795m, -178429.56m, -182075.12m, 141013.52m, 89824.375m, 1573.6738m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp3x4 a1 = Fp3x4(322.92114m, 82.13257m, -243.62183m, -397.79288m, -227.1383m, -58.505035m, 79.093445m, 421.37585m, 272.33777m, -359.5229m, 412.57416m, 390.20898m);
            Fp3x4 b1 = Fp3x4(-351.41443m, -257.6211m, -54.470886m, -133.72797m, -409.5271m, 505.06732m, -170.17267m, 133.84436m, 292.0456m, 392.42755m, 162.28137m, -168.54077m);
            Fp3x4 r1 = Fp3x4(-113479.15m, -21159.082m, 13270.297m, 53196.03m, 93019.29m, -29548.982m, -13459.543m, 56398.78m, 79535.05m, -141086.69m, 66953.1m, -65766.125m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp3x4 a2 = Fp3x4(262.00195m, 0.791626m, 269.64508m, -72.31424m, -153.89685m, 302.33545m, -307.41687m, 19.688354m, 213.14911m, 121.72485m, 370.0746m, -204.90741m);
            Fp3x4 b2 = Fp3x4(414.51172m, 82.95386m, 3.3320312m, -171.02472m, -87.30148m, -255.9195m, 416.65594m, 344.226m, -140.34741m, -168.68939m, -455.09738m, 181.28271m);
            Fp3x4 r2 = Fp3x4(108602.88m, 65.66843m, 898.4658m, 12367.522m, 13435.423m, -77373.54m, -128087.07m, 6777.2437m, -29914.926m, -20533.691m, -168419.97m, -37146.17m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp3x4 a3 = Fp3x4(454.12738m, -460.23938m, 203.55817m, -142.00342m, -229.62341m, -7.623047m, 456.7375m, 108.62695m, 174.78717m, 146.96411m, 39.49182m, -70.73874m);
            Fp3x4 b3 = Fp3x4(-210.74957m, 472.24512m, 113.05426m, -351.3603m, -261.32666m, -146.13354m, 31.253235m, 281.52972m, -399.48032m, -345.60504m, 165.29535m, 367.68182m);
            Fp3x4 r3 = Fp3x4(-95707.15m, -217345.8m, 23013.117m, 49894.363m, 60006.72m, 1113.9829m, 14274.524m, 30581.717m, -69824.03m, -50791.54m, 6527.8145m, -26009.348m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x4_operator_mul_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(398.63098m, 133.9815m, 100.58301m, 289.0614m, -66.26727m, -440.14893m, 265.87543m, 258.4983m, -59.58963m, 338.4347m, -313.44278m, -256.9532m);
            Fp b0 = (188.26575m);
            Fp3x4 r0 = Fp3x4(75048.56m, 25224.129m, 18936.336m, 54420.36m, -12475.857m, -82864.97m, 50055.234m, 48666.375m, -11218.687m, 63715.66m, -59010.54m, -48375.484m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp3x4 a1 = Fp3x4(383.3626m, 206.87476m, 460.85834m, -33.312927m, -508.58292m, -417.235m, -454.5296m, 22.078491m, 90.67731m, -353.6305m, 55.33612m, 67.805725m);
            Fp b1 = (-297.26385m);
            Fp3x4 r1 = Fp3x4(-113959.84m, -61496.387m, -136996.53m, 9902.7295m, 151183.31m, 124028.88m, 135115.22m, -6563.137m, -26955.086m, 105121.56m, -16449.428m, -20156.191m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp3x4 a2 = Fp3x4(265.92883m, 383.11536m, 387.38086m, 384.8125m, 414.6073m, 498.15466m, 233.70929m, -203.77933m, -454.85236m, -35.77603m, -429.17346m, 449.79498m);
            Fp b2 = (-257.91882m);
            Fp3x4 r2 = Fp3x4(-68588.055m, -98812.664m, -99912.81m, -99250.39m, -106935.02m, -128483.46m, -60278.023m, 52558.523m, 117314.984m, 9227.312m, 110691.914m, -116010.59m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp3x4 a3 = Fp3x4(-276.17242m, 165.24231m, -190.5217m, -458.19623m, -215.45883m, 118.29358m, -8.003906m, 465.33032m, -249.69058m, 329.82104m, 447.44873m, -8.64975m);
            Fp b3 = (171.27441m);
            Fp3x4 r3 = Fp3x4(-47301.27m, 28301.78m, -32631.492m, -78477.29m, -36902.586m, 20260.664m, -1370.8644m, 79699.18m, -42765.61m, 56489.906m, 76636.516m, -1481.4808m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x4_operator_mul_scalar_wide()
        {
            Fp a0 = (291.10083m);
            Fp3x4 b0 = Fp3x4(85.88977m, -2.0483398m, -372.21533m, -32.73163m, -458.91272m, -425.4938m, 127.91998m, 166.95068m, -505.2238m, -52.959717m, 493.21753m, -320.13397m);
            Fp3x4 r0 = Fp3x4(25002.584m, -596.27344m, -108352.195m, -9528.204m, -133589.88m, -123861.6m, 37237.613m, 48599.484m, -147071.06m, -15416.617m, 143576.03m, -93191.266m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp a1 = (459.70593m);
            Fp3x4 b1 = Fp3x4(-309.70544m, -463.31314m, 124.56317m, 393.03064m, 321.9226m, 324.49915m, 217.63403m, -343.80927m, 305.8797m, 312.56818m, -404.74002m, 86.315735m);
            Fp3x4 r1 = Fp3x4(-142373.44m, -212987.8m, 57262.43m, 180678.52m, 147989.73m, 149174.19m, 100047.66m, -158051.16m, 140614.72m, 143689.44m, -186061.39m, 39679.855m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp a2 = (-316.86298m);
            Fp3x4 b2 = Fp3x4(242.69629m, 278.34778m, 185.50299m, -128.3453m, 336.5357m, -161.05597m, -490.4827m, 336.52277m, -449.29254m, -310.26248m, -17.471497m, -220.7156m);
            Fp3x4 r2 = Fp3x4(-76901.47m, -88198.1m, -58779.03m, 40667.875m, -106635.7m, 51032.67m, 155415.81m, -106631.6m, 142364.17m, 98310.695m, 5536.0703m, 69936.6m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp a3 = (-161.46277m);
            Fp3x4 b3 = Fp3x4(74.024414m, -469.40152m, 260.23444m, -321.9057m, -158.21378m, 114.330505m, -120.21582m, -337.7763m, -161.93655m, 211.29724m, -78.268585m, 157.67505m);
            Fp3x4 r3 = Fp3x4(-11952.187m, 75790.87m, -42018.17m, 51975.785m, 25545.635m, -18460.12m, 19410.379m, 54538.297m, 26146.725m, -34116.637m, 12637.463m, -25458.65m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x4_operator_div_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(-434.30182m, -58.547546m, -242.22162m, -61.09958m, 507.04565m, 55.52173m, 84.16864m, 121.1817m, -251.65366m, 232.27637m, -11.3958435m, 29.057007m);
            Fp3x4 b0 = Fp3x4(-418.87305m, 154.74506m, 228.1217m, 170.04639m, -183.44586m, 254.94373m, -327.2115m, -54.62494m, 345.10803m, 82.34033m, -104.82977m, -236.51917m);
            Fp3x4 r0 = Fp3x4(1.036834m, -0.3783484m, -1.0618087m, -0.35931125m, -2.764007m, 0.21778034m, -0.2572301m, -2.2184317m, -0.72920257m, 2.8209307m, 0.10870808m, -0.12285265m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp3x4 a1 = Fp3x4(322.31866m, -203.0835m, -48.977356m, 42.2453m, -38.711334m, -135.21942m, -482.07678m, 242.29352m, 475.21832m, 136.9826m, 469.2395m, 122.68744m);
            Fp3x4 b1 = Fp3x4(359.3108m, 322.64587m, 371.59705m, -355.33997m, -239.45645m, -266.5359m, -357.02856m, -399.5715m, 476.43823m, 479.14832m, 31.718567m, -67.50827m);
            Fp3x4 r1 = Fp3x4(0.897047m, -0.62943155m, -0.13180234m, -0.11888699m, 0.16166335m, 0.50732166m, 1.3502471m, -0.6063834m, 0.9974395m, 0.2858877m, 14.793843m, -1.817369m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp3x4 a2 = Fp3x4(-20.497894m, -467.7096m, -221.04147m, 267.99823m, 64.06995m, 344.4264m, -80.7948m, -292.97626m, 286.30884m, -218.34494m, 320.00793m, -84.54816m);
            Fp3x4 b2 = Fp3x4(-476.12637m, -14.658966m, 455.77832m, 182.52795m, -334.02838m, -89.53241m, 128.25458m, -376.5514m, -101.138336m, -188.37494m, -124.28238m, -406.6251m);
            Fp3x4 r2 = Fp3x4(0.043051373m, 31.906042m, -0.48497584m, 1.4682585m, -0.1918099m, -3.8469465m, -0.6299565m, 0.7780512m, -2.8308637m, 1.1590976m, -2.5748456m, 0.20792656m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp3x4 a3 = Fp3x4(-409.18546m, 119.12207m, 270.18762m, -193.7587m, -275.37662m, -168.85626m, 327.30664m, 377.70154m, 4.545288m, 181.39417m, -189.45496m, 193.22327m);
            Fp3x4 b3 = Fp3x4(119.84784m, 24.165955m, 61.90869m, -221.39993m, 376.42474m, -84.85095m, -455.09573m, 17.510376m, 194.25262m, 363.9516m, -180.17407m, -165.03625m);
            Fp3x4 r3 = Fp3x4(-3.414208m, 4.929334m, 4.364292m, 0.87515247m, -0.7315582m, 1.9900337m, -0.71920395m, 21.570156m, 0.02339885m, 0.49840188m, 1.0515107m, -1.1707928m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_div_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(338.5183m, 342.57233m, -162.55743m, 62.311157m, -435.44455m, 124.90289m, 336.1009m, -230.52808m, -93.8689m, -125.544495m, -412.19177m, -377.6493m);
            Fp b0 = (18.585693m);
            Fp3x4 r0 = Fp3x4(18.213919m, 18.432045m, -8.746374m, 3.3526409m, -23.429018m, 6.7203784m, 18.08385m, -12.403523m, -5.0505996m, -6.7548995m, -22.177906m, -20.319355m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp3x4 a1 = Fp3x4(-358.36334m, -253.62341m, -156.09784m, 115.1026m, -68.532166m, 6.3016357m, 484.37848m, -506.15454m, -283.2752m, 219.09784m, -11.390045m, -192.22711m);
            Fp b1 = (-439.82245m);
            Fp3x4 r1 = Fp3x4(0.8147909m, 0.57664955m, 0.35491103m, -0.26170242m, 0.15581779m, -0.014327681m, -1.1013045m, 1.1508156m, 0.64406717m, -0.49815065m, 0.025896916m, 0.43705615m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp3x4 a2 = Fp3x4(244.88446m, 89.89917m, -377.98132m, -49.026733m, -204.02267m, 404.14398m, -215.7409m, -93.07489m, -235.54022m, -14.345093m, -474.1825m, 276.6983m);
            Fp b2 = (145.513m);
            Fp3x4 r2 = Fp3x4(1.6829044m, 0.6178085m, -2.5975776m, -0.3369234m, -1.4020925m, 2.7773738m, -1.4826229m, -0.6396328m, -1.6186885m, -0.09858289m, -3.2586951m, 1.9015367m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp3x4 a3 = Fp3x4(-61.30887m, -321.411m, 84.750244m, 352.727m, 491.47058m, 200.21655m, 482.09705m, -180.04575m, 222.72388m, -320.0974m, -434.30676m, -172.2522m);
            Fp b3 = (-489.2709m);
            Fp3x4 r3 = Fp3x4(0.12530659m, 0.6569183m, -0.17321742m, -0.7209237m, -1.0044959m, -0.4092141m, -0.9853377m, 0.36798784m, -0.45521587m, 0.6542335m, 0.8876611m, 0.35205895m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_div_scalar_wide()
        {
            Fp a0 = (2.9528809m);
            Fp3x4 b0 = Fp3x4(260.17004m, 427.25922m, -21.09494m, -20.552216m, -133.13852m, 254.63452m, -286.85498m, 186.54468m, 172.25421m, -81.20044m, 483.28802m, 492.59583m);
            Fp3x4 r0 = Fp3x4(0.011349811m, 0.0069112163m, -0.13998052m, -0.14367701m, -0.022179013m, 0.011596546m, -0.010293985m, 0.015829349m, 0.017142575m, -0.03636533m, 0.0061099813m, 0.005994531m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp a1 = (-428.58005m);
            Fp3x4 b1 = Fp3x4(-63.68457m, 464.9878m, 224.61633m, 360.40833m, -104.604706m, -371.11063m, -185.77655m, 472.09692m, 246.83105m, 280.94666m, 31.30542m, -239.26883m);
            Fp3x4 r1 = Fp3x4(6.7297316m, -0.9217017m, -1.9080538m, -1.1891514m, 4.0971394m, 1.1548579m, 2.3069654m, -0.90782213m, -1.7363296m, -1.5254855m, -13.690283m, 1.7912072m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp a2 = (-139.48044m);
            Fp3x4 b2 = Fp3x4(-405.13333m, -29.43277m, -456.4468m, 62.66205m, -290.4594m, -185.98166m, 120.48212m, 241.99762m, 86.05719m, -12.824341m, 35.62915m, -120.06207m);
            Fp3x4 r2 = Fp3x4(0.3442828m, 4.7389503m, 0.30557874m, -2.2259157m, 0.4802063m, 0.74996877m, -1.1576859m, -0.57637113m, -1.6207877m, 10.876226m, -3.9147842m, 1.161736m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp a3 = (509.15088m);
            Fp3x4 b3 = Fp3x4(-50.303864m, -33.012024m, 293.0298m, 434.4776m, -111.848816m, 143.36371m, 430.94067m, 413.18213m, -32.590485m, -409.5517m, 136.31873m, 443.50647m);
            Fp3x4 r3 = Fp3x4(-10.121507m, -15.423195m, 1.7375396m, 1.1718692m, -4.5521345m, 3.551463m, 1.1814872m, 1.2322674m, -15.622685m, -1.2431908m, 3.7350032m, 1.1480123m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_mod_wide_wide()
        {
            Fp3x4 a0 = Fp3x4(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m, -385.32135m, 75.61359m, 147.87054m, -146.02231m, -188.04791m, 14.303833m);
            Fp3x4 b0 = Fp3x4(470.2685m, -371.4406m, 161.94507m, -151.37039m, 170.21747m, 453.35284m, 433.15808m, -159.1189m, 190.11346m, 46.63446m, 297.8944m, -198.62778m);
            Fp3x4 r0 = Fp3x4(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m, -385.32135m, 75.61359m, 147.87054m, -6.118927m, -188.04791m, 14.303833m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp3x4 a1 = Fp3x4(-56.95459m, -280.97797m, -139.49966m, -284.42224m, 74.799805m, -157.26028m, 208.92334m, 323.4063m, -427.9572m, -270.79147m, 321.25647m, -254.9324m);
            Fp3x4 b1 = Fp3x4(-45.952698m, 401.35815m, -246.4354m, -156.38309m, 33.645386m, 159.46942m, 314.51416m, 458.85156m, -95.67474m, 501.60535m, 141.61151m, 486.41327m);
            Fp3x4 r1 = Fp3x4(-11.001892m, -280.97797m, -139.49966m, -128.03915m, 7.509033m, -157.26028m, 208.92334m, 323.4063m, -45.25824m, -270.79147m, 38.033447m, -254.9324m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp3x4 a2 = Fp3x4(-347.11957m, -33.574707m, -27.461914m, -199.8555m, -56.03534m, 197.51398m, -69.076935m, 500.12927m, -57.36026m, -133.44693m, 78.418335m, 143.95776m);
            Fp3x4 b2 = Fp3x4(-299.43967m, 457.40955m, 49.858154m, 271.02557m, 448.409m, 460.18945m, 215.53345m, -330.93585m, -482.11996m, 93.033264m, 428.14417m, 345.35638m);
            Fp3x4 r2 = Fp3x4(-47.6799m, -33.574707m, -27.461914m, -199.8555m, -56.03534m, 197.51398m, -69.076935m, 169.19342m, -57.36026m, -40.413666m, 78.418335m, 143.95776m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp3x4 a3 = Fp3x4(378.70715m, -37.408386m, 56.685852m, -7.884247m, -303.02026m, 236.47766m, 299.13928m, 383.0788m, -278.49908m, -296.49524m, -394.99982m, 15.928528m);
            Fp3x4 b3 = Fp3x4(-92.87387m, 419.62683m, 24.698425m, 313.4339m, -255.39124m, -352.06m, -229.83185m, -487.05832m, 83.71417m, 272.51434m, 375.21686m, -131.49063m);
            Fp3x4 r3 = Fp3x4(7.21167m, -37.408386m, 7.2890015m, -7.884247m, -47.62903m, 236.47766m, 69.307434m, 383.0788m, -27.356567m, -23.980896m, -19.782959m, 15.928528m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_mod_wide_scalar()
        {
            Fp3x4 a0 = Fp3x4(360.08112m, 57.401245m, -85.35019m, 449.2752m, 4.46344m, 469.19336m, -152.73862m, 262.32312m, 279.7296m, -242.91284m, -24.107025m, 109.5332m);
            Fp b0 = (-297.3982m);
            Fp3x4 r0 = Fp3x4(62.682922m, 57.401245m, -85.35019m, 151.87701m, 4.46344m, 171.79517m, -152.73862m, 262.32312m, 279.7296m, -242.91284m, -24.107025m, 109.5332m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp3x4 a1 = Fp3x4(-276.18713m, 510.55994m, -287.36353m, 173.2602m, -111.50394m, 36.7323m, 330.5569m, 443.2447m, 175.37036m, 496.28973m, 497.073m, -223.45349m);
            Fp b1 = (357.42072m);
            Fp3x4 r1 = Fp3x4(-276.18713m, 153.13922m, -287.36353m, 173.2602m, -111.50394m, 36.7323m, 330.5569m, 85.823975m, 175.37036m, 138.86902m, 139.65228m, -223.45349m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp3x4 a2 = Fp3x4(34.037292m, -84.645294m, -64.484924m, -208.74591m, 153.03174m, -392.8873m, -285.10107m, 496.4566m, -334.78363m, -146.48236m, 197.93994m, 127.76233m);
            Fp b2 = (279.83612m);
            Fp3x4 r2 = Fp3x4(34.037292m, -84.645294m, -64.484924m, -208.74591m, 153.03174m, -113.05118m, -5.2649536m, 216.62048m, -54.94751m, -146.48236m, 197.93994m, 127.76233m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp3x4 a3 = Fp3x4(113.75244m, 27.126526m, 486.995m, 239.77802m, -145.02597m, 309.901m, 36.09198m, 246.49023m, 367.036m, -333.216m, -91.463715m, -91.38098m);
            Fp b3 = (179.05444m);
            Fp3x4 r3 = Fp3x4(113.75244m, 27.126526m, 128.88611m, 60.72357m, -145.02597m, 130.84656m, 36.09198m, 67.43579m, 8.927124m, -154.16156m, -91.463715m, -91.38098m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_mod_scalar_wide()
        {
            Fp a0 = (321.83087m);
            Fp3x4 b0 = Fp3x4(-360.08008m, 271.34174m, -418.93903m, -57.065247m, -18.80716m, 10.327942m, 114.91266m, -373.9153m, -178.94406m, 11.08252m, -162.6925m, 118.41644m);
            Fp3x4 r0 = Fp3x4(321.83087m, 50.489136m, 321.83087m, 36.50464m, 2.1091614m, 1.6646729m, 92.005554m, 321.83087m, 142.88681m, 0.43780518m, 159.13837m, 84.997986m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp a1 = (-13.732086m);
            Fp3x4 b1 = Fp3x4(-58.26706m, 219.90881m, -60.29535m, -317.5764m, -219.50665m, -362.4784m, -481.1638m, 113.84534m, 331.60565m, -180.93997m, 462.0606m, -15.502106m);
            Fp3x4 r1 = Fp3x4(-13.732086m, -13.732086m, -13.732086m, -13.732086m, -13.732086m, -13.732086m, -13.732086m, -13.732086m, -13.732086m, -13.732086m, -13.732086m, -13.732086m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp a2 = (163.53247m);
            Fp3x4 b2 = Fp3x4(-417.56512m, 307.13324m, 198.07489m, 306.0138m, -494.00125m, 325.5888m, -93.9595m, 302.48358m, 394.8454m, 383.88586m, -397.79065m, -312.3375m);
            Fp3x4 r2 = Fp3x4(163.53247m, 163.53247m, 163.53247m, 163.53247m, 163.53247m, 163.53247m, 69.57297m, 163.53247m, 163.53247m, 163.53247m, 163.53247m, 163.53247m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp a3 = (-14.388428m);
            Fp3x4 b3 = Fp3x4(471.38623m, 441.5105m, 152.63403m, -120.74936m, 30.262573m, -328.94565m, -276.52444m, 72.96094m, 491.12256m, 183.73468m, -144.66742m, 379.18573m);
            Fp3x4 r3 = Fp3x4(-14.388428m, -14.388428m, -14.388428m, -14.388428m, -14.388428m, -14.388428m, -14.388428m, -14.388428m, -14.388428m, -14.388428m, -14.388428m, -14.388428m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x4_operator_plus()
        {
            Fp3x4 a0 = Fp3x4(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m, 298.37836m, 256.47144m, 167.59698m, -323.4687m, 500.9478m, -509.95538m);
            Fp3x4 r0 = Fp3x4(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m, 298.37836m, 256.47144m, 167.59698m, -323.4687m, 500.9478m, -509.95538m);
            TestUtils.AreEqual(+a0, r0);

            Fp3x4 a1 = Fp3x4(-135.21799m, 322.83105m, -15.965393m, -401.84415m, -459.20764m, -74.09299m, -399.96255m, -457.5369m, -299.72546m, -281.65063m, -477.81766m, -301.2943m);
            Fp3x4 r1 = Fp3x4(-135.21799m, 322.83105m, -15.965393m, -401.84415m, -459.20764m, -74.09299m, -399.96255m, -457.5369m, -299.72546m, -281.65063m, -477.81766m, -301.2943m);
            TestUtils.AreEqual(+a1, r1);

            Fp3x4 a2 = Fp3x4(-481.5745m, 22.880737m, 441.76825m, 120.826416m, -191.02594m, -311.4584m, 110.38733m, -326.90134m, 450.82037m, -236.8252m, 108.006165m, 123.47583m);
            Fp3x4 r2 = Fp3x4(-481.5745m, 22.880737m, 441.76825m, 120.826416m, -191.02594m, -311.4584m, 110.38733m, -326.90134m, 450.82037m, -236.8252m, 108.006165m, 123.47583m);
            TestUtils.AreEqual(+a2, r2);

            Fp3x4 a3 = Fp3x4(-28.15158m, 201.86536m, -374.0833m, -123.46573m, -396.68372m, 150.03204m, 188.16742m, 273.73688m, 58.68341m, 353.95337m, 251.90247m, 428.5384m);
            Fp3x4 r3 = Fp3x4(-28.15158m, 201.86536m, -374.0833m, -123.46573m, -396.68372m, 150.03204m, 188.16742m, 273.73688m, 58.68341m, 353.95337m, 251.90247m, 428.5384m);
            TestUtils.AreEqual(+a3, r3);
        }

        [Test]
        public static void Fp3x4_operator_neg()
        {
            Fp3x4 a0 = Fp3x4(-161.17307m, 91.577576m, -474.2732m, -138.7461m, -302.52325m, 428.21216m, 440.5053m, -457.04636m, 370.19952m, -126.07272m, 62.18921m, 176.51025m);
            Fp3x4 r0 = Fp3x4(161.17307m, -91.577576m, 474.2732m, 138.7461m, 302.52325m, -428.21216m, -440.5053m, 457.04636m, -370.19952m, 126.07272m, -62.18921m, -176.51025m);
            TestUtils.AreEqual(-a0, r0);

            Fp3x4 a1 = Fp3x4(-386.41965m, -413.31476m, -179.76102m, -394.13074m, 43.724304m, -71.36215m, 147.67554m, 356.8322m, -21.410583m, 480.02087m, 114.6911m, 355.2517m);
            Fp3x4 r1 = Fp3x4(386.41965m, 413.31476m, 179.76102m, 394.13074m, -43.724304m, 71.36215m, -147.67554m, -356.8322m, 21.410583m, -480.02087m, -114.6911m, -355.2517m);
            TestUtils.AreEqual(-a1, r1);

            Fp3x4 a2 = Fp3x4(-243.5343m, 91.395386m, -428.1227m, -418.94492m, 0.4013672m, 60.900513m, 294.01508m, -288.94208m, 470.2558m, -17.734161m, 1.3660278m, 89.249756m);
            Fp3x4 r2 = Fp3x4(243.5343m, -91.395386m, 428.1227m, 418.94492m, -0.4013672m, -60.900513m, -294.01508m, 288.94208m, -470.2558m, 17.734161m, -1.3660278m, -89.249756m);
            TestUtils.AreEqual(-a2, r2);

            Fp3x4 a3 = Fp3x4(-141.22913m, 230.21906m, 361.0404m, 358.10712m, -481.57816m, 39.228638m, -141.58911m, 14.299866m, 131.12927m, 275.95508m, -174.57275m, -27.763397m);
            Fp3x4 r3 = Fp3x4(141.22913m, -230.21906m, -361.0404m, -358.10712m, 481.57816m, -39.228638m, 141.58911m, -14.299866m, -131.12927m, -275.95508m, 174.57275m, 27.763397m);
            TestUtils.AreEqual(-a3, r3);
        }

        [Test]
        public static void Fp3x4_operator_prefix_inc()
        {
            Fp3x4 a0 = Fp3x4(-283.03375m, 366.7337m, -401.91684m, 187.16315m, 27.883484m, 130.98157m, -495.23444m, 224.36108m, 203.96112m, -308.8134m, 28.987854m, -483.0141m);
            Fp3x4 r0 = Fp3x4(-282.03375m, 367.7337m, -400.91684m, 188.16315m, 28.883484m, 131.98157m, -494.23444m, 225.36108m, 204.96112m, -307.8134m, 29.987854m, -482.0141m);
            TestUtils.AreEqual(++a0, r0);

            Fp3x4 a1 = Fp3x4(-269.13318m, 21.258972m, 193.15027m, -143.68582m, 451.3499m, -61.16147m, -183.26956m, 370.29773m, -180.14572m, 235.54474m, 493.35364m, 385.1552m);
            Fp3x4 r1 = Fp3x4(-268.13318m, 22.258972m, 194.15027m, -142.68582m, 452.3499m, -60.16147m, -182.26956m, 371.29773m, -179.14572m, 236.54474m, 494.35364m, 386.1552m);
            TestUtils.AreEqual(++a1, r1);

            Fp3x4 a2 = Fp3x4(-135.32303m, 386.85297m, -218.15811m, -507.06058m, 170.8164m, -500.54514m, -229.95221m, 480.92822m, 75.92224m, -45.670044m, 232.49689m, 96.689026m);
            Fp3x4 r2 = Fp3x4(-134.32303m, 387.85297m, -217.15811m, -506.06058m, 171.8164m, -499.54514m, -228.95221m, 481.92822m, 76.92224m, -44.670044m, 233.49689m, 97.689026m);
            TestUtils.AreEqual(++a2, r2);

            Fp3x4 a3 = Fp3x4(-64.63837m, -287.92206m, -287.37982m, 448.8714m, -258.9793m, 30.043335m, -154.20187m, -511.78778m, -214.91736m, 194.84082m, 171.26593m, -137.3793m);
            Fp3x4 r3 = Fp3x4(-63.638367m, -286.92206m, -286.37982m, 449.8714m, -257.9793m, 31.043335m, -153.20187m, -510.78778m, -213.91736m, 195.84082m, 172.26593m, -136.3793m);
            TestUtils.AreEqual(++a3, r3);
        }

        [Test]
        public static void Fp3x4_operator_postfix_inc()
        {
            Fp3x4 a0 = Fp3x4(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m, 145.12164m, -225.01251m, 375.78876m, 435.95538m, -219.50537m, -302.35114m);
            Fp3x4 r0 = Fp3x4(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m, 145.12164m, -225.01251m, 375.78876m, 435.95538m, -219.50537m, -302.35114m);
            TestUtils.AreEqual(a0++, r0);

            Fp3x4 a1 = Fp3x4(-167.30942m, -195.24594m, 430.40125m, -116.777405m, 495.3412m, -195.3482m, -190.37909m, -511.83737m, -214.7761m, -367.92316m, 425.3698m, 170.81726m);
            Fp3x4 r1 = Fp3x4(-167.30942m, -195.24594m, 430.40125m, -116.777405m, 495.3412m, -195.3482m, -190.37909m, -511.83737m, -214.7761m, -367.92316m, 425.3698m, 170.81726m);
            TestUtils.AreEqual(a1++, r1);

            Fp3x4 a2 = Fp3x4(43.400146m, -73.47418m, 48.611633m, -364.19983m, 462.49628m, -326.0879m, 392.2071m, 137.73834m, 98.75751m, 328.05072m, -421.77307m, 69.77661m);
            Fp3x4 r2 = Fp3x4(43.400146m, -73.47418m, 48.611633m, -364.19983m, 462.49628m, -326.0879m, 392.2071m, 137.73834m, 98.75751m, 328.05072m, -421.77307m, 69.77661m);
            TestUtils.AreEqual(a2++, r2);

            Fp3x4 a3 = Fp3x4(363.83466m, -75.18613m, -158.2237m, 209.37146m, 228.0227m, 50.96631m, -22.291565m, 213.3335m, -268.98807m, -432.4211m, 457.58594m, -151.09213m);
            Fp3x4 r3 = Fp3x4(363.83466m, -75.18613m, -158.2237m, 209.37146m, 228.0227m, 50.96631m, -22.291565m, 213.3335m, -268.98807m, -432.4211m, 457.58594m, -151.09213m);
            TestUtils.AreEqual(a3++, r3);
        }

        [Test]
        public static void Fp3x4_operator_prefix_dec()
        {
            Fp3x4 a0 = Fp3x4(127.71149m, 412.1825m, 421.8966m, -407.7751m, -148.3689m, -202.65967m, -365.90997m, 111.1109m, -473.15137m, -278.87814m, 49.586304m, -490.94742m);
            Fp3x4 r0 = Fp3x4(126.71149m, 411.1825m, 420.8966m, -408.7751m, -149.3689m, -203.65967m, -366.90997m, 110.1109m, -474.15137m, -279.87814m, 48.586304m, -491.94742m);
            TestUtils.AreEqual(--a0, r0);

            Fp3x4 a1 = Fp3x4(437.7041m, -22.001892m, 185.19067m, -135.55646m, 336.039m, -1.5646973m, 310.96857m, 290.07666m, 155.52148m, -183.0806m, 450.9137m, -27.427094m);
            Fp3x4 r1 = Fp3x4(436.7041m, -23.001892m, 184.19067m, -136.55646m, 335.039m, -2.5646973m, 309.96857m, 289.07666m, 154.52148m, -184.0806m, 449.9137m, -28.427094m);
            TestUtils.AreEqual(--a1, r1);

            Fp3x4 a2 = Fp3x4(212.71722m, 167.54565m, 260.42664m, 398.1562m, 405.4978m, 122.074524m, 416.10016m, -365.77808m, 413.51202m, 361.9489m, 209.72174m, 137.383m);
            Fp3x4 r2 = Fp3x4(211.71722m, 166.54565m, 259.42664m, 397.1562m, 404.4978m, 121.074524m, 415.10016m, -366.77808m, 412.51202m, 360.9489m, 208.72174m, 136.383m);
            TestUtils.AreEqual(--a2, r2);

            Fp3x4 a3 = Fp3x4(284.3451m, 163.27411m, -501.06403m, 171.1377m, -318.34418m, -114.14139m, -280.686m, 455.7815m, 305.87256m, -268.68317m, 178.64142m, -94.71127m);
            Fp3x4 r3 = Fp3x4(283.3451m, 162.27411m, -502.06403m, 170.1377m, -319.34418m, -115.14139m, -281.686m, 454.7815m, 304.87256m, -269.68317m, 177.64142m, -95.71127m);
            TestUtils.AreEqual(--a3, r3);
        }

        [Test]
        public static void Fp3x4_operator_postfix_dec()
        {
            Fp3x4 a0 = Fp3x4(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m, 106.726135m, -494.1874m, 442.7943m, 474.02826m, -498.21182m, -259.07544m);
            Fp3x4 r0 = Fp3x4(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m, 106.726135m, -494.1874m, 442.7943m, 474.02826m, -498.21182m, -259.07544m);
            TestUtils.AreEqual(a0--, r0);

            Fp3x4 a1 = Fp3x4(-407.2235m, 272.2155m, -431.75604m, 78.12311m, -341.83966m, 453.72626m, -287.3698m, 211.68933m, 355.79425m, 405.0161m, 420.21088m, -370.72998m);
            Fp3x4 r1 = Fp3x4(-407.2235m, 272.2155m, -431.75604m, 78.12311m, -341.83966m, 453.72626m, -287.3698m, 211.68933m, 355.79425m, 405.0161m, 420.21088m, -370.72998m);
            TestUtils.AreEqual(a1--, r1);

            Fp3x4 a2 = Fp3x4(249.26392m, -492.0752m, 369.93585m, -352.15085m, 98.14557m, -367.599m, -292.01447m, 185.35925m, 132.24475m, 157.39807m, 413.95624m, -91.33191m);
            Fp3x4 r2 = Fp3x4(249.26392m, -492.0752m, 369.93585m, -352.15085m, 98.14557m, -367.599m, -292.01447m, 185.35925m, 132.24475m, 157.39807m, 413.95624m, -91.33191m);
            TestUtils.AreEqual(a2--, r2);

            Fp3x4 a3 = Fp3x4(-268.11438m, -216.78436m, 453.41187m, 373.06952m, -53.40094m, -196.32397m, 468.72064m, -339.4515m, 186.70697m, 448.0797m, -283.4308m, -436.14502m);
            Fp3x4 r3 = Fp3x4(-268.11438m, -216.78436m, 453.41187m, 373.06952m, -53.40094m, -196.32397m, 468.72064m, -339.4515m, 186.70697m, 448.0797m, -283.4308m, -436.14502m);
            TestUtils.AreEqual(a3--, r3);
        }

#endif

    }
}
