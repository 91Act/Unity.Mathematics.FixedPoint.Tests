//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.FixedPoint.MathFp;
namespace Unity.Mathematics.FixedPoint.Tests
{
    [TestFixture]
    public class TestFp2
    {
#if ENABLE_DECIMAL
        [Test]
        public static void Fp2_zero()
        {
            TestUtils.AreEqual(Fp2.zero.x, (Fp)0);
            TestUtils.AreEqual(Fp2.zero.y, (Fp)0);
        }

        [Test]
        public static void Fp2_constructor()
        {
            Fp2 a = new Fp2(1, 2);
            TestUtils.AreEqual(a.x, 1);
            TestUtils.AreEqual(a.y, 2);
        }

        [Test]
        public static void Fp2_scalar_constructor()
        {
            Fp2 a = new Fp2(17.0m);
            TestUtils.AreEqual(a.x, 17.0m);
            TestUtils.AreEqual(a.y, 17.0m);
        }

        [Test]
        public static void Fp2_static_constructor()
        {
            Fp2 a = Fp2(1, 2);
            TestUtils.AreEqual(a.x, 1);
            TestUtils.AreEqual(a.y, 2);
        }

        [Test]
        public static void Fp2_static_scalar_constructor()
        {
            Fp2 a = Fp2(17.0m);
            TestUtils.AreEqual(a.x, 17.0m);
            TestUtils.AreEqual(a.y, 17.0m);
        }

        [Test]
        public static void Fp2_operator_equal_wide_wide()
        {
            Fp2 a0 = Fp2(304.0451m, -242.63562m);
            Fp2 b0 = Fp2(-264.28522m, -218.33426m);
            bool2 r0 = bool2(false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp2 a1 = Fp2(323.91107m, -435.55502m);
            Fp2 b1 = Fp2(253.03296m, 372.23932m);
            bool2 r1 = bool2(false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp2 a2 = Fp2(198.06403m, -117.03351m);
            Fp2 b2 = Fp2(-171.82083m, 49.70288m);
            bool2 r2 = bool2(false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp2 a3 = Fp2(-384.73096m, 304.45056m);
            Fp2 b3 = Fp2(261.85016m, -238.16519m);
            bool2 r3 = bool2(false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp2_operator_equal_wide_scalar()
        {
            Fp2 a0 = Fp2(-441.88464m, -84.34961m);
            Fp b0 = (280.80237m);
            bool2 r0 = bool2(false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp2 a1 = Fp2(-254.78915m, 336.64435m);
            Fp b1 = (-299.5752m);
            bool2 r1 = bool2(false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp2 a2 = Fp2(27.947937m, -82.85208m);
            Fp b2 = (309.77936m);
            bool2 r2 = bool2(false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp2 a3 = Fp2(150.21582m, 440.7932m);
            Fp b3 = (-192.66446m);
            bool2 r3 = bool2(false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp2_operator_equal_scalar_wide()
        {
            Fp a0 = (-193.7709m);
            Fp2 b0 = Fp2(-138.46414m, -273.42194m);
            bool2 r0 = bool2(false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp a1 = (162.6225m);
            Fp2 b1 = Fp2(187.72485m, 382.61987m);
            bool2 r1 = bool2(false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp a2 = (-82.54779m);
            Fp2 b2 = Fp2(298.32867m, -235.21484m);
            bool2 r2 = bool2(false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp a3 = (125.953125m);
            Fp2 b3 = Fp2(-18.586182m, -251.19241m);
            bool2 r3 = bool2(false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp2_operator_not_equal_wide_wide()
        {
            Fp2 a0 = Fp2(-498.66064m, 483.43823m);
            Fp2 b0 = Fp2(496.85205m, 490.64667m);
            bool2 r0 = bool2(true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp2 a1 = Fp2(-368.5275m, -1.0883789m);
            Fp2 b1 = Fp2(-360.57568m, -70.759705m);
            bool2 r1 = bool2(true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp2 a2 = Fp2(-338.3922m, 405.47144m);
            Fp2 b2 = Fp2(-336.28644m, 308.89386m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp2 a3 = Fp2(-431.94257m, -256.16473m);
            Fp2 b3 = Fp2(-222.3328m, 60.620728m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp2_operator_not_equal_wide_scalar()
        {
            Fp2 a0 = Fp2(-491.50952m, 506.73987m);
            Fp b0 = (-40.51297m);
            bool2 r0 = bool2(true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp2 a1 = Fp2(-201.46179m, -47.28424m);
            Fp b1 = (458.7696m);
            bool2 r1 = bool2(true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp2 a2 = Fp2(-178.72217m, -480.9433m);
            Fp b2 = (-4.25885m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp2 a3 = Fp2(380.7296m, 178.6864m);
            Fp b3 = (203.23236m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp2_operator_not_equal_scalar_wide()
        {
            Fp a0 = (-84.47537m);
            Fp2 b0 = Fp2(145.24762m, -294.39984m);
            bool2 r0 = bool2(true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp a1 = (-501.69632m);
            Fp2 b1 = Fp2(-231.25659m, -315.36432m);
            bool2 r1 = bool2(true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp a2 = (-83.16135m);
            Fp2 b2 = Fp2(-131.2561m, 504.67365m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp a3 = (-449.54895m);
            Fp2 b3 = Fp2(-457.44342m, -376.26813m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp2_operator_less_wide_wide()
        {
            Fp2 a0 = Fp2(-248.45181m, -455.30365m);
            Fp2 b0 = Fp2(225.04071m, 307.312m);
            bool2 r0 = bool2(true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp2 a1 = Fp2(320.315m, -270.12848m);
            Fp2 b1 = Fp2(-435.28625m, 384.59454m);
            bool2 r1 = bool2(false, true);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp2 a2 = Fp2(-52.971436m, 351.49738m);
            Fp2 b2 = Fp2(128.18854m, 25.515686m);
            bool2 r2 = bool2(true, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp2 a3 = Fp2(-189.24158m, 166.60394m);
            Fp2 b3 = Fp2(253.86078m, -402.4974m);
            bool2 r3 = bool2(true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp2_operator_less_wide_scalar()
        {
            Fp2 a0 = Fp2(-217.34143m, -154.63306m);
            Fp b0 = (-277.67377m);
            bool2 r0 = bool2(false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp2 a1 = Fp2(-189.59198m, 449.96143m);
            Fp b1 = (-383.10138m);
            bool2 r1 = bool2(false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp2 a2 = Fp2(-495.594m, 278.93567m);
            Fp b2 = (339.89673m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp2 a3 = Fp2(448.09546m, -379.16406m);
            Fp b3 = (168.98419m);
            bool2 r3 = bool2(false, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp2_operator_less_scalar_wide()
        {
            Fp a0 = (-485.6832m);
            Fp2 b0 = Fp2(-362.635m, -4.044037m);
            bool2 r0 = bool2(true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp a1 = (131.79993m);
            Fp2 b1 = Fp2(413.48376m, 382.34747m);
            bool2 r1 = bool2(true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp a2 = (55.00757m);
            Fp2 b2 = Fp2(-373.25812m, -144.24112m);
            bool2 r2 = bool2(false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp a3 = (-243.22845m);
            Fp2 b3 = Fp2(212.25671m, 71.16406m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp2_operator_greater_wide_wide()
        {
            Fp2 a0 = Fp2(-241.33841m, -475.21497m);
            Fp2 b0 = Fp2(438.91602m, 228.49042m);
            bool2 r0 = bool2(false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp2 a1 = Fp2(-39.85724m, -167.34067m);
            Fp2 b1 = Fp2(-206.5971m, 366.85388m);
            bool2 r1 = bool2(true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp2 a2 = Fp2(-383.31873m, 119.09595m);
            Fp2 b2 = Fp2(35.72583m, -91.07013m);
            bool2 r2 = bool2(false, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp2 a3 = Fp2(134.24622m, 295.21844m);
            Fp2 b3 = Fp2(154.46704m, 467.31146m);
            bool2 r3 = bool2(false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp2_operator_greater_wide_scalar()
        {
            Fp2 a0 = Fp2(-348.3178m, -2.4205933m);
            Fp b0 = (239.55536m);
            bool2 r0 = bool2(false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp2 a1 = Fp2(423.71265m, -209.6311m);
            Fp b1 = (250.03534m);
            bool2 r1 = bool2(true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp2 a2 = Fp2(-121.415405m, 420.89746m);
            Fp b2 = (202.20648m);
            bool2 r2 = bool2(false, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp2 a3 = Fp2(422.2362m, -84.361145m);
            Fp b3 = (-299.2479m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp2_operator_greater_scalar_wide()
        {
            Fp a0 = (-34.200226m);
            Fp2 b0 = Fp2(212.36633m, 82.05115m);
            bool2 r0 = bool2(false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp a1 = (458.8661m);
            Fp2 b1 = Fp2(136.99329m, 227.5271m);
            bool2 r1 = bool2(true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp a2 = (495.51807m);
            Fp2 b2 = Fp2(-142.25m, -196.3866m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp a3 = (-97.57742m);
            Fp2 b3 = Fp2(-241.31299m, -139.42554m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp2_operator_less_equal_wide_wide()
        {
            Fp2 a0 = Fp2(-266.1326m, -124.733765m);
            Fp2 b0 = Fp2(-192.43298m, -372.29657m);
            bool2 r0 = bool2(true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp2 a1 = Fp2(-292.27527m, 24.822144m);
            Fp2 b1 = Fp2(-239.20337m, -314.14038m);
            bool2 r1 = bool2(true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp2 a2 = Fp2(-272.5923m, -285.86377m);
            Fp2 b2 = Fp2(439.8761m, 301.66156m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp2 a3 = Fp2(384.44617m, 267.29004m);
            Fp2 b3 = Fp2(257.67798m, -234.71451m);
            bool2 r3 = bool2(false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp2_operator_less_equal_wide_scalar()
        {
            Fp2 a0 = Fp2(-347.2307m, 357.8626m);
            Fp b0 = (-160.18707m);
            bool2 r0 = bool2(true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp2 a1 = Fp2(-179.71185m, 26.583496m);
            Fp b1 = (-320.96027m);
            bool2 r1 = bool2(false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp2 a2 = Fp2(-314.84348m, 479.43463m);
            Fp b2 = (219.6524m);
            bool2 r2 = bool2(true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp2 a3 = Fp2(166.25684m, 508.216m);
            Fp b3 = (94.45245m);
            bool2 r3 = bool2(false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp2_operator_less_equal_scalar_wide()
        {
            Fp a0 = (-187.50052m);
            Fp2 b0 = Fp2(177.5221m, -221.34222m);
            bool2 r0 = bool2(true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp a1 = (-35.76126m);
            Fp2 b1 = Fp2(354.90814m, 297.5418m);
            bool2 r1 = bool2(true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp a2 = (-487.66107m);
            Fp2 b2 = Fp2(217.42084m, -94.54605m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp a3 = (283.79358m);
            Fp2 b3 = Fp2(431.82996m, -8.173676m);
            bool2 r3 = bool2(true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp2_operator_greater_equal_wide_wide()
        {
            Fp2 a0 = Fp2(-480.5502m, -331.65723m);
            Fp2 b0 = Fp2(-13.955231m, -36.309723m);
            bool2 r0 = bool2(false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp2 a1 = Fp2(-467.8819m, -426.36612m);
            Fp2 b1 = Fp2(-361.51007m, -270.75452m);
            bool2 r1 = bool2(false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp2 a2 = Fp2(130.68m, 397.9231m);
            Fp2 b2 = Fp2(-221.99017m, 153.435m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp2 a3 = Fp2(318.48987m, -65.386536m);
            Fp2 b3 = Fp2(90.831665m, -417.45892m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp2_operator_greater_equal_wide_scalar()
        {
            Fp2 a0 = Fp2(-100.195435m, 360.16846m);
            Fp b0 = (71.966736m);
            bool2 r0 = bool2(false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp2 a1 = Fp2(-374.34125m, -297.3426m);
            Fp b1 = (242.43842m);
            bool2 r1 = bool2(false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp2 a2 = Fp2(155.94312m, 91.45465m);
            Fp b2 = (-314.72128m);
            bool2 r2 = bool2(true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp2 a3 = Fp2(-222.22919m, -277.31842m);
            Fp b3 = (-388.12286m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp2_operator_greater_equal_scalar_wide()
        {
            Fp a0 = (66.15973m);
            Fp2 b0 = Fp2(228.81372m, -371.95468m);
            bool2 r0 = bool2(false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp a1 = (184.22943m);
            Fp2 b1 = Fp2(266.50446m, 225.0069m);
            bool2 r1 = bool2(false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp a2 = (-488.35345m);
            Fp2 b2 = Fp2(-52.242126m, 451.52258m);
            bool2 r2 = bool2(false, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp a3 = (52.532227m);
            Fp2 b3 = Fp2(45.85956m, -379.48004m);
            bool2 r3 = bool2(true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp2_operator_add_wide_wide()
        {
            Fp2 a0 = Fp2(149.59412m, 261.85114m);
            Fp2 b0 = Fp2(82.11688m, -336.5427m);
            Fp2 r0 = Fp2(231.711m, -74.69156m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp2 a1 = Fp2(134.76111m, 296.27722m);
            Fp2 b1 = Fp2(-203.66907m, 348.16364m);
            Fp2 r1 = Fp2(-68.90796m, 644.44086m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp2 a2 = Fp2(-87.83832m, 262.9261m);
            Fp2 b2 = Fp2(417.2708m, 96.18884m);
            Fp2 r2 = Fp2(329.4325m, 359.11493m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp2 a3 = Fp2(-230.0998m, -408.89618m);
            Fp2 b3 = Fp2(-128.52588m, 215.17627m);
            Fp2 r3 = Fp2(-358.62567m, -193.71991m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp2_operator_add_wide_scalar()
        {
            Fp2 a0 = Fp2(-363.30127m, 85.21643m);
            Fp b0 = (84.48932m);
            Fp2 r0 = Fp2(-278.81195m, 169.70575m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp2 a1 = Fp2(307.5595m, 213.70538m);
            Fp b1 = (-324.80725m);
            Fp2 r1 = Fp2(-17.247742m, -111.10187m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp2 a2 = Fp2(85.79199m, 389.57996m);
            Fp b2 = (-287.34515m);
            Fp2 r2 = Fp2(-201.55316m, 102.2348m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp2 a3 = Fp2(474.44275m, -410.64044m);
            Fp b3 = (286.0359m);
            Fp2 r3 = Fp2(760.47864m, -124.60455m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp2_operator_add_scalar_wide()
        {
            Fp a0 = (-510.89264m);
            Fp2 b0 = Fp2(130.32959m, 272.09174m);
            Fp2 r0 = Fp2(-380.56305m, -238.8009m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp a1 = (331.812m);
            Fp2 b1 = Fp2(-379.09714m, 397.8896m);
            Fp2 r1 = Fp2(-47.285126m, 729.7016m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp a2 = (-333.4043m);
            Fp2 b2 = Fp2(-9.8524475m, 236.39392m);
            Fp2 r2 = Fp2(-343.25674m, -97.010376m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp a3 = (-45.938232m);
            Fp2 b3 = Fp2(-418.6372m, -504.4516m);
            Fp2 r3 = Fp2(-464.57544m, -550.38983m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp2_operator_sub_wide_wide()
        {
            Fp2 a0 = Fp2(-493.45367m, -228.40881m);
            Fp2 b0 = Fp2(-470.96182m, 95.77942m);
            Fp2 r0 = Fp2(-22.491852m, -324.18823m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp2 a1 = Fp2(463.7627m, 280.9309m);
            Fp2 b1 = Fp2(189.22583m, -88.87137m);
            Fp2 r1 = Fp2(274.53687m, 369.80228m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp2 a2 = Fp2(-394.85977m, -289.75592m);
            Fp2 b2 = Fp2(-353.6308m, -352.10352m);
            Fp2 r2 = Fp2(-41.228973m, 62.347595m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp2 a3 = Fp2(248.1676m, 499.35565m);
            Fp2 b3 = Fp2(346.07532m, -379.2524m);
            Fp2 r3 = Fp2(-97.907715m, 878.60803m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp2_operator_sub_wide_scalar()
        {
            Fp2 a0 = Fp2(-483.1618m, 208.13171m);
            Fp b0 = (-369.26047m);
            Fp2 r0 = Fp2(-113.90134m, 577.3922m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp2 a1 = Fp2(-387.3754m, 167.81488m);
            Fp b1 = (-336.09125m);
            Fp2 r1 = Fp2(-51.28415m, 503.90613m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp2 a2 = Fp2(-376.95837m, -303.7441m);
            Fp b2 = (348.0346m);
            Fp2 r2 = Fp2(-724.993m, -651.7787m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp2 a3 = Fp2(237.17828m, -357.72092m);
            Fp b3 = (276.68842m);
            Fp2 r3 = Fp2(-39.51013m, -634.4093m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp2_operator_sub_scalar_wide()
        {
            Fp a0 = (-400.4135m);
            Fp2 b0 = Fp2(-434.79865m, -476.15903m);
            Fp2 r0 = Fp2(34.38513m, 75.745514m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp a1 = (360.5266m);
            Fp2 b1 = Fp2(427.36743m, 34.250977m);
            Fp2 r1 = Fp2(-66.84082m, 326.27563m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp a2 = (-102.27759m);
            Fp2 b2 = Fp2(-235.2923m, -404.2934m);
            Fp2 r2 = Fp2(133.01471m, 302.0158m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp a3 = (53.207886m);
            Fp2 b3 = Fp2(-349.06525m, 180.38147m);
            Fp2 r3 = Fp2(402.27313m, -127.173584m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp2_operator_mul_wide_wide()
        {
            Fp2 a0 = Fp2(-326.98944m, 183.26929m);
            Fp2 b0 = Fp2(351.58496m, 113.25659m);
            Fp2 r0 = Fp2(-114964.57m, 20756.455m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp2 a1 = Fp2(-95.33392m, -352.96515m);
            Fp2 b1 = Fp2(286.7157m, 288.06653m);
            Fp2 r1 = Fp2(-27333.732m, -101677.445m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp2 a2 = Fp2(-222.24484m, 237.92462m);
            Fp2 b2 = Fp2(327.3562m, 406.58655m);
            Fp2 r2 = Fp2(-72753.23m, 96736.95m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp2 a3 = Fp2(-66.21646m, -462.0301m);
            Fp2 b3 = Fp2(-200.43045m, 386.18604m);
            Fp2 r3 = Fp2(13271.795m, -178429.56m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp2_operator_mul_wide_scalar()
        {
            Fp2 a0 = Fp2(398.63098m, 133.9815m);
            Fp b0 = (188.26575m);
            Fp2 r0 = Fp2(75048.56m, 25224.129m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp2 a1 = Fp2(100.58301m, -66.26727m);
            Fp b1 = (289.0614m);
            Fp2 r1 = Fp2(29074.666m, -19155.31m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp2 a2 = Fp2(-440.14893m, 258.4983m);
            Fp b2 = (265.87543m);
            Fp2 r2 = Fp2(-117024.78m, 68728.34m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp2 a3 = Fp2(-59.58963m, -313.44278m);
            Fp b3 = (338.4347m);
            Fp2 r3 = Fp2(-20167.197m, -106079.914m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp2_operator_mul_scalar_wide()
        {
            Fp a0 = (291.10083m);
            Fp2 b0 = Fp2(85.88977m, -2.0483398m);
            Fp2 r0 = Fp2(25002.584m, -596.27344m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp a1 = (-372.21533m);
            Fp2 b1 = Fp2(-32.73163m, -458.91272m);
            Fp2 r1 = Fp2(12183.214m, 170814.34m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp a2 = (-425.4938m);
            Fp2 b2 = Fp2(127.91998m, 166.95068m);
            Fp2 r2 = Fp2(-54429.16m, -71036.484m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp a3 = (-505.2238m);
            Fp2 b3 = Fp2(-52.959717m, 493.21753m);
            Fp2 r3 = Fp2(26756.508m, -249185.23m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp2_operator_div_wide_wide()
        {
            Fp2 a0 = Fp2(-434.30182m, -58.547546m);
            Fp2 b0 = Fp2(-418.87305m, 154.74506m);
            Fp2 r0 = Fp2(1.036834m, -0.3783484m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp2 a1 = Fp2(-242.22162m, -61.09958m);
            Fp2 b1 = Fp2(228.1217m, 170.04639m);
            Fp2 r1 = Fp2(-1.0618087m, -0.35931125m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp2 a2 = Fp2(507.04565m, 55.52173m);
            Fp2 b2 = Fp2(-183.44586m, 254.94373m);
            Fp2 r2 = Fp2(-2.764007m, 0.21778034m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp2 a3 = Fp2(84.16864m, 121.1817m);
            Fp2 b3 = Fp2(-327.2115m, -54.62494m);
            Fp2 r3 = Fp2(-0.2572301m, -2.2184317m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp2_operator_div_wide_scalar()
        {
            Fp2 a0 = Fp2(338.5183m, 342.57233m);
            Fp b0 = (18.585693m);
            Fp2 r0 = Fp2(18.213919m, 18.432045m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp2 a1 = Fp2(-162.55743m, -435.44455m);
            Fp b1 = (62.311157m);
            Fp2 r1 = Fp2(-2.6088014m, -6.988228m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp2 a2 = Fp2(124.90289m, -230.52808m);
            Fp b2 = (336.1009m);
            Fp2 r2 = Fp2(0.37162322m, -0.6858895m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp2 a3 = Fp2(-93.8689m, -412.19177m);
            Fp b3 = (-125.544495m);
            Fp2 r3 = Fp2(0.74769425m, 3.2832325m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp2_operator_div_scalar_wide()
        {
            Fp a0 = (2.9528809m);
            Fp2 b0 = Fp2(260.17004m, 427.25922m);
            Fp2 r0 = Fp2(0.011349811m, 0.0069112163m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp a1 = (-21.09494m);
            Fp2 b1 = Fp2(-20.552216m, -133.13852m);
            Fp2 r1 = Fp2(1.0264071m, 0.15844356m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp a2 = (254.63452m);
            Fp2 b2 = Fp2(-286.85498m, 186.54468m);
            Fp2 r2 = Fp2(-0.88767684m, 1.3650056m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp a3 = (172.25421m);
            Fp2 b3 = Fp2(-81.20044m, 483.28802m);
            Fp2 r3 = Fp2(-2.1213458m, 0.35642144m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp2_operator_mod_wide_wide()
        {
            Fp2 a0 = Fp2(56.91992m, -262.2188m);
            Fp2 b0 = Fp2(470.2685m, -371.4406m);
            Fp2 r0 = Fp2(56.91992m, -262.2188m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp2 a1 = Fp2(-97.763245m, 104.89154m);
            Fp2 b1 = Fp2(161.94507m, -151.37039m);
            Fp2 r1 = Fp2(-97.763245m, 104.89154m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp2 a2 = Fp2(-65.37125m, -126.50305m);
            Fp2 b2 = Fp2(170.21747m, 453.35284m);
            Fp2 r2 = Fp2(-65.37125m, -126.50305m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp2 a3 = Fp2(-385.32135m, 75.61359m);
            Fp2 b3 = Fp2(433.15808m, -159.1189m);
            Fp2 r3 = Fp2(-385.32135m, 75.61359m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp2_operator_mod_wide_scalar()
        {
            Fp2 a0 = Fp2(360.08112m, 57.401245m);
            Fp b0 = (-297.3982m);
            Fp2 r0 = Fp2(62.682922m, 57.401245m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp2 a1 = Fp2(-85.35019m, 4.46344m);
            Fp b1 = (449.2752m);
            Fp2 r1 = Fp2(-85.35019m, 4.46344m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp2 a2 = Fp2(469.19336m, 262.32312m);
            Fp b2 = (-152.73862m);
            Fp2 r2 = Fp2(10.977509m, 109.5845m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp2 a3 = Fp2(279.7296m, -24.107025m);
            Fp b3 = (-242.91284m);
            Fp2 r3 = Fp2(36.816772m, -24.107025m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp2_operator_mod_scalar_wide()
        {
            Fp a0 = (321.83087m);
            Fp2 b0 = Fp2(-360.08008m, 271.34174m);
            Fp2 r0 = Fp2(321.83087m, 50.489136m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp a1 = (-418.93903m);
            Fp2 b1 = Fp2(-57.065247m, -18.80716m);
            Fp2 r1 = Fp2(-19.4823m, -5.1815186m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp a2 = (10.327942m);
            Fp2 b2 = Fp2(114.91266m, -373.9153m);
            Fp2 r2 = Fp2(10.327942m, 10.327942m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp a3 = (-178.94406m);
            Fp2 b3 = Fp2(11.08252m, -162.6925m);
            Fp2 r3 = Fp2(-1.6237488m, -16.251556m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp2_operator_plus()
        {
            Fp2 a0 = Fp2(-462.95068m, -341.85828m);
            Fp2 r0 = Fp2(-462.95068m, -341.85828m);
            TestUtils.AreEqual(+a0, r0);

            Fp2 a1 = Fp2(350.2633m, -402.10608m);
            Fp2 r1 = Fp2(350.2633m, -402.10608m);
            TestUtils.AreEqual(+a1, r1);

            Fp2 a2 = Fp2(-325.1939m, 256.47144m);
            Fp2 r2 = Fp2(-325.1939m, 256.47144m);
            TestUtils.AreEqual(+a2, r2);

            Fp2 a3 = Fp2(167.59698m, 500.9478m);
            Fp2 r3 = Fp2(167.59698m, 500.9478m);
            TestUtils.AreEqual(+a3, r3);
        }

        [Test]
        public static void Fp2_operator_neg()
        {
            Fp2 a0 = Fp2(-161.17307m, 91.577576m);
            Fp2 r0 = Fp2(161.17307m, -91.577576m);
            TestUtils.AreEqual(-a0, r0);

            Fp2 a1 = Fp2(-474.2732m, -302.52325m);
            Fp2 r1 = Fp2(474.2732m, 302.52325m);
            TestUtils.AreEqual(-a1, r1);

            Fp2 a2 = Fp2(428.21216m, -457.04636m);
            Fp2 r2 = Fp2(-428.21216m, 457.04636m);
            TestUtils.AreEqual(-a2, r2);

            Fp2 a3 = Fp2(370.19952m, 62.18921m);
            Fp2 r3 = Fp2(-370.19952m, -62.18921m);
            TestUtils.AreEqual(-a3, r3);
        }

        [Test]
        public static void Fp2_operator_prefix_inc()
        {
            Fp2 a0 = Fp2(-283.03375m, 366.7337m);
            Fp2 r0 = Fp2(-282.03375m, 367.7337m);
            TestUtils.AreEqual(++a0, r0);

            Fp2 a1 = Fp2(-401.91684m, 27.883484m);
            Fp2 r1 = Fp2(-400.91684m, 28.883484m);
            TestUtils.AreEqual(++a1, r1);

            Fp2 a2 = Fp2(130.98157m, 224.36108m);
            Fp2 r2 = Fp2(131.98157m, 225.36108m);
            TestUtils.AreEqual(++a2, r2);

            Fp2 a3 = Fp2(203.96112m, 28.987854m);
            Fp2 r3 = Fp2(204.96112m, 29.987854m);
            TestUtils.AreEqual(++a3, r3);
        }

        [Test]
        public static void Fp2_operator_postfix_inc()
        {
            Fp2 a0 = Fp2(366.14648m, 179.27643m);
            Fp2 r0 = Fp2(366.14648m, 179.27643m);
            TestUtils.AreEqual(a0++, r0);

            Fp2 a1 = Fp2(-389.90704m, 189.8518m);
            Fp2 r1 = Fp2(-389.90704m, 189.8518m);
            TestUtils.AreEqual(a1++, r1);

            Fp2 a2 = Fp2(-110.858795m, -225.01251m);
            Fp2 r2 = Fp2(-110.858795m, -225.01251m);
            TestUtils.AreEqual(a2++, r2);

            Fp2 a3 = Fp2(375.78876m, -219.50537m);
            Fp2 r3 = Fp2(375.78876m, -219.50537m);
            TestUtils.AreEqual(a3++, r3);
        }

        [Test]
        public static void Fp2_operator_prefix_dec()
        {
            Fp2 a0 = Fp2(127.71149m, 412.1825m);
            Fp2 r0 = Fp2(126.71149m, 411.1825m);
            TestUtils.AreEqual(--a0, r0);

            Fp2 a1 = Fp2(421.8966m, -148.3689m);
            Fp2 r1 = Fp2(420.8966m, -149.3689m);
            TestUtils.AreEqual(--a1, r1);

            Fp2 a2 = Fp2(-202.65967m, 111.1109m);
            Fp2 r2 = Fp2(-203.65967m, 110.1109m);
            TestUtils.AreEqual(--a2, r2);

            Fp2 a3 = Fp2(-473.15137m, 49.586304m);
            Fp2 r3 = Fp2(-474.15137m, 48.586304m);
            TestUtils.AreEqual(--a3, r3);
        }

        [Test]
        public static void Fp2_operator_postfix_dec()
        {
            Fp2 a0 = Fp2(333.3805m, -215.50674m);
            Fp2 r0 = Fp2(333.3805m, -215.50674m);
            TestUtils.AreEqual(a0--, r0);

            Fp2 a1 = Fp2(152.04675m, -187.37677m);
            Fp2 r1 = Fp2(152.04675m, -187.37677m);
            TestUtils.AreEqual(a1--, r1);

            Fp2 a2 = Fp2(39.012817m, -494.1874m);
            Fp2 r2 = Fp2(39.012817m, -494.1874m);
            TestUtils.AreEqual(a2--, r2);

            Fp2 a3 = Fp2(442.7943m, -498.21182m);
            Fp2 r3 = Fp2(442.7943m, -498.21182m);
            TestUtils.AreEqual(a3--, r3);
        }

        [Test]
        public static void Fp2_shuffle_result_1()
        {
            Fp2 a = Fp2(0, 1);
            Fp2 b = Fp2(2, 3);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX), (0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY), (1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX), (2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY), (3));
        }

        [Test]
        public static void Fp2_shuffle_result_2()
        {
            Fp2 a = Fp2(0, 1);
            Fp2 b = Fp2(2, 3);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftX), Fp2(0, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.LeftX), Fp2(1, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftX), Fp2(2, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX), Fp2(3, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftY), Fp2(0, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.LeftY), Fp2(1, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftY), Fp2(2, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftY), Fp2(3, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.RightX), Fp2(0, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.RightX), Fp2(1, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightX), Fp2(2, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX), Fp2(3, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.RightY), Fp2(0, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.RightY), Fp2(1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightY), Fp2(2, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightY), Fp2(3, 3));
        }

        [Test]
        public static void Fp2_shuffle_result_3()
        {
            Fp2 a = Fp2(0, 1);
            Fp2 b = Fp2(2, 3);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightY, ShuffleComponent.RightY), Fp3(2, 3, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftX, ShuffleComponent.RightX), Fp3(2, 0, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftY, ShuffleComponent.RightY), Fp3(3, 1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.LeftY, ShuffleComponent.LeftY), Fp3(1, 1, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.RightY), Fp3(2, 1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.RightY, ShuffleComponent.RightY), Fp3(0, 3, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.RightY), Fp3(2, 1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightY, ShuffleComponent.LeftX), Fp3(3, 3, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightX, ShuffleComponent.RightY), Fp3(2, 2, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightX, ShuffleComponent.LeftX), Fp3(2, 2, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftY, ShuffleComponent.LeftY), Fp3(0, 1, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX, ShuffleComponent.RightY), Fp3(3, 2, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftY, ShuffleComponent.LeftY), Fp3(0, 1, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX, ShuffleComponent.RightX), Fp3(3, 2, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftY, ShuffleComponent.RightY), Fp3(0, 1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftY, ShuffleComponent.LeftY), Fp3(3, 1, 1));
        }

        [Test]
        public static void Fp2_shuffle_result_4()
        {
            Fp2 a = Fp2(0, 1);
            Fp2 b = Fp2(2, 3);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftX, ShuffleComponent.LeftY, ShuffleComponent.RightX), Fp4(0, 0, 1, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.LeftX, ShuffleComponent.RightY), Fp4(2, 1, 0, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX, ShuffleComponent.RightY, ShuffleComponent.RightX), Fp4(3, 2, 3, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftX, ShuffleComponent.RightY, ShuffleComponent.RightY), Fp4(2, 0, 3, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.RightX), Fp4(0, 3, 0, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.RightY, ShuffleComponent.LeftY), Fp4(3, 0, 3, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightX, ShuffleComponent.RightY, ShuffleComponent.LeftX), Fp4(2, 2, 3, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightX, ShuffleComponent.LeftX, ShuffleComponent.RightY), Fp4(2, 2, 0, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftY, ShuffleComponent.RightX, ShuffleComponent.LeftY), Fp4(0, 1, 2, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.RightY, ShuffleComponent.RightY), Fp4(2, 1, 3, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightY, ShuffleComponent.RightY, ShuffleComponent.LeftY), Fp4(3, 3, 3, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.LeftY), Fp4(2, 2, 1, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.LeftX, ShuffleComponent.LeftX), Fp4(3, 0, 0, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightX, ShuffleComponent.RightX, ShuffleComponent.RightY), Fp4(2, 2, 2, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.RightY), Fp4(0, 3, 0, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftX, ShuffleComponent.LeftX, ShuffleComponent.LeftX), Fp4(2, 0, 0, 0));
        }

#endif

    }
}
