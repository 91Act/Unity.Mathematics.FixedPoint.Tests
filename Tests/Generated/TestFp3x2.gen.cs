//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.FixedPoint.MathFp;
namespace Unity.Mathematics.FixedPoint.Tests
{
    [TestFixture]
    public class TestFp3x2
    {
#if ENABLE_DECIMAL
        [Test]
        public static void Fp3x2_zero()
        {
            TestUtils.AreEqual(Fp3x2.zero.c0.x, (Fp)0);
            TestUtils.AreEqual(Fp3x2.zero.c0.y, (Fp)0);
            TestUtils.AreEqual(Fp3x2.zero.c0.z, (Fp)0);
            TestUtils.AreEqual(Fp3x2.zero.c1.x, (Fp)0);
            TestUtils.AreEqual(Fp3x2.zero.c1.y, (Fp)0);
            TestUtils.AreEqual(Fp3x2.zero.c1.z, (Fp)0);
        }

        [Test]
        public static void Fp3x2_operator_equal_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(304.0451m, -242.63562m, 323.91107m, -435.55502m, 198.06403m, -117.03351m);
            Fp3x2 b0 = Fp3x2(-264.28522m, -218.33426m, 253.03296m, 372.23932m, -171.82083m, 49.70288m);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp3x2 a1 = Fp3x2(-384.73096m, 304.45056m, 57.849m, 245.8263m, -303.59222m, -446.4428m);
            Fp3x2 b1 = Fp3x2(261.85016m, -238.16519m, -368.79456m, -479.64792m, 213.87708m, -320.8371m);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp3x2 a2 = Fp3x2(238.98315m, 171.6228m, -291.7655m, -139.28052m, -372.00873m, 116.63696m);
            Fp3x2 b2 = Fp3x2(93.80847m, 25.883423m, -489.63315m, -447.4523m, 399.854m, -88.43811m);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp3x2 a3 = Fp3x2(-412.20416m, 189.54596m, 60.885193m, 55.26001m, 466.31592m, 274.3271m);
            Fp3x2 b3 = Fp3x2(-399.37903m, 96.70093m, -256.15207m, -480.7037m, -294.3447m, -162.43436m);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_equal_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(-441.88464m, -84.34961m, -254.78915m, -299.5752m, 336.64435m, 27.947937m);
            Fp b0 = (280.80237m);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp3x2 a1 = Fp3x2(309.77936m, 150.21582m, -192.66446m, 440.7932m, -389.2873m, -329.5147m);
            Fp b1 = (-82.85208m);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp3x2 a2 = Fp3x2(247.63269m, -438.72107m, 169.65619m, -247.76123m, 231.31848m, -53.607788m);
            Fp b2 = (90.41724m);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp3x2 a3 = Fp3x2(105.0813m, 34.19281m, 508.6532m, 486.59094m, 400.13477m, -411.47345m);
            Fp b3 = (-504.72043m);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_equal_scalar_wide()
        {
            Fp a0 = (-193.7709m);
            Fp3x2 b0 = Fp3x2(-138.46414m, -273.42194m, 162.6225m, 187.72485m, 382.61987m, -82.54779m);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp a1 = (298.32867m);
            Fp3x2 b1 = Fp3x2(-235.21484m, 125.953125m, -18.586182m, -251.19241m, -295.58725m, -402.58438m);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp a2 = (258.1311m);
            Fp3x2 b2 = Fp3x2(-128.23999m, 490.22418m, -125.58237m, -237.95346m, -202.5444m, 210.6543m);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp a3 = (-485.73117m);
            Fp3x2 b3 = Fp3x2(-451.5777m, 58.90094m, 60.381775m, -380.57666m, 428.50537m, -510.5632m);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_not_equal_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(-498.66064m, 483.43823m, -368.5275m, -1.0883789m, -338.3922m, 405.47144m);
            Fp3x2 b0 = Fp3x2(496.85205m, 490.64667m, -360.57568m, -70.759705m, -336.28644m, 308.89386m);
            bool3x2 r0 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp3x2 a1 = Fp3x2(-431.94257m, -256.16473m, 431.58868m, -181.17221m, -231.57767m, 338.64343m);
            Fp3x2 b1 = Fp3x2(-222.3328m, 60.620728m, 234.66309m, -55.329132m, -350.50763m, 419.24213m);
            bool3x2 r1 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp3x2 a2 = Fp3x2(269.79736m, -118.2919m, -148.18341m, -383.60794m, -32.300903m, 97.237854m);
            Fp3x2 b2 = Fp3x2(-435.70135m, 162.47571m, -183.24216m, -115.81906m, 292.2118m, -145.54517m);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp3x2 a3 = Fp3x2(-10.931793m, -461.59253m, 44.711792m, 78.70465m, 373.8048m, -40.56546m);
            Fp3x2 b3 = Fp3x2(-180.45279m, 473.34064m, -465.45633m, -226.7468m, -213.40073m, -457.89676m);
            bool3x2 r3 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_not_equal_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(-491.50952m, 506.73987m, -201.46179m, 458.7696m, -47.28424m, -178.72217m);
            Fp b0 = (-40.51297m);
            bool3x2 r0 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp3x2 a1 = Fp3x2(-4.25885m, 380.7296m, 203.23236m, 178.6864m, -210.24811m, 149.29901m);
            Fp b1 = (-480.9433m);
            bool3x2 r1 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp3x2 a2 = Fp3x2(307.94647m, -81.21683m, 395.02234m, -193.018m, 237.71686m, -401.1488m);
            Fp b2 = (-204.93494m);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp3x2 a3 = Fp3x2(321.42255m, -454.762m, 403.64246m, -502.65527m, 317.45734m, -268.6849m);
            Fp b3 = (158.42194m);
            bool3x2 r3 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_not_equal_scalar_wide()
        {
            Fp a0 = (-84.47537m);
            Fp3x2 b0 = Fp3x2(145.24762m, -294.39984m, -501.69632m, -231.25659m, -315.36432m, -83.16135m);
            bool3x2 r0 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp a1 = (-131.2561m);
            Fp3x2 b1 = Fp3x2(504.67365m, -449.54895m, -457.44342m, -376.26813m, -385.2497m, 425.68658m);
            bool3x2 r1 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp a2 = (-18.988708m);
            Fp3x2 b2 = Fp3x2(-334.19855m, 155.14642m, -431.13464m, 231.5097m, -168.78336m, -38.183533m);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp a3 = (412.3233m);
            Fp3x2 b3 = Fp3x2(-199.63107m, -218.60913m, 351.11078m, 71.79602m, -157.31311m, -244.58215m);
            bool3x2 r3 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_less_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(-248.45181m, -455.30365m, 320.315m, -270.12848m, -52.971436m, 351.49738m);
            Fp3x2 b0 = Fp3x2(225.04071m, 307.312m, -435.28625m, 384.59454m, 128.18854m, 25.515686m);
            bool3x2 r0 = bool3x2(true, true, false, true, true, false);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp3x2 a1 = Fp3x2(-189.24158m, 166.60394m, -281.60788m, -328.3689m, 303.74066m, -10.85434m);
            Fp3x2 b1 = Fp3x2(253.86078m, -402.4974m, 39.97223m, -195.34567m, 480.38788m, 430.75067m);
            bool3x2 r1 = bool3x2(true, false, true, true, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp3x2 a2 = Fp3x2(-377.5345m, -204.24298m, -485.56396m, -118.21863m, -229.2432m, -47.903534m);
            Fp3x2 b2 = Fp3x2(456.32416m, -183.97815m, -316.16702m, 15.29895m, -77.77652m, -184.09119m);
            bool3x2 r2 = bool3x2(true, true, true, true, true, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp3x2 a3 = Fp3x2(-313.9403m, 465.46155m, -204.12457m, -197.98264m, 341.6419m, 407.021m);
            Fp3x2 b3 = Fp3x2(-500.24542m, -144.36426m, 446.16736m, -84.16861m, -293.43997m, 321.036m);
            bool3x2 r3 = bool3x2(false, false, true, true, false, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_less_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(-217.34143m, -154.63306m, -189.59198m, -383.10138m, 449.96143m, -495.594m);
            Fp b0 = (-277.67377m);
            bool3x2 r0 = bool3x2(false, false, false, true, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp3x2 a1 = Fp3x2(339.89673m, 448.09546m, 168.98419m, -379.16406m, 231.91278m, 191.04297m);
            Fp b1 = (278.93567m);
            bool3x2 r1 = bool3x2(false, false, true, true, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp3x2 a2 = Fp3x2(-42.53656m, -328.5581m, 409.57263m, -503.11368m, 321.62482m, -287.729m);
            Fp b2 = (3.5787964m);
            bool3x2 r2 = bool3x2(true, true, false, true, false, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp3x2 a3 = Fp3x2(-265.64056m, 164.5708m, 502.8482m, 303.45343m, 168.84894m, 442.40686m);
            Fp b3 = (331.79572m);
            bool3x2 r3 = bool3x2(true, true, false, true, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_less_scalar_wide()
        {
            Fp a0 = (-485.6832m);
            Fp3x2 b0 = Fp3x2(-362.635m, -4.044037m, 131.79993m, 413.48376m, 382.34747m, 55.00757m);
            bool3x2 r0 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp a1 = (-373.25812m);
            Fp3x2 b1 = Fp3x2(-144.24112m, -243.22845m, 212.25671m, 71.16406m, -104.41278m, 177.30798m);
            bool3x2 r1 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp a2 = (-44.35016m);
            Fp3x2 b2 = Fp3x2(-280.36896m, -397.822m, 453.41125m, -310.9288m, -159.81488m, -139.51483m);
            bool3x2 r2 = bool3x2(false, false, true, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp a3 = (-350.74994m);
            Fp3x2 b3 = Fp3x2(-428.73398m, -352.40662m, 62.795044m, 352.87518m, -509.05646m, 10.939697m);
            bool3x2 r3 = bool3x2(false, false, true, true, false, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_greater_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(-241.33841m, -475.21497m, -39.85724m, -167.34067m, -383.31873m, 119.09595m);
            Fp3x2 b0 = Fp3x2(438.91602m, 228.49042m, -206.5971m, 366.85388m, 35.72583m, -91.07013m);
            bool3x2 r0 = bool3x2(false, false, true, false, false, true);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp3x2 a1 = Fp3x2(134.24622m, 295.21844m, -324.31348m, 278.55414m, -216.29721m, -217.02304m);
            Fp3x2 b1 = Fp3x2(154.46704m, 467.31146m, -304.5686m, -105.56061m, 118.17328m, 291.72064m);
            bool3x2 r1 = bool3x2(false, false, false, true, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp3x2 a2 = Fp3x2(408.92578m, 408.4909m, -165.98468m, -188.39972m, 276.64758m, -91.25357m);
            Fp3x2 b2 = Fp3x2(198.42969m, 311.83734m, 477.4394m, 421.5794m, -35.827118m, 327.37164m);
            bool3x2 r2 = bool3x2(true, true, false, false, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp3x2 a3 = Fp3x2(-49.06787m, -288.82318m, 411.2578m, 85.75275m, 495.4361m, 22.718994m);
            Fp3x2 b3 = Fp3x2(-200.52045m, -307.49384m, 104.79114m, 39.848938m, 371.0691m, 63.974304m);
            bool3x2 r3 = bool3x2(true, true, true, true, true, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_greater_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(-348.3178m, -2.4205933m, 423.71265m, 250.03534m, -209.6311m, -121.415405m);
            Fp b0 = (239.55536m);
            bool3x2 r0 = bool3x2(false, false, true, true, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp3x2 a1 = Fp3x2(202.20648m, 422.2362m, -299.2479m, -84.361145m, 17.824524m, 509.54065m);
            Fp b1 = (420.89746m);
            bool3x2 r1 = bool3x2(false, true, false, false, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp3x2 a2 = Fp3x2(501.89423m, -129.45663m, -187.94016m, -292.8944m, -164.38376m, 356.62354m);
            Fp b2 = (-436.39563m);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp3x2 a3 = Fp3x2(-255.7496m, -500.93753m, -29.945099m, 61.921204m, 499.33307m, -378.25275m);
            Fp b3 = (-205.14075m);
            bool3x2 r3 = bool3x2(false, false, true, true, true, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_greater_scalar_wide()
        {
            Fp a0 = (-34.200226m);
            Fp3x2 b0 = Fp3x2(212.36633m, 82.05115m, 458.8661m, 136.99329m, 227.5271m, 495.51807m);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp a1 = (-142.25m);
            Fp3x2 b1 = Fp3x2(-196.3866m, -97.57742m, -241.31299m, -139.42554m, 305.07654m, -305.36148m);
            bool3x2 r1 = bool3x2(true, false, true, false, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp a2 = (-506.0047m);
            Fp3x2 b2 = Fp3x2(-429.6786m, -430.8932m, 88.38849m, -263.5904m, -340.4632m, 438.38214m);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp a3 = (114.980286m);
            Fp3x2 b3 = Fp3x2(49.168518m, 458.23285m, 508.97046m, -243.17514m, -92.2117m, 21.118713m);
            bool3x2 r3 = bool3x2(true, false, false, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_less_equal_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(-266.1326m, -124.733765m, -292.27527m, 24.822144m, -272.5923m, -285.86377m);
            Fp3x2 b0 = Fp3x2(-192.43298m, -372.29657m, -239.20337m, -314.14038m, 439.8761m, 301.66156m);
            bool3x2 r0 = bool3x2(true, false, true, false, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp3x2 a1 = Fp3x2(384.44617m, 267.29004m, 478.6623m, -110.5802m, 109.78064m, 178.77972m);
            Fp3x2 b1 = Fp3x2(257.67798m, -234.71451m, -127.03546m, -511.36487m, -384.00253m, 8.338257m);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp3x2 a2 = Fp3x2(399.04333m, -236.436m, 166.79718m, 195.17603m, 101.0589m, -499.5724m);
            Fp3x2 b2 = Fp3x2(-464.58316m, 166.00934m, -353.5489m, 5.9090576m, -159.5957m, 447.97522m);
            bool3x2 r2 = bool3x2(false, true, false, false, false, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp3x2 a3 = Fp3x2(226.72626m, -346.31998m, 91.10675m, 438.5157m, -422.07498m, -96.408264m);
            Fp3x2 b3 = Fp3x2(-339.27612m, 352.64783m, 175.11664m, -384.6341m, 184.44794m, 344.69257m);
            bool3x2 r3 = bool3x2(false, true, true, false, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_less_equal_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(-347.2307m, 357.8626m, -179.71185m, -320.96027m, 26.583496m, -314.84348m);
            Fp b0 = (-160.18707m);
            bool3x2 r0 = bool3x2(true, false, true, true, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp3x2 a1 = Fp3x2(219.6524m, 166.25684m, 94.45245m, 508.216m, 43.63623m, 213.9112m);
            Fp b1 = (479.43463m);
            bool3x2 r1 = bool3x2(true, true, true, false, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp3x2 a2 = Fp3x2(-351.45435m, 58.587646m, -473.1872m, 335.4579m, 270.98102m, -309.0292m);
            Fp b2 = (-510.48376m);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp3x2 a3 = Fp3x2(235.10156m, -489.77023m, -458.4973m, 456.54657m, 315.64874m, 368.87433m);
            Fp b3 = (-257.19537m);
            bool3x2 r3 = bool3x2(false, true, true, false, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_less_equal_scalar_wide()
        {
            Fp a0 = (-187.50052m);
            Fp3x2 b0 = Fp3x2(177.5221m, -221.34222m, -35.76126m, 354.90814m, 297.5418m, -487.66107m);
            bool3x2 r0 = bool3x2(true, false, true, true, true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp a1 = (217.42084m);
            Fp3x2 b1 = Fp3x2(-94.54605m, 283.79358m, 431.82996m, -8.173676m, 456.12714m, -499.4815m);
            bool3x2 r1 = bool3x2(false, true, true, false, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp a2 = (-282.17194m);
            Fp3x2 b2 = Fp3x2(-207.38339m, -116.17682m, 459.26715m, -479.46613m, 56.500244m, -277.44678m);
            bool3x2 r2 = bool3x2(true, true, true, false, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp a3 = (493.29077m);
            Fp3x2 b3 = Fp3x2(-505.90054m, 446.98572m, 460.13263m, 433.5786m, 504.737m, -263.66388m);
            bool3x2 r3 = bool3x2(false, false, false, false, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_greater_equal_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(-480.5502m, -331.65723m, -467.8819m, -426.36612m, 130.68m, 397.9231m);
            Fp3x2 b0 = Fp3x2(-13.955231m, -36.309723m, -361.51007m, -270.75452m, -221.99017m, 153.435m);
            bool3x2 r0 = bool3x2(false, false, false, false, true, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp3x2 a1 = Fp3x2(318.48987m, -65.386536m, 356.61475m, 435.95337m, -488.66916m, 131.80145m);
            Fp3x2 b1 = Fp3x2(90.831665m, -417.45892m, 251.08832m, 137.00128m, -407.28433m, 228.05487m);
            bool3x2 r1 = bool3x2(true, true, true, true, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp3x2 a2 = Fp3x2(103.69757m, -163.08237m, 455.47546m, 93.445435m, 89.21301m, 489.87122m);
            Fp3x2 b2 = Fp3x2(-243.401m, 424.24408m, 269.84637m, 115.634094m, 445.47614m, -228.73865m);
            bool3x2 r2 = bool3x2(true, false, true, false, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp3x2 a3 = Fp3x2(-245.09006m, 491.81232m, -260.6297m, -310.3274m, 71.13989m, -46.399384m);
            Fp3x2 b3 = Fp3x2(173.26428m, -298.96143m, -88.07672m, -60.371002m, -404.40866m, -99.03479m);
            bool3x2 r3 = bool3x2(false, true, false, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_greater_equal_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(-100.195435m, 360.16846m, -374.34125m, 242.43842m, -297.3426m, 155.94312m);
            Fp b0 = (71.966736m);
            bool3x2 r0 = bool3x2(false, true, false, true, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp3x2 a1 = Fp3x2(-314.72128m, -222.22919m, -388.12286m, -277.31842m, 428.42255m, 321.47345m);
            Fp b1 = (91.45465m);
            bool3x2 r1 = bool3x2(false, false, false, false, true, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp3x2 a2 = Fp3x2(-383.9345m, -243.28503m, -333.85324m, 437.79694m, 298.99707m, 127.66785m);
            Fp b2 = (287.05243m);
            bool3x2 r2 = bool3x2(false, false, false, true, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp3x2 a3 = Fp3x2(314.34784m, 347.53973m, -145.12482m, 35.18756m, -121.66431m, 350.87073m);
            Fp b3 = (-314.6262m);
            bool3x2 r3 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_greater_equal_scalar_wide()
        {
            Fp a0 = (66.15973m);
            Fp3x2 b0 = Fp3x2(228.81372m, -371.95468m, 184.22943m, 266.50446m, 225.0069m, -488.35345m);
            bool3x2 r0 = bool3x2(false, true, false, false, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp a1 = (-52.242126m);
            Fp3x2 b1 = Fp3x2(451.52258m, 52.532227m, 45.85956m, -379.48004m, 401.27222m, 172.98633m);
            bool3x2 r1 = bool3x2(false, false, false, true, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp a2 = (370.27435m);
            Fp3x2 b2 = Fp3x2(192.75183m, 481.17358m, 15.350586m, 128.0401m, -165.92456m, -76.330444m);
            bool3x2 r2 = bool3x2(true, false, true, true, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp a3 = (-327.95792m);
            Fp3x2 b3 = Fp3x2(356.7912m, -9.228088m, -284.01025m, 313.27112m, -90.26172m, -321.32925m);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_add_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(149.59412m, 261.85114m, 134.76111m, 296.27722m, -87.83832m, 262.9261m);
            Fp3x2 b0 = Fp3x2(82.11688m, -336.5427m, -203.66907m, 348.16364m, 417.2708m, 96.18884m);
            Fp3x2 r0 = Fp3x2(231.711m, -74.69156m, -68.90796m, 644.44086m, 329.4325m, 359.11493m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp3x2 a1 = Fp3x2(-230.0998m, -408.89618m, -478.518m, 195.41254m, -321.6739m, 350.58875m);
            Fp3x2 b1 = Fp3x2(-128.52588m, 215.17627m, 292.04285m, 113.43524m, 155.31805m, -440.69635m);
            Fp3x2 r1 = Fp3x2(-358.62567m, -193.71991m, -186.47516m, 308.84778m, -166.35583m, -90.107605m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp3x2 a2 = Fp3x2(113.98291m, -90.31268m, -423.45035m, -448.143m, 438.0074m, -54.86862m);
            Fp3x2 b2 = Fp3x2(-165.62283m, 32.225952m, -454.52457m, -508.79465m, -153.16425m, -372.93164m);
            Fp3x2 r2 = Fp3x2(-51.639923m, -58.08673m, -877.9749m, -956.9376m, 284.84314m, -427.80026m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp3x2 a3 = Fp3x2(-195.57837m, 164.81592m, -389.52502m, 497.3791m, 428.81763m, 40.856934m);
            Fp3x2 b3 = Fp3x2(180.11145m, -34.079956m, -110.680084m, -490.98834m, -308.06354m, 242.1145m);
            Fp3x2 r3 = Fp3x2(-15.466919m, 130.73596m, -500.2051m, 6.390747m, 120.75409m, 282.97144m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_add_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(-363.30127m, 85.21643m, 307.5595m, -324.80725m, 213.70538m, 85.79199m);
            Fp b0 = (84.48932m);
            Fp3x2 r0 = Fp3x2(-278.81195m, 169.70575m, 392.04883m, -240.31793m, 298.1947m, 170.28131m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp3x2 a1 = Fp3x2(-287.34515m, 474.44275m, 286.0359m, -410.64044m, -86.13693m, 429.21674m);
            Fp b1 = (389.57996m);
            Fp3x2 r1 = Fp3x2(102.2348m, 864.0227m, 675.61584m, -21.060486m, 303.44302m, 818.7967m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp3x2 a2 = Fp3x2(222.11395m, 167.73853m, 114.861084m, -501.71588m, 160.07806m, -12.338318m);
            Fp b2 = (192.88623m);
            Fp3x2 r2 = Fp3x2(415.00018m, 360.62476m, 307.7473m, -308.82965m, 352.9643m, 180.54791m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp3x2 a3 = Fp3x2(-398.42938m, 457.7224m, 507.90253m, -477.5033m, -375.98926m, 482.24597m);
            Fp b3 = (-175.8247m);
            Fp3x2 r3 = Fp3x2(-574.2541m, 281.8977m, 332.07782m, -653.328m, -551.81396m, 306.42126m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_add_scalar_wide()
        {
            Fp a0 = (-510.89264m);
            Fp3x2 b0 = Fp3x2(130.32959m, 272.09174m, 331.812m, -379.09714m, 397.8896m, -333.4043m);
            Fp3x2 r0 = Fp3x2(-380.56305m, -238.8009m, -179.08063m, -889.98975m, -113.00305m, -844.29694m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp a1 = (-9.8524475m);
            Fp3x2 b1 = Fp3x2(236.39392m, -45.938232m, -418.6372m, -504.4516m, 474.44263m, -500.95m);
            Fp3x2 r1 = Fp3x2(226.54147m, -55.79068m, -428.48965m, -514.3041m, 464.59018m, -510.80246m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp a2 = (-202.51782m);
            Fp3x2 b2 = Fp3x2(-32.80835m, 113.29993m, -390.25403m, 114.28601m, 305.88098m, 467.55792m);
            Fp3x2 r2 = Fp3x2(-235.32617m, -89.217896m, -592.77185m, -88.23181m, 103.36316m, 265.0401m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp a3 = (55.11212m);
            Fp3x2 b3 = Fp3x2(-58.26184m, 259.49323m, 167.08618m, 473.4843m, -351.8205m, 443.01263m);
            Fp3x2 r3 = Fp3x2(-3.1497192m, 314.60535m, 222.1983m, 528.59644m, -296.70837m, 498.12476m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_sub_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(-493.45367m, -228.40881m, 463.7627m, 280.9309m, -394.85977m, -289.75592m);
            Fp3x2 b0 = Fp3x2(-470.96182m, 95.77942m, 189.22583m, -88.87137m, -353.6308m, -352.10352m);
            Fp3x2 r0 = Fp3x2(-22.491852m, -324.18823m, 274.53687m, 369.80228m, -41.228973m, 62.347595m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp3x2 a1 = Fp3x2(248.1676m, 499.35565m, -272.3052m, -342.8852m, 328.01593m, -486.20126m);
            Fp3x2 b1 = Fp3x2(346.07532m, -379.2524m, -63.3519m, 326.07965m, 57.516968m, -5.383026m);
            Fp3x2 r1 = Fp3x2(-97.907715m, 878.60803m, -208.95331m, -668.96484m, 270.49896m, -480.81824m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp3x2 a2 = Fp3x2(-428.74026m, -42.623505m, -502.78284m, -276.01123m, -211.62009m, -347.22595m);
            Fp3x2 b2 = Fp3x2(204.36798m, -478.10825m, -341.72345m, 407.61432m, 310.6997m, 48.0141m);
            Fp3x2 r2 = Fp3x2(-633.1083m, 435.48474m, -161.05939m, -683.62555m, -522.3198m, -395.24005m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp3x2 a3 = Fp3x2(-158.27963m, -173.81665m, -70.89194m, -173.12573m, -264.8333m, -74.43515m);
            Fp3x2 b3 = Fp3x2(-163.44263m, 488.14728m, 180.8819m, 343.0777m, 319.71008m, 489.9417m);
            Fp3x2 r3 = Fp3x2(5.1629944m, -661.9639m, -251.77383m, -516.2034m, -584.5434m, -564.37683m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_sub_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(-483.1618m, 208.13171m, -387.3754m, -336.09125m, 167.81488m, -376.95837m);
            Fp b0 = (-369.26047m);
            Fp3x2 r0 = Fp3x2(-113.90134m, 577.3922m, -18.11493m, 33.16922m, 537.0753m, -7.6979065m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp3x2 a1 = Fp3x2(348.0346m, 237.17828m, 276.68842m, -357.72092m, 308.1668m, 243.65826m);
            Fp b1 = (-303.7441m);
            Fp3x2 r1 = Fp3x2(651.7787m, 540.92236m, 580.4325m, -53.976807m, 611.9109m, 547.40234m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp3x2 a2 = Fp3x2(246.66418m, 350.88452m, 498.3803m, 183.44073m, 334.32684m, -164.35855m);
            Fp b2 = (-157.99301m);
            Fp3x2 r2 = Fp3x2(404.6572m, 508.87753m, 656.3733m, 341.43375m, 492.31985m, -6.3655396m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp3x2 a3 = Fp3x2(385.76703m, -130.01239m, -231.33072m, 391.2126m, -119.787445m, -302.35925m);
            Fp b3 = (238.23523m);
            Fp3x2 r3 = Fp3x2(147.5318m, -368.24762m, -469.56595m, 152.97736m, -358.02267m, -540.5945m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_sub_scalar_wide()
        {
            Fp a0 = (-400.4135m);
            Fp3x2 b0 = Fp3x2(-434.79865m, -476.15903m, 360.5266m, 427.36743m, 34.250977m, -102.27759m);
            Fp3x2 r0 = Fp3x2(34.38513m, 75.745514m, -760.9401m, -827.78094m, -434.6645m, -298.13593m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp a1 = (-235.2923m);
            Fp3x2 b1 = Fp3x2(-404.2934m, 53.207886m, -349.06525m, 180.38147m, 508.37018m, 59.979797m);
            Fp3x2 r1 = Fp3x2(169.0011m, -288.50018m, 113.77295m, -415.67377m, -743.6625m, -295.2721m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp a2 = (278.88702m);
            Fp3x2 b2 = Fp3x2(184.60626m, 476.90186m, 413.65137m, 336.2138m, -11.193787m, -247.1394m);
            Fp3x2 r2 = Fp3x2(94.28076m, -198.01483m, -134.76434m, -57.326782m, 290.0808m, 526.0264m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp a3 = (-336.0969m);
            Fp3x2 b3 = Fp3x2(-210.80411m, 498.80597m, 490.13202m, 413.41382m, -404.97784m, 323.63397m);
            Fp3x2 r3 = Fp3x2(-125.292786m, -834.90283m, -826.2289m, -749.51074m, 68.88095m, -659.73083m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_mul_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(-326.98944m, 183.26929m, -95.33392m, -352.96515m, -222.24484m, 237.92462m);
            Fp3x2 b0 = Fp3x2(351.58496m, 113.25659m, 286.7157m, 288.06653m, 327.3562m, 406.58655m);
            Fp3x2 r0 = Fp3x2(-114964.57m, 20756.455m, -27333.732m, -101677.445m, -72753.23m, 96736.95m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp3x2 a1 = Fp3x2(-66.21646m, -462.0301m, -500.88995m, 435.0948m, 252.29065m, -6.518158m);
            Fp3x2 b1 = Fp3x2(-200.43045m, 386.18604m, 363.50323m, 324.0984m, 356.03528m, -241.42923m);
            Fp3x2 r1 = Fp3x2(13271.795m, -178429.56m, -182075.12m, 141013.52m, 89824.375m, 1573.6738m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp3x2 a2 = Fp3x2(322.92114m, 82.13257m, -243.62183m, -397.79288m, -227.1383m, -58.505035m);
            Fp3x2 b2 = Fp3x2(-351.41443m, -257.6211m, -54.470886m, -133.72797m, -409.5271m, 505.06732m);
            Fp3x2 r2 = Fp3x2(-113479.15m, -21159.082m, 13270.297m, 53196.03m, 93019.29m, -29548.982m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp3x2 a3 = Fp3x2(79.093445m, 421.37585m, 272.33777m, -359.5229m, 412.57416m, 390.20898m);
            Fp3x2 b3 = Fp3x2(-170.17267m, 133.84436m, 292.0456m, 392.42755m, 162.28137m, -168.54077m);
            Fp3x2 r3 = Fp3x2(-13459.543m, 56398.78m, 79535.05m, -141086.69m, 66953.1m, -65766.125m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x2_operator_mul_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(398.63098m, 133.9815m, 100.58301m, 289.0614m, -66.26727m, -440.14893m);
            Fp b0 = (188.26575m);
            Fp3x2 r0 = Fp3x2(75048.56m, 25224.129m, 18936.336m, 54420.36m, -12475.857m, -82864.97m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp3x2 a1 = Fp3x2(265.87543m, -59.58963m, 338.4347m, -313.44278m, -256.9532m, 383.3626m);
            Fp b1 = (258.4983m);
            Fp3x2 r1 = Fp3x2(68728.34m, -15403.817m, 87484.79m, -81024.42m, -66421.96m, 99098.58m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp3x2 a2 = Fp3x2(-297.26385m, 460.85834m, -33.312927m, -508.58292m, -417.235m, -454.5296m);
            Fp b2 = (206.87476m);
            Fp3x2 r2 = Fp3x2(-61496.387m, 95339.95m, -6891.6035m, -105212.97m, -86315.38m, -94030.7m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp3x2 a3 = Fp3x2(22.078491m, -353.6305m, 55.33612m, 67.805725m, 265.92883m, -257.91882m);
            Fp b3 = (90.67731m);
            Fp3x2 r3 = Fp3x2(2002.0182m, -32066.262m, 5017.7305m, 6148.4404m, 24113.71m, -23387.385m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x2_operator_mul_scalar_wide()
        {
            Fp a0 = (291.10083m);
            Fp3x2 b0 = Fp3x2(85.88977m, -2.0483398m, -372.21533m, -32.73163m, -458.91272m, -425.4938m);
            Fp3x2 r0 = Fp3x2(25002.584m, -596.27344m, -108352.195m, -9528.204m, -133589.88m, -123861.6m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp a1 = (127.91998m);
            Fp3x2 b1 = Fp3x2(166.95068m, -505.2238m, -52.959717m, 493.21753m, -320.13397m, 459.70593m);
            Fp3x2 r1 = Fp3x2(21356.328m, -64628.22m, -6774.606m, 63092.38m, -40951.53m, 58805.574m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp a2 = (-309.70544m);
            Fp3x2 b2 = Fp3x2(-463.31314m, 124.56317m, 393.03064m, 321.9226m, 324.49915m, 217.63403m);
            Fp3x2 r2 = Fp3x2(143490.61m, -38577.89m, -121723.73m, -99701.19m, -100499.15m, -67402.445m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp a3 = (-343.80927m);
            Fp3x2 b3 = Fp3x2(305.8797m, 312.56818m, -404.74002m, 86.315735m, -316.86298m, 242.69629m);
            Fp3x2 r3 = Fp3x2(-105164.27m, -107463.836m, 139153.38m, -29676.148m, 108940.43m, -83441.234m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp3x2_operator_div_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(-434.30182m, -58.547546m, -242.22162m, -61.09958m, 507.04565m, 55.52173m);
            Fp3x2 b0 = Fp3x2(-418.87305m, 154.74506m, 228.1217m, 170.04639m, -183.44586m, 254.94373m);
            Fp3x2 r0 = Fp3x2(1.036834m, -0.3783484m, -1.0618087m, -0.35931125m, -2.764007m, 0.21778034m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp3x2 a1 = Fp3x2(84.16864m, 121.1817m, -251.65366m, 232.27637m, -11.3958435m, 29.057007m);
            Fp3x2 b1 = Fp3x2(-327.2115m, -54.62494m, 345.10803m, 82.34033m, -104.82977m, -236.51917m);
            Fp3x2 r1 = Fp3x2(-0.2572301m, -2.2184317m, -0.72920257m, 2.8209307m, 0.10870808m, -0.12285265m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp3x2 a2 = Fp3x2(322.31866m, -203.0835m, -48.977356m, 42.2453m, -38.711334m, -135.21942m);
            Fp3x2 b2 = Fp3x2(359.3108m, 322.64587m, 371.59705m, -355.33997m, -239.45645m, -266.5359m);
            Fp3x2 r2 = Fp3x2(0.897047m, -0.62943155m, -0.13180234m, -0.11888699m, 0.16166335m, 0.50732166m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp3x2 a3 = Fp3x2(-482.07678m, 242.29352m, 475.21832m, 136.9826m, 469.2395m, 122.68744m);
            Fp3x2 b3 = Fp3x2(-357.02856m, -399.5715m, 476.43823m, 479.14832m, 31.718567m, -67.50827m);
            Fp3x2 r3 = Fp3x2(1.3502471m, -0.6063834m, 0.9974395m, 0.2858877m, 14.793843m, -1.817369m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_div_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(338.5183m, 342.57233m, -162.55743m, 62.311157m, -435.44455m, 124.90289m);
            Fp b0 = (18.585693m);
            Fp3x2 r0 = Fp3x2(18.213919m, 18.432045m, -8.746374m, 3.3526409m, -23.429018m, 6.7203784m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp3x2 a1 = Fp3x2(336.1009m, -93.8689m, -125.544495m, -412.19177m, -377.6493m, -358.36334m);
            Fp b1 = (-230.52808m);
            Fp3x2 r1 = Fp3x2(-1.4579607m, 0.40719074m, 0.54459524m, 1.7880329m, 1.6381922m, 1.5545323m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp3x2 a2 = Fp3x2(-439.82245m, -156.09784m, 115.1026m, -68.532166m, 6.3016357m, 484.37848m);
            Fp b2 = (-253.62341m);
            Fp3x2 r2 = Fp3x2(1.7341555m, 0.61547095m, -0.45383272m, 0.2702123m, -0.024846427m, -1.9098334m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp3x2 a3 = Fp3x2(-506.15454m, 219.09784m, -11.390045m, -192.22711m, 244.88446m, 145.513m);
            Fp b3 = (-283.2752m);
            Fp3x2 r3 = Fp3x2(1.7867943m, -0.7734452m, 0.040208407m, 0.67858785m, -0.8644754m, -0.5136807m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_div_scalar_wide()
        {
            Fp a0 = (2.9528809m);
            Fp3x2 b0 = Fp3x2(260.17004m, 427.25922m, -21.09494m, -20.552216m, -133.13852m, 254.63452m);
            Fp3x2 r0 = Fp3x2(0.011349811m, 0.0069112163m, -0.13998052m, -0.14367701m, -0.022179013m, 0.011596546m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp a1 = (-286.85498m);
            Fp3x2 b1 = Fp3x2(186.54468m, 172.25421m, -81.20044m, 483.28802m, 492.59583m, -428.58005m);
            Fp3x2 r1 = Fp3x2(-1.5377281m, -1.6653003m, 3.5326777m, -0.5935487m, -0.5823334m, 0.6693148m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp a2 = (-63.68457m);
            Fp3x2 b2 = Fp3x2(464.9878m, 224.61633m, 360.40833m, -104.604706m, -371.11063m, -185.77655m);
            Fp3x2 r2 = Fp3x2(-0.13695966m, -0.283526m, -0.17670116m, 0.60881174m, 0.17160535m, 0.342802m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp a3 = (472.09692m);
            Fp3x2 b3 = Fp3x2(246.83105m, 280.94666m, 31.30542m, -239.26883m, -139.48044m, -405.13333m);
            Fp3x2 r3 = Fp3x2(1.9126318m, 1.6803793m, 15.080358m, -1.9730816m, -3.384682m, -1.1652877m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_mod_wide_wide()
        {
            Fp3x2 a0 = Fp3x2(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m);
            Fp3x2 b0 = Fp3x2(470.2685m, -371.4406m, 161.94507m, -151.37039m, 170.21747m, 453.35284m);
            Fp3x2 r0 = Fp3x2(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp3x2 a1 = Fp3x2(-385.32135m, 75.61359m, 147.87054m, -146.02231m, -188.04791m, 14.303833m);
            Fp3x2 b1 = Fp3x2(433.15808m, -159.1189m, 190.11346m, 46.63446m, 297.8944m, -198.62778m);
            Fp3x2 r1 = Fp3x2(-385.32135m, 75.61359m, 147.87054m, -6.118927m, -188.04791m, 14.303833m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp3x2 a2 = Fp3x2(-56.95459m, -280.97797m, -139.49966m, -284.42224m, 74.799805m, -157.26028m);
            Fp3x2 b2 = Fp3x2(-45.952698m, 401.35815m, -246.4354m, -156.38309m, 33.645386m, 159.46942m);
            Fp3x2 r2 = Fp3x2(-11.001892m, -280.97797m, -139.49966m, -128.03915m, 7.509033m, -157.26028m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp3x2 a3 = Fp3x2(208.92334m, 323.4063m, -427.9572m, -270.79147m, 321.25647m, -254.9324m);
            Fp3x2 b3 = Fp3x2(314.51416m, 458.85156m, -95.67474m, 501.60535m, 141.61151m, 486.41327m);
            Fp3x2 r3 = Fp3x2(208.92334m, 323.4063m, -45.25824m, -270.79147m, 38.033447m, -254.9324m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_mod_wide_scalar()
        {
            Fp3x2 a0 = Fp3x2(360.08112m, 57.401245m, -85.35019m, 449.2752m, 4.46344m, 469.19336m);
            Fp b0 = (-297.3982m);
            Fp3x2 r0 = Fp3x2(62.682922m, 57.401245m, -85.35019m, 151.87701m, 4.46344m, 171.79517m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp3x2 a1 = Fp3x2(-152.73862m, 279.7296m, -242.91284m, -24.107025m, 109.5332m, -276.18713m);
            Fp b1 = (262.32312m);
            Fp3x2 r1 = Fp3x2(-152.73862m, 17.406494m, -242.91284m, -24.107025m, 109.5332m, -13.864014m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp3x2 a2 = Fp3x2(357.42072m, -287.36353m, 173.2602m, -111.50394m, 36.7323m, 330.5569m);
            Fp b2 = (510.55994m);
            Fp3x2 r2 = Fp3x2(357.42072m, -287.36353m, 173.2602m, -111.50394m, 36.7323m, 330.5569m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp3x2 a3 = Fp3x2(443.2447m, 496.28973m, 497.073m, -223.45349m, 34.037292m, 279.83612m);
            Fp b3 = (175.37036m);
            Fp3x2 r3 = Fp3x2(92.50397m, 145.54901m, 146.33228m, -48.08313m, 34.037292m, 104.46576m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_mod_scalar_wide()
        {
            Fp a0 = (321.83087m);
            Fp3x2 b0 = Fp3x2(-360.08008m, 271.34174m, -418.93903m, -57.065247m, -18.80716m, 10.327942m);
            Fp3x2 r0 = Fp3x2(321.83087m, 50.489136m, 321.83087m, 36.50464m, 2.1091614m, 1.6646729m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp a1 = (114.91266m);
            Fp3x2 b1 = Fp3x2(-373.9153m, -178.94406m, 11.08252m, -162.6925m, 118.41644m, -13.732086m);
            Fp3x2 r1 = Fp3x2(114.91266m, 114.91266m, 4.0874634m, 114.91266m, 114.91266m, 5.055969m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp a2 = (-58.26706m);
            Fp3x2 b2 = Fp3x2(219.90881m, -60.29535m, -317.5764m, -219.50665m, -362.4784m, -481.1638m);
            Fp3x2 r2 = Fp3x2(-58.26706m, -58.26706m, -58.26706m, -58.26706m, -58.26706m, -58.26706m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp a3 = (113.84534m);
            Fp3x2 b3 = Fp3x2(331.60565m, -180.93997m, 462.0606m, -15.502106m, 163.53247m, -417.56512m);
            Fp3x2 r3 = Fp3x2(113.84534m, 113.84534m, 113.84534m, 5.330597m, 113.84534m, 113.84534m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp3x2_operator_plus()
        {
            Fp3x2 a0 = Fp3x2(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m);
            Fp3x2 r0 = Fp3x2(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m);
            TestUtils.AreEqual(+a0, r0);

            Fp3x2 a1 = Fp3x2(298.37836m, 167.59698m, -323.4687m, 500.9478m, -509.95538m, -135.21799m);
            Fp3x2 r1 = Fp3x2(298.37836m, 167.59698m, -323.4687m, 500.9478m, -509.95538m, -135.21799m);
            TestUtils.AreEqual(+a1, r1);

            Fp3x2 a2 = Fp3x2(-382.86426m, -15.965393m, -401.84415m, -459.20764m, -74.09299m, -399.96255m);
            Fp3x2 r2 = Fp3x2(-382.86426m, -15.965393m, -401.84415m, -459.20764m, -74.09299m, -399.96255m);
            TestUtils.AreEqual(+a2, r2);

            Fp3x2 a3 = Fp3x2(-457.5369m, -281.65063m, -477.81766m, -301.2943m, -481.5745m, 51.541565m);
            Fp3x2 r3 = Fp3x2(-457.5369m, -281.65063m, -477.81766m, -301.2943m, -481.5745m, 51.541565m);
            TestUtils.AreEqual(+a3, r3);
        }

        [Test]
        public static void Fp3x2_operator_neg()
        {
            Fp3x2 a0 = Fp3x2(-161.17307m, 91.577576m, -474.2732m, -138.7461m, -302.52325m, 428.21216m);
            Fp3x2 r0 = Fp3x2(161.17307m, -91.577576m, 474.2732m, 138.7461m, 302.52325m, -428.21216m);
            TestUtils.AreEqual(-a0, r0);

            Fp3x2 a1 = Fp3x2(440.5053m, 370.19952m, -126.07272m, 62.18921m, 176.51025m, -386.41965m);
            Fp3x2 r1 = Fp3x2(-440.5053m, -370.19952m, 126.07272m, -62.18921m, -176.51025m, 386.41965m);
            TestUtils.AreEqual(-a1, r1);

            Fp3x2 a2 = Fp3x2(-161.73965m, -179.76102m, -394.13074m, 43.724304m, -71.36215m, 147.67554m);
            Fp3x2 r2 = Fp3x2(161.73965m, 179.76102m, 394.13074m, -43.724304m, 71.36215m, -147.67554m);
            TestUtils.AreEqual(-a2, r2);

            Fp3x2 a3 = Fp3x2(356.8322m, 480.02087m, 114.6911m, 355.2517m, -243.5343m, -263.83936m);
            Fp3x2 r3 = Fp3x2(-356.8322m, -480.02087m, -114.6911m, -355.2517m, 243.5343m, 263.83936m);
            TestUtils.AreEqual(-a3, r3);
        }

        [Test]
        public static void Fp3x2_operator_prefix_inc()
        {
            Fp3x2 a0 = Fp3x2(-283.03375m, 366.7337m, -401.91684m, 187.16315m, 27.883484m, 130.98157m);
            Fp3x2 r0 = Fp3x2(-282.03375m, 367.7337m, -400.91684m, 188.16315m, 28.883484m, 131.98157m);
            TestUtils.AreEqual(++a0, r0);

            Fp3x2 a1 = Fp3x2(-495.23444m, 203.96112m, -308.8134m, 28.987854m, -483.0141m, -269.13318m);
            Fp3x2 r1 = Fp3x2(-494.23444m, 204.96112m, -307.8134m, 29.987854m, -482.0141m, -268.13318m);
            TestUtils.AreEqual(++a1, r1);

            Fp3x2 a2 = Fp3x2(-40.76111m, 193.15027m, -143.68582m, 451.3499m, -61.16147m, -183.26956m);
            Fp3x2 r2 = Fp3x2(-39.76111m, 194.15027m, -142.68582m, 452.3499m, -60.16147m, -182.26956m);
            TestUtils.AreEqual(++a2, r2);

            Fp3x2 a3 = Fp3x2(370.29773m, 235.54474m, 493.35364m, 385.1552m, -135.32303m, 464.82544m);
            Fp3x2 r3 = Fp3x2(371.29773m, 236.54474m, 494.35364m, 386.1552m, -134.32303m, 465.82544m);
            TestUtils.AreEqual(++a3, r3);
        }

        [Test]
        public static void Fp3x2_operator_postfix_inc()
        {
            Fp3x2 a0 = Fp3x2(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m);
            Fp3x2 r0 = Fp3x2(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m);
            TestUtils.AreEqual(a0++, r0);

            Fp3x2 a1 = Fp3x2(145.12164m, 375.78876m, 435.95538m, -219.50537m, -302.35114m, -167.30942m);
            Fp3x2 r1 = Fp3x2(145.12164m, 375.78876m, 435.95538m, -219.50537m, -302.35114m, -167.30942m);
            TestUtils.AreEqual(a1++, r1);

            Fp3x2 a2 = Fp3x2(-432.4173m, 430.40125m, -116.777405m, 495.3412m, -195.3482m, -190.37909m);
            Fp3x2 r2 = Fp3x2(-432.4173m, 430.40125m, -116.777405m, 495.3412m, -195.3482m, -190.37909m);
            TestUtils.AreEqual(a2++, r2);

            Fp3x2 a3 = Fp3x2(-511.83737m, -367.92316m, 425.3698m, 170.81726m, 43.400146m, -493.16553m);
            Fp3x2 r3 = Fp3x2(-511.83737m, -367.92316m, 425.3698m, 170.81726m, 43.400146m, -493.16553m);
            TestUtils.AreEqual(a3++, r3);
        }

        [Test]
        public static void Fp3x2_operator_prefix_dec()
        {
            Fp3x2 a0 = Fp3x2(127.71149m, 412.1825m, 421.8966m, -407.7751m, -148.3689m, -202.65967m);
            Fp3x2 r0 = Fp3x2(126.71149m, 411.1825m, 420.8966m, -408.7751m, -149.3689m, -203.65967m);
            TestUtils.AreEqual(--a0, r0);

            Fp3x2 a1 = Fp3x2(-365.90997m, -473.15137m, -278.87814m, 49.586304m, -490.94742m, 437.7041m);
            Fp3x2 r1 = Fp3x2(-366.90997m, -474.15137m, -279.87814m, 48.586304m, -491.94742m, 436.7041m);
            TestUtils.AreEqual(--a1, r1);

            Fp3x2 a2 = Fp3x2(440.35724m, 185.19067m, -135.55646m, 336.039m, -1.5646973m, 310.96857m);
            Fp3x2 r2 = Fp3x2(439.35724m, 184.19067m, -136.55646m, 335.039m, -2.5646973m, 309.96857m);
            TestUtils.AreEqual(--a2, r2);

            Fp3x2 a3 = Fp3x2(290.07666m, -183.0806m, 450.9137m, -27.427094m, 212.71722m, 299.13446m);
            Fp3x2 r3 = Fp3x2(289.07666m, -184.0806m, 449.9137m, -28.427094m, 211.71722m, 298.13446m);
            TestUtils.AreEqual(--a3, r3);
        }

        [Test]
        public static void Fp3x2_operator_postfix_dec()
        {
            Fp3x2 a0 = Fp3x2(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m);
            Fp3x2 r0 = Fp3x2(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m);
            TestUtils.AreEqual(a0--, r0);

            Fp3x2 a1 = Fp3x2(106.726135m, 442.7943m, 474.02826m, -498.21182m, -259.07544m, -407.2235m);
            Fp3x2 r1 = Fp3x2(106.726135m, 442.7943m, 474.02826m, -498.21182m, -259.07544m, -407.2235m);
            TestUtils.AreEqual(a1--, r1);

            Fp3x2 a2 = Fp3x2(256.4026m, -431.75604m, 78.12311m, -341.83966m, 453.72626m, -287.3698m);
            Fp3x2 r2 = Fp3x2(256.4026m, -431.75604m, 78.12311m, -341.83966m, 453.72626m, -287.3698m);
            TestUtils.AreEqual(a2--, r2);

            Fp3x2 a3 = Fp3x2(211.68933m, 405.0161m, 420.21088m, -370.72998m, 249.26392m, 180.30334m);
            Fp3x2 r3 = Fp3x2(211.68933m, 405.0161m, 420.21088m, -370.72998m, 249.26392m, 180.30334m);
            TestUtils.AreEqual(a3--, r3);
        }

#endif

    }
}
