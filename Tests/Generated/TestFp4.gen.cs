//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.FixedPoint.MathFp;
namespace Unity.Mathematics.FixedPoint.Tests
{
    [TestFixture]
    public class TestFp4
    {
#if ENABLE_DECIMAL
        [Test]
        public static void Fp4_zero()
        {
            TestUtils.AreEqual(Fp4.zero.x, (Fp)0);
            TestUtils.AreEqual(Fp4.zero.y, (Fp)0);
            TestUtils.AreEqual(Fp4.zero.z, (Fp)0);
            TestUtils.AreEqual(Fp4.zero.w, (Fp)0);
        }

        [Test]
        public static void Fp4_constructor()
        {
            Fp4 a = new Fp4(1, 2, 3, 4);
            TestUtils.AreEqual(a.x, 1);
            TestUtils.AreEqual(a.y, 2);
            TestUtils.AreEqual(a.z, 3);
            TestUtils.AreEqual(a.w, 4);
        }

        [Test]
        public static void Fp4_scalar_constructor()
        {
            Fp4 a = new Fp4(17.0m);
            TestUtils.AreEqual(a.x, 17.0m);
            TestUtils.AreEqual(a.y, 17.0m);
            TestUtils.AreEqual(a.z, 17.0m);
            TestUtils.AreEqual(a.w, 17.0m);
        }

        [Test]
        public static void Fp4_static_constructor()
        {
            Fp4 a = Fp4(1, 2, 3, 4);
            TestUtils.AreEqual(a.x, 1);
            TestUtils.AreEqual(a.y, 2);
            TestUtils.AreEqual(a.z, 3);
            TestUtils.AreEqual(a.w, 4);
        }

        [Test]
        public static void Fp4_static_scalar_constructor()
        {
            Fp4 a = Fp4(17.0m);
            TestUtils.AreEqual(a.x, 17.0m);
            TestUtils.AreEqual(a.y, 17.0m);
            TestUtils.AreEqual(a.z, 17.0m);
            TestUtils.AreEqual(a.w, 17.0m);
        }

        [Test]
        public static void Fp4_operator_equal_wide_wide()
        {
            Fp4 a0 = Fp4(304.0451m, -242.63562m, 323.91107m, -435.55502m);
            Fp4 b0 = Fp4(-264.28522m, -218.33426m, 253.03296m, 372.23932m);
            bool4 r0 = bool4(false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp4 a1 = Fp4(198.06403m, -117.03351m, -384.73096m, 304.45056m);
            Fp4 b1 = Fp4(-171.82083m, 49.70288m, 261.85016m, -238.16519m);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp4 a2 = Fp4(57.849m, 245.8263m, -303.59222m, -446.4428m);
            Fp4 b2 = Fp4(-368.79456m, -479.64792m, 213.87708m, -320.8371m);
            bool4 r2 = bool4(false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp4 a3 = Fp4(238.98315m, 171.6228m, -291.7655m, -139.28052m);
            Fp4 b3 = Fp4(93.80847m, 25.883423m, -489.63315m, -447.4523m);
            bool4 r3 = bool4(false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4_operator_equal_wide_scalar()
        {
            Fp4 a0 = Fp4(-441.88464m, -84.34961m, -254.78915m, -299.5752m);
            Fp b0 = (280.80237m);
            bool4 r0 = bool4(false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp4 a1 = Fp4(336.64435m, 309.77936m, -82.85208m, 150.21582m);
            Fp b1 = (27.947937m);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp4 a2 = Fp4(-192.66446m, -389.2873m, -329.5147m, 247.63269m);
            Fp b2 = (440.7932m);
            bool4 r2 = bool4(false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp4 a3 = Fp4(90.41724m, 169.65619m, -247.76123m, 231.31848m);
            Fp b3 = (-438.72107m);
            bool4 r3 = bool4(false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4_operator_equal_scalar_wide()
        {
            Fp a0 = (-193.7709m);
            Fp4 b0 = Fp4(-138.46414m, -273.42194m, 162.6225m, 187.72485m);
            bool4 r0 = bool4(false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp a1 = (382.61987m);
            Fp4 b1 = Fp4(-82.54779m, 298.32867m, -235.21484m, 125.953125m);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp a2 = (-18.586182m);
            Fp4 b2 = Fp4(-251.19241m, -295.58725m, -402.58438m, 258.1311m);
            bool4 r2 = bool4(false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp a3 = (-128.23999m);
            Fp4 b3 = Fp4(490.22418m, -125.58237m, -237.95346m, -202.5444m);
            bool4 r3 = bool4(false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4_operator_not_equal_wide_wide()
        {
            Fp4 a0 = Fp4(-498.66064m, 483.43823m, -368.5275m, -1.0883789m);
            Fp4 b0 = Fp4(496.85205m, 490.64667m, -360.57568m, -70.759705m);
            bool4 r0 = bool4(true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp4 a1 = Fp4(-338.3922m, 405.47144m, -431.94257m, -256.16473m);
            Fp4 b1 = Fp4(-336.28644m, 308.89386m, -222.3328m, 60.620728m);
            bool4 r1 = bool4(true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp4 a2 = Fp4(431.58868m, -181.17221m, -231.57767m, 338.64343m);
            Fp4 b2 = Fp4(234.66309m, -55.329132m, -350.50763m, 419.24213m);
            bool4 r2 = bool4(true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp4 a3 = Fp4(269.79736m, -118.2919m, -148.18341m, -383.60794m);
            Fp4 b3 = Fp4(-435.70135m, 162.47571m, -183.24216m, -115.81906m);
            bool4 r3 = bool4(true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4_operator_not_equal_wide_scalar()
        {
            Fp4 a0 = Fp4(-491.50952m, 506.73987m, -201.46179m, 458.7696m);
            Fp b0 = (-40.51297m);
            bool4 r0 = bool4(true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp4 a1 = Fp4(-47.28424m, -4.25885m, -480.9433m, 380.7296m);
            Fp b1 = (-178.72217m);
            bool4 r1 = bool4(true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp4 a2 = Fp4(203.23236m, -210.24811m, 149.29901m, 307.94647m);
            Fp b2 = (178.6864m);
            bool4 r2 = bool4(true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp4 a3 = Fp4(-204.93494m, 395.02234m, -193.018m, 237.71686m);
            Fp b3 = (-81.21683m);
            bool4 r3 = bool4(true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4_operator_not_equal_scalar_wide()
        {
            Fp a0 = (-84.47537m);
            Fp4 b0 = Fp4(145.24762m, -294.39984m, -501.69632m, -231.25659m);
            bool4 r0 = bool4(true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp a1 = (-315.36432m);
            Fp4 b1 = Fp4(-83.16135m, -131.2561m, 504.67365m, -449.54895m);
            bool4 r1 = bool4(true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp a2 = (-457.44342m);
            Fp4 b2 = Fp4(-376.26813m, -385.2497m, 425.68658m, -18.988708m);
            bool4 r2 = bool4(true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp a3 = (-334.19855m);
            Fp4 b3 = Fp4(155.14642m, -431.13464m, 231.5097m, -168.78336m);
            bool4 r3 = bool4(true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4_operator_less_wide_wide()
        {
            Fp4 a0 = Fp4(-248.45181m, -455.30365m, 320.315m, -270.12848m);
            Fp4 b0 = Fp4(225.04071m, 307.312m, -435.28625m, 384.59454m);
            bool4 r0 = bool4(true, true, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp4 a1 = Fp4(-52.971436m, 351.49738m, -189.24158m, 166.60394m);
            Fp4 b1 = Fp4(128.18854m, 25.515686m, 253.86078m, -402.4974m);
            bool4 r1 = bool4(true, false, true, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp4 a2 = Fp4(-281.60788m, -328.3689m, 303.74066m, -10.85434m);
            Fp4 b2 = Fp4(39.97223m, -195.34567m, 480.38788m, 430.75067m);
            bool4 r2 = bool4(true, true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp4 a3 = Fp4(-377.5345m, -204.24298m, -485.56396m, -118.21863m);
            Fp4 b3 = Fp4(456.32416m, -183.97815m, -316.16702m, 15.29895m);
            bool4 r3 = bool4(true, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4_operator_less_wide_scalar()
        {
            Fp4 a0 = Fp4(-217.34143m, -154.63306m, -189.59198m, -383.10138m);
            Fp b0 = (-277.67377m);
            bool4 r0 = bool4(false, false, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp4 a1 = Fp4(449.96143m, 339.89673m, 278.93567m, 448.09546m);
            Fp b1 = (-495.594m);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp4 a2 = Fp4(168.98419m, 231.91278m, 191.04297m, -42.53656m);
            Fp b2 = (-379.16406m);
            bool4 r2 = bool4(false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp4 a3 = Fp4(3.5787964m, 409.57263m, -503.11368m, 321.62482m);
            Fp b3 = (-328.5581m);
            bool4 r3 = bool4(false, false, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4_operator_less_scalar_wide()
        {
            Fp a0 = (-485.6832m);
            Fp4 b0 = Fp4(-362.635m, -4.044037m, 131.79993m, 413.48376m);
            bool4 r0 = bool4(true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp a1 = (382.34747m);
            Fp4 b1 = Fp4(55.00757m, -373.25812m, -144.24112m, -243.22845m);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp a2 = (212.25671m);
            Fp4 b2 = Fp4(71.16406m, -104.41278m, 177.30798m, -44.35016m);
            bool4 r2 = bool4(false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp a3 = (-280.36896m);
            Fp4 b3 = Fp4(-397.822m, 453.41125m, -310.9288m, -159.81488m);
            bool4 r3 = bool4(false, true, false, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4_operator_greater_wide_wide()
        {
            Fp4 a0 = Fp4(-241.33841m, -475.21497m, -39.85724m, -167.34067m);
            Fp4 b0 = Fp4(438.91602m, 228.49042m, -206.5971m, 366.85388m);
            bool4 r0 = bool4(false, false, true, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp4 a1 = Fp4(-383.31873m, 119.09595m, 134.24622m, 295.21844m);
            Fp4 b1 = Fp4(35.72583m, -91.07013m, 154.46704m, 467.31146m);
            bool4 r1 = bool4(false, true, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp4 a2 = Fp4(-324.31348m, 278.55414m, -216.29721m, -217.02304m);
            Fp4 b2 = Fp4(-304.5686m, -105.56061m, 118.17328m, 291.72064m);
            bool4 r2 = bool4(false, true, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp4 a3 = Fp4(408.92578m, 408.4909m, -165.98468m, -188.39972m);
            Fp4 b3 = Fp4(198.42969m, 311.83734m, 477.4394m, 421.5794m);
            bool4 r3 = bool4(true, true, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4_operator_greater_wide_scalar()
        {
            Fp4 a0 = Fp4(-348.3178m, -2.4205933m, 423.71265m, 250.03534m);
            Fp b0 = (239.55536m);
            bool4 r0 = bool4(false, false, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp4 a1 = Fp4(-209.6311m, 202.20648m, 420.89746m, 422.2362m);
            Fp b1 = (-121.415405m);
            bool4 r1 = bool4(false, true, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp4 a2 = Fp4(-299.2479m, 17.824524m, 509.54065m, 501.89423m);
            Fp b2 = (-84.361145m);
            bool4 r2 = bool4(false, true, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp4 a3 = Fp4(-436.39563m, -187.94016m, -292.8944m, -164.38376m);
            Fp b3 = (-129.45663m);
            bool4 r3 = bool4(false, false, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4_operator_greater_scalar_wide()
        {
            Fp a0 = (-34.200226m);
            Fp4 b0 = Fp4(212.36633m, 82.05115m, 458.8661m, 136.99329m);
            bool4 r0 = bool4(false, false, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp a1 = (227.5271m);
            Fp4 b1 = Fp4(495.51807m, -142.25m, -196.3866m, -97.57742m);
            bool4 r1 = bool4(false, true, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp a2 = (-241.31299m);
            Fp4 b2 = Fp4(-139.42554m, 305.07654m, -305.36148m, -506.0047m);
            bool4 r2 = bool4(false, false, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp a3 = (-429.6786m);
            Fp4 b3 = Fp4(-430.8932m, 88.38849m, -263.5904m, -340.4632m);
            bool4 r3 = bool4(true, false, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4_operator_less_equal_wide_wide()
        {
            Fp4 a0 = Fp4(-266.1326m, -124.733765m, -292.27527m, 24.822144m);
            Fp4 b0 = Fp4(-192.43298m, -372.29657m, -239.20337m, -314.14038m);
            bool4 r0 = bool4(true, false, true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp4 a1 = Fp4(-272.5923m, -285.86377m, 384.44617m, 267.29004m);
            Fp4 b1 = Fp4(439.8761m, 301.66156m, 257.67798m, -234.71451m);
            bool4 r1 = bool4(true, true, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp4 a2 = Fp4(478.6623m, -110.5802m, 109.78064m, 178.77972m);
            Fp4 b2 = Fp4(-127.03546m, -511.36487m, -384.00253m, 8.338257m);
            bool4 r2 = bool4(false, false, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp4 a3 = Fp4(399.04333m, -236.436m, 166.79718m, 195.17603m);
            Fp4 b3 = Fp4(-464.58316m, 166.00934m, -353.5489m, 5.9090576m);
            bool4 r3 = bool4(false, true, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4_operator_less_equal_wide_scalar()
        {
            Fp4 a0 = Fp4(-347.2307m, 357.8626m, -179.71185m, -320.96027m);
            Fp b0 = (-160.18707m);
            bool4 r0 = bool4(true, false, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp4 a1 = Fp4(26.583496m, 219.6524m, 479.43463m, 166.25684m);
            Fp b1 = (-314.84348m);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp4 a2 = Fp4(94.45245m, 43.63623m, 213.9112m, -351.45435m);
            Fp b2 = (508.216m);
            bool4 r2 = bool4(true, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp4 a3 = Fp4(-510.48376m, -473.1872m, 335.4579m, 270.98102m);
            Fp b3 = (58.587646m);
            bool4 r3 = bool4(true, true, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4_operator_less_equal_scalar_wide()
        {
            Fp a0 = (-187.50052m);
            Fp4 b0 = Fp4(177.5221m, -221.34222m, -35.76126m, 354.90814m);
            bool4 r0 = bool4(true, false, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp a1 = (297.5418m);
            Fp4 b1 = Fp4(-487.66107m, 217.42084m, -94.54605m, 283.79358m);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp a2 = (431.82996m);
            Fp4 b2 = Fp4(-8.173676m, 456.12714m, -499.4815m, -282.17194m);
            bool4 r2 = bool4(false, true, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp a3 = (-207.38339m);
            Fp4 b3 = Fp4(-116.17682m, 459.26715m, -479.46613m, 56.500244m);
            bool4 r3 = bool4(true, true, false, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4_operator_greater_equal_wide_wide()
        {
            Fp4 a0 = Fp4(-480.5502m, -331.65723m, -467.8819m, -426.36612m);
            Fp4 b0 = Fp4(-13.955231m, -36.309723m, -361.51007m, -270.75452m);
            bool4 r0 = bool4(false, false, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp4 a1 = Fp4(130.68m, 397.9231m, 318.48987m, -65.386536m);
            Fp4 b1 = Fp4(-221.99017m, 153.435m, 90.831665m, -417.45892m);
            bool4 r1 = bool4(true, true, true, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp4 a2 = Fp4(356.61475m, 435.95337m, -488.66916m, 131.80145m);
            Fp4 b2 = Fp4(251.08832m, 137.00128m, -407.28433m, 228.05487m);
            bool4 r2 = bool4(true, true, false, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp4 a3 = Fp4(103.69757m, -163.08237m, 455.47546m, 93.445435m);
            Fp4 b3 = Fp4(-243.401m, 424.24408m, 269.84637m, 115.634094m);
            bool4 r3 = bool4(true, false, true, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4_operator_greater_equal_wide_scalar()
        {
            Fp4 a0 = Fp4(-100.195435m, 360.16846m, -374.34125m, 242.43842m);
            Fp b0 = (71.966736m);
            bool4 r0 = bool4(false, true, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp4 a1 = Fp4(-297.3426m, -314.72128m, 91.45465m, -222.22919m);
            Fp b1 = (155.94312m);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp4 a2 = Fp4(-388.12286m, 428.42255m, 321.47345m, -383.9345m);
            Fp b2 = (-277.31842m);
            bool4 r2 = bool4(false, true, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp4 a3 = Fp4(287.05243m, -333.85324m, 437.79694m, 298.99707m);
            Fp b3 = (-243.28503m);
            bool4 r3 = bool4(true, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4_operator_greater_equal_scalar_wide()
        {
            Fp a0 = (66.15973m);
            Fp4 b0 = Fp4(228.81372m, -371.95468m, 184.22943m, 266.50446m);
            bool4 r0 = bool4(false, true, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp a1 = (225.0069m);
            Fp4 b1 = Fp4(-488.35345m, -52.242126m, 451.52258m, 52.532227m);
            bool4 r1 = bool4(true, true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp a2 = (45.85956m);
            Fp4 b2 = Fp4(-379.48004m, 401.27222m, 172.98633m, 370.27435m);
            bool4 r2 = bool4(true, false, false, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp a3 = (192.75183m);
            Fp4 b3 = Fp4(481.17358m, 15.350586m, 128.0401m, -165.92456m);
            bool4 r3 = bool4(false, true, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4_operator_add_wide_wide()
        {
            Fp4 a0 = Fp4(149.59412m, 261.85114m, 134.76111m, 296.27722m);
            Fp4 b0 = Fp4(82.11688m, -336.5427m, -203.66907m, 348.16364m);
            Fp4 r0 = Fp4(231.711m, -74.69156m, -68.90796m, 644.44086m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp4 a1 = Fp4(-87.83832m, 262.9261m, -230.0998m, -408.89618m);
            Fp4 b1 = Fp4(417.2708m, 96.18884m, -128.52588m, 215.17627m);
            Fp4 r1 = Fp4(329.4325m, 359.11493m, -358.62567m, -193.71991m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp4 a2 = Fp4(-478.518m, 195.41254m, -321.6739m, 350.58875m);
            Fp4 b2 = Fp4(292.04285m, 113.43524m, 155.31805m, -440.69635m);
            Fp4 r2 = Fp4(-186.47516m, 308.84778m, -166.35583m, -90.107605m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp4 a3 = Fp4(113.98291m, -90.31268m, -423.45035m, -448.143m);
            Fp4 b3 = Fp4(-165.62283m, 32.225952m, -454.52457m, -508.79465m);
            Fp4 r3 = Fp4(-51.639923m, -58.08673m, -877.9749m, -956.9376m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4_operator_add_wide_scalar()
        {
            Fp4 a0 = Fp4(-363.30127m, 85.21643m, 307.5595m, -324.80725m);
            Fp b0 = (84.48932m);
            Fp4 r0 = Fp4(-278.81195m, 169.70575m, 392.04883m, -240.31793m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp4 a1 = Fp4(213.70538m, -287.34515m, 389.57996m, 474.44275m);
            Fp b1 = (85.79199m);
            Fp4 r1 = Fp4(299.49738m, -201.55316m, 475.37195m, 560.23474m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp4 a2 = Fp4(286.0359m, -86.13693m, 429.21674m, 222.11395m);
            Fp b2 = (-410.64044m);
            Fp4 r2 = Fp4(-124.60455m, -496.77737m, 18.576294m, -188.52649m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp4 a3 = Fp4(192.88623m, 114.861084m, -501.71588m, 160.07806m);
            Fp b3 = (167.73853m);
            Fp4 r3 = Fp4(360.62476m, 282.5996m, -333.97736m, 327.8166m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4_operator_add_scalar_wide()
        {
            Fp a0 = (-510.89264m);
            Fp4 b0 = Fp4(130.32959m, 272.09174m, 331.812m, -379.09714m);
            Fp4 r0 = Fp4(-380.56305m, -238.8009m, -179.08063m, -889.98975m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp a1 = (397.8896m);
            Fp4 b1 = Fp4(-333.4043m, -9.8524475m, 236.39392m, -45.938232m);
            Fp4 r1 = Fp4(64.48529m, 388.03714m, 634.2835m, 351.95135m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp a2 = (-418.6372m);
            Fp4 b2 = Fp4(-504.4516m, 474.44263m, -500.95m, -202.51782m);
            Fp4 r2 = Fp4(-923.0888m, 55.80542m, -919.5872m, -621.155m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp a3 = (-32.80835m);
            Fp4 b3 = Fp4(113.29993m, -390.25403m, 114.28601m, 305.88098m);
            Fp4 r3 = Fp4(80.49158m, -423.06238m, 81.47766m, 273.07263m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4_operator_sub_wide_wide()
        {
            Fp4 a0 = Fp4(-493.45367m, -228.40881m, 463.7627m, 280.9309m);
            Fp4 b0 = Fp4(-470.96182m, 95.77942m, 189.22583m, -88.87137m);
            Fp4 r0 = Fp4(-22.491852m, -324.18823m, 274.53687m, 369.80228m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp4 a1 = Fp4(-394.85977m, -289.75592m, 248.1676m, 499.35565m);
            Fp4 b1 = Fp4(-353.6308m, -352.10352m, 346.07532m, -379.2524m);
            Fp4 r1 = Fp4(-41.228973m, 62.347595m, -97.907715m, 878.60803m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp4 a2 = Fp4(-272.3052m, -342.8852m, 328.01593m, -486.20126m);
            Fp4 b2 = Fp4(-63.3519m, 326.07965m, 57.516968m, -5.383026m);
            Fp4 r2 = Fp4(-208.95331m, -668.96484m, 270.49896m, -480.81824m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp4 a3 = Fp4(-428.74026m, -42.623505m, -502.78284m, -276.01123m);
            Fp4 b3 = Fp4(204.36798m, -478.10825m, -341.72345m, 407.61432m);
            Fp4 r3 = Fp4(-633.1083m, 435.48474m, -161.05939m, -683.62555m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4_operator_sub_wide_scalar()
        {
            Fp4 a0 = Fp4(-483.1618m, 208.13171m, -387.3754m, -336.09125m);
            Fp b0 = (-369.26047m);
            Fp4 r0 = Fp4(-113.90134m, 577.3922m, -18.11493m, 33.16922m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp4 a1 = Fp4(167.81488m, 348.0346m, -303.7441m, 237.17828m);
            Fp b1 = (-376.95837m);
            Fp4 r1 = Fp4(544.77325m, 724.993m, 73.214264m, 614.13666m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp4 a2 = Fp4(276.68842m, 308.1668m, 243.65826m, 246.66418m);
            Fp b2 = (-357.72092m);
            Fp4 r2 = Fp4(634.4093m, 665.8877m, 601.37915m, 604.38513m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp4 a3 = Fp4(-157.99301m, 498.3803m, 183.44073m, 334.32684m);
            Fp b3 = (350.88452m);
            Fp4 r3 = Fp4(-508.87753m, 147.49579m, -167.44379m, -16.557678m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4_operator_sub_scalar_wide()
        {
            Fp a0 = (-400.4135m);
            Fp4 b0 = Fp4(-434.79865m, -476.15903m, 360.5266m, 427.36743m);
            Fp4 r0 = Fp4(34.38513m, 75.745514m, -760.9401m, -827.78094m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp a1 = (34.250977m);
            Fp4 b1 = Fp4(-102.27759m, -235.2923m, -404.2934m, 53.207886m);
            Fp4 r1 = Fp4(136.52856m, 269.54327m, 438.54437m, -18.95691m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp a2 = (-349.06525m);
            Fp4 b2 = Fp4(180.38147m, 508.37018m, 59.979797m, 278.88702m);
            Fp4 r2 = Fp4(-529.4467m, -857.4354m, -409.04504m, -627.9523m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp a3 = (184.60626m);
            Fp4 b3 = Fp4(476.90186m, 413.65137m, 336.2138m, -11.193787m);
            Fp4 r3 = Fp4(-292.2956m, -229.0451m, -151.60754m, 195.80005m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4_operator_mul_wide_wide()
        {
            Fp4 a0 = Fp4(-326.98944m, 183.26929m, -95.33392m, -352.96515m);
            Fp4 b0 = Fp4(351.58496m, 113.25659m, 286.7157m, 288.06653m);
            Fp4 r0 = Fp4(-114964.57m, 20756.455m, -27333.732m, -101677.445m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp4 a1 = Fp4(-222.24484m, 237.92462m, -66.21646m, -462.0301m);
            Fp4 b1 = Fp4(327.3562m, 406.58655m, -200.43045m, 386.18604m);
            Fp4 r1 = Fp4(-72753.23m, 96736.95m, 13271.795m, -178429.56m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp4 a2 = Fp4(-500.88995m, 435.0948m, 252.29065m, -6.518158m);
            Fp4 b2 = Fp4(363.50323m, 324.0984m, 356.03528m, -241.42923m);
            Fp4 r2 = Fp4(-182075.12m, 141013.52m, 89824.375m, 1573.6738m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp4 a3 = Fp4(322.92114m, 82.13257m, -243.62183m, -397.79288m);
            Fp4 b3 = Fp4(-351.41443m, -257.6211m, -54.470886m, -133.72797m);
            Fp4 r3 = Fp4(-113479.15m, -21159.082m, 13270.297m, 53196.03m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4_operator_mul_wide_scalar()
        {
            Fp4 a0 = Fp4(398.63098m, 133.9815m, 100.58301m, 289.0614m);
            Fp b0 = (188.26575m);
            Fp4 r0 = Fp4(75048.56m, 25224.129m, 18936.336m, 54420.36m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp4 a1 = Fp4(-66.26727m, 265.87543m, 258.4983m, -59.58963m);
            Fp b1 = (-440.14893m);
            Fp4 r1 = Fp4(29167.469m, -117024.78m, -113777.74m, 26228.312m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp4 a2 = Fp4(338.4347m, -256.9532m, 383.3626m, -297.26385m);
            Fp b2 = (-313.44278m);
            Fp4 r2 = Fp4(-106079.914m, 80540.12m, -120162.24m, 93175.21m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp4 a3 = Fp4(206.87476m, -33.312927m, -508.58292m, -417.235m);
            Fp b3 = (460.85834m);
            Fp4 r3 = Fp4(95339.95m, -15352.54m, -234384.67m, -192286.22m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4_operator_mul_scalar_wide()
        {
            Fp a0 = (291.10083m);
            Fp4 b0 = Fp4(85.88977m, -2.0483398m, -372.21533m, -32.73163m);
            Fp4 r0 = Fp4(25002.584m, -596.27344m, -108352.195m, -9528.204m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp a1 = (-458.91272m);
            Fp4 b1 = Fp4(-425.4938m, 127.91998m, 166.95068m, -505.2238m);
            Fp4 r1 = Fp4(195264.52m, -58704.105m, -76615.79m, 231853.62m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp a2 = (-52.959717m);
            Fp4 b2 = Fp4(493.21753m, -320.13397m, 459.70593m, -309.70544m);
            Fp4 r2 = Fp4(-26120.66m, 16954.205m, -24345.896m, 16401.912m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp a3 = (-463.31314m);
            Fp4 b3 = Fp4(124.56317m, 393.03064m, 321.9226m, 324.49915m);
            Fp4 r3 = Fp4(-57711.754m, -182096.27m, -149150.97m, -150344.72m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4_operator_div_wide_wide()
        {
            Fp4 a0 = Fp4(-434.30182m, -58.547546m, -242.22162m, -61.09958m);
            Fp4 b0 = Fp4(-418.87305m, 154.74506m, 228.1217m, 170.04639m);
            Fp4 r0 = Fp4(1.036834m, -0.3783484m, -1.0618087m, -0.35931125m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp4 a1 = Fp4(507.04565m, 55.52173m, 84.16864m, 121.1817m);
            Fp4 b1 = Fp4(-183.44586m, 254.94373m, -327.2115m, -54.62494m);
            Fp4 r1 = Fp4(-2.764007m, 0.21778034m, -0.2572301m, -2.2184317m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp4 a2 = Fp4(-251.65366m, 232.27637m, -11.3958435m, 29.057007m);
            Fp4 b2 = Fp4(345.10803m, 82.34033m, -104.82977m, -236.51917m);
            Fp4 r2 = Fp4(-0.72920257m, 2.8209307m, 0.10870808m, -0.12285265m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp4 a3 = Fp4(322.31866m, -203.0835m, -48.977356m, 42.2453m);
            Fp4 b3 = Fp4(359.3108m, 322.64587m, 371.59705m, -355.33997m);
            Fp4 r3 = Fp4(0.897047m, -0.62943155m, -0.13180234m, -0.11888699m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4_operator_div_wide_scalar()
        {
            Fp4 a0 = Fp4(338.5183m, 342.57233m, -162.55743m, 62.311157m);
            Fp b0 = (18.585693m);
            Fp4 r0 = Fp4(18.213919m, 18.432045m, -8.746374m, 3.3526409m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp4 a1 = Fp4(-435.44455m, 336.1009m, -230.52808m, -93.8689m);
            Fp b1 = (124.90289m);
            Fp4 r1 = Fp4(-3.4862647m, 2.6908975m, -1.8456584m, -0.751535m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp4 a2 = Fp4(-125.544495m, -377.6493m, -358.36334m, -439.82245m);
            Fp b2 = (-412.19177m);
            Fp4 r2 = Fp4(0.3045779m, 0.916198m, 0.86940926m, 1.0670335m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp4 a3 = Fp4(-253.62341m, 115.1026m, -68.532166m, 6.3016357m);
            Fp b3 = (-156.09784m);
            Fp4 r3 = Fp4(1.6247721m, -0.7373747m, 0.4390334m, -0.040369783m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4_operator_div_scalar_wide()
        {
            Fp a0 = (2.9528809m);
            Fp4 b0 = Fp4(260.17004m, 427.25922m, -21.09494m, -20.552216m);
            Fp4 r0 = Fp4(0.011349811m, 0.0069112163m, -0.13998052m, -0.14367701m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp a1 = (-133.13852m);
            Fp4 b1 = Fp4(254.63452m, -286.85498m, 186.54468m, 172.25421m);
            Fp4 r1 = Fp4(-0.52286124m, 0.4641318m, -0.71370846m, -0.7729188m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp a2 = (-81.20044m);
            Fp4 b2 = Fp4(483.28802m, 492.59583m, -428.58005m, -63.68457m);
            Fp4 r2 = Fp4(-0.16801666m, -0.16484192m, 0.18946388m, 1.275041m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp a3 = (464.9878m);
            Fp4 b3 = Fp4(224.61633m, 360.40833m, -104.604706m, -371.11063m);
            Fp4 r3 = Fp4(2.0701425m, 1.2901694m, -4.44519m, -1.2529627m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4_operator_mod_wide_wide()
        {
            Fp4 a0 = Fp4(56.91992m, -262.2188m, -97.763245m, 104.89154m);
            Fp4 b0 = Fp4(470.2685m, -371.4406m, 161.94507m, -151.37039m);
            Fp4 r0 = Fp4(56.91992m, -262.2188m, -97.763245m, 104.89154m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp4 a1 = Fp4(-65.37125m, -126.50305m, -385.32135m, 75.61359m);
            Fp4 b1 = Fp4(170.21747m, 453.35284m, 433.15808m, -159.1189m);
            Fp4 r1 = Fp4(-65.37125m, -126.50305m, -385.32135m, 75.61359m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp4 a2 = Fp4(147.87054m, -146.02231m, -188.04791m, 14.303833m);
            Fp4 b2 = Fp4(190.11346m, 46.63446m, 297.8944m, -198.62778m);
            Fp4 r2 = Fp4(147.87054m, -6.118927m, -188.04791m, 14.303833m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp4 a3 = Fp4(-56.95459m, -280.97797m, -139.49966m, -284.42224m);
            Fp4 b3 = Fp4(-45.952698m, 401.35815m, -246.4354m, -156.38309m);
            Fp4 r3 = Fp4(-11.001892m, -280.97797m, -139.49966m, -128.03915m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4_operator_mod_wide_scalar()
        {
            Fp4 a0 = Fp4(360.08112m, 57.401245m, -85.35019m, 449.2752m);
            Fp b0 = (-297.3982m);
            Fp4 r0 = Fp4(62.682922m, 57.401245m, -85.35019m, 151.87701m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp4 a1 = Fp4(4.46344m, -152.73862m, 262.32312m, 279.7296m);
            Fp b1 = (469.19336m);
            Fp4 r1 = Fp4(4.46344m, -152.73862m, 262.32312m, 279.7296m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp4 a2 = Fp4(-242.91284m, 109.5332m, -276.18713m, 357.42072m);
            Fp b2 = (-24.107025m);
            Fp4 r2 = Fp4(-1.8425903m, 13.105103m, -11.009857m, 19.922363m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp4 a3 = Fp4(510.55994m, 173.2602m, -111.50394m, 36.7323m);
            Fp b3 = (-287.36353m);
            Fp4 r3 = Fp4(223.19641m, 173.2602m, -111.50394m, 36.7323m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4_operator_mod_scalar_wide()
        {
            Fp a0 = (321.83087m);
            Fp4 b0 = Fp4(-360.08008m, 271.34174m, -418.93903m, -57.065247m);
            Fp4 r0 = Fp4(321.83087m, 50.489136m, 321.83087m, 36.50464m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp a1 = (-18.80716m);
            Fp4 b1 = Fp4(10.327942m, 114.91266m, -373.9153m, -178.94406m);
            Fp4 r1 = Fp4(-8.479218m, -18.80716m, -18.80716m, -18.80716m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp a2 = (11.08252m);
            Fp4 b2 = Fp4(-162.6925m, 118.41644m, -13.732086m, -58.26706m);
            Fp4 r2 = Fp4(11.08252m, 11.08252m, 11.08252m, 11.08252m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp a3 = (219.90881m);
            Fp4 b3 = Fp4(-60.29535m, -317.5764m, -219.50665m, -362.4784m);
            Fp4 r3 = Fp4(39.022766m, 219.90881m, 0.40216064m, 219.90881m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4_operator_plus()
        {
            Fp4 a0 = Fp4(-462.95068m, -341.85828m, 350.2633m, -306.49417m);
            Fp4 r0 = Fp4(-462.95068m, -341.85828m, 350.2633m, -306.49417m);
            TestUtils.AreEqual(+a0, r0);

            Fp4 a1 = Fp4(-402.10608m, 298.37836m, 256.47144m, 167.59698m);
            Fp4 r1 = Fp4(-402.10608m, 298.37836m, 256.47144m, 167.59698m);
            TestUtils.AreEqual(+a1, r1);

            Fp4 a2 = Fp4(-323.4687m, -509.95538m, -135.21799m, -382.86426m);
            Fp4 r2 = Fp4(-323.4687m, -509.95538m, -135.21799m, -382.86426m);
            TestUtils.AreEqual(+a2, r2);

            Fp4 a3 = Fp4(322.83105m, -401.84415m, -459.20764m, -74.09299m);
            Fp4 r3 = Fp4(322.83105m, -401.84415m, -459.20764m, -74.09299m);
            TestUtils.AreEqual(+a3, r3);
        }

        [Test]
        public static void Fp4_operator_neg()
        {
            Fp4 a0 = Fp4(-161.17307m, 91.577576m, -474.2732m, -138.7461m);
            Fp4 r0 = Fp4(161.17307m, -91.577576m, 474.2732m, 138.7461m);
            TestUtils.AreEqual(-a0, r0);

            Fp4 a1 = Fp4(-302.52325m, 440.5053m, -457.04636m, 370.19952m);
            Fp4 r1 = Fp4(302.52325m, -440.5053m, 457.04636m, -370.19952m);
            TestUtils.AreEqual(-a1, r1);

            Fp4 a2 = Fp4(-126.07272m, 176.51025m, -386.41965m, -161.73965m);
            Fp4 r2 = Fp4(126.07272m, -176.51025m, 386.41965m, 161.73965m);
            TestUtils.AreEqual(-a2, r2);

            Fp4 a3 = Fp4(-413.31476m, -394.13074m, 43.724304m, -71.36215m);
            Fp4 r3 = Fp4(413.31476m, 394.13074m, -43.724304m, 71.36215m);
            TestUtils.AreEqual(-a3, r3);
        }

        [Test]
        public static void Fp4_operator_prefix_inc()
        {
            Fp4 a0 = Fp4(-283.03375m, 366.7337m, -401.91684m, 187.16315m);
            Fp4 r0 = Fp4(-282.03375m, 367.7337m, -400.91684m, 188.16315m);
            TestUtils.AreEqual(++a0, r0);

            Fp4 a1 = Fp4(27.883484m, -495.23444m, 224.36108m, 203.96112m);
            Fp4 r1 = Fp4(28.883484m, -494.23444m, 225.36108m, 204.96112m);
            TestUtils.AreEqual(++a1, r1);

            Fp4 a2 = Fp4(-308.8134m, -483.0141m, -269.13318m, -40.76111m);
            Fp4 r2 = Fp4(-307.8134m, -482.0141m, -268.13318m, -39.76111m);
            TestUtils.AreEqual(++a2, r2);

            Fp4 a3 = Fp4(21.258972m, -143.68582m, 451.3499m, -61.16147m);
            Fp4 r3 = Fp4(22.258972m, -142.68582m, 452.3499m, -60.16147m);
            TestUtils.AreEqual(++a3, r3);
        }

        [Test]
        public static void Fp4_operator_postfix_inc()
        {
            Fp4 a0 = Fp4(366.14648m, 179.27643m, -389.90704m, 183.24811m);
            Fp4 r0 = Fp4(366.14648m, 179.27643m, -389.90704m, 183.24811m);
            TestUtils.AreEqual(a0++, r0);

            Fp4 a1 = Fp4(189.8518m, 145.12164m, -225.01251m, 375.78876m);
            Fp4 r1 = Fp4(189.8518m, 145.12164m, -225.01251m, 375.78876m);
            TestUtils.AreEqual(a1++, r1);

            Fp4 a2 = Fp4(435.95538m, -302.35114m, -167.30942m, -432.4173m);
            Fp4 r2 = Fp4(435.95538m, -302.35114m, -167.30942m, -432.4173m);
            TestUtils.AreEqual(a2++, r2);

            Fp4 a3 = Fp4(-195.24594m, -116.777405m, 495.3412m, -195.3482m);
            Fp4 r3 = Fp4(-195.24594m, -116.777405m, 495.3412m, -195.3482m);
            TestUtils.AreEqual(a3++, r3);
        }

        [Test]
        public static void Fp4_operator_prefix_dec()
        {
            Fp4 a0 = Fp4(127.71149m, 412.1825m, 421.8966m, -407.7751m);
            Fp4 r0 = Fp4(126.71149m, 411.1825m, 420.8966m, -408.7751m);
            TestUtils.AreEqual(--a0, r0);

            Fp4 a1 = Fp4(-148.3689m, -365.90997m, 111.1109m, -473.15137m);
            Fp4 r1 = Fp4(-149.3689m, -366.90997m, 110.1109m, -474.15137m);
            TestUtils.AreEqual(--a1, r1);

            Fp4 a2 = Fp4(-278.87814m, -490.94742m, 437.7041m, 440.35724m);
            Fp4 r2 = Fp4(-279.87814m, -491.94742m, 436.7041m, 439.35724m);
            TestUtils.AreEqual(--a2, r2);

            Fp4 a3 = Fp4(-22.001892m, -135.55646m, 336.039m, -1.5646973m);
            Fp4 r3 = Fp4(-23.001892m, -136.55646m, 335.039m, -2.5646973m);
            TestUtils.AreEqual(--a3, r3);
        }

        [Test]
        public static void Fp4_operator_postfix_dec()
        {
            Fp4 a0 = Fp4(333.3805m, -215.50674m, 152.04675m, -233.58646m);
            Fp4 r0 = Fp4(333.3805m, -215.50674m, 152.04675m, -233.58646m);
            TestUtils.AreEqual(a0--, r0);

            Fp4 a1 = Fp4(-187.37677m, 106.726135m, -494.1874m, 442.7943m);
            Fp4 r1 = Fp4(-187.37677m, 106.726135m, -494.1874m, 442.7943m);
            TestUtils.AreEqual(a1--, r1);

            Fp4 a2 = Fp4(474.02826m, -259.07544m, -407.2235m, 256.4026m);
            Fp4 r2 = Fp4(474.02826m, -259.07544m, -407.2235m, 256.4026m);
            TestUtils.AreEqual(a2--, r2);

            Fp4 a3 = Fp4(272.2155m, 78.12311m, -341.83966m, 453.72626m);
            Fp4 r3 = Fp4(272.2155m, 78.12311m, -341.83966m, 453.72626m);
            TestUtils.AreEqual(a3--, r3);
        }

        [Test]
        public static void Fp4_shuffle_result_1()
        {
            Fp4 a = Fp4(0, 1, 2, 3);
            Fp4 b = Fp4(4, 5, 6, 7);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX), (0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY), (1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ), (2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftW), (3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX), (4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY), (5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ), (6));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightW), (7));
        }

        [Test]
        public static void Fp4_shuffle_result_2()
        {
            Fp4 a = Fp4(0, 1, 2, 3);
            Fp4 b = Fp4(4, 5, 6, 7);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightZ), Fp2(5, 6));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightX), Fp2(6, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.RightX), Fp2(1, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightW, ShuffleComponent.LeftW), Fp2(7, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightW, ShuffleComponent.LeftZ), Fp2(7, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.LeftW), Fp2(2, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftW), Fp2(5, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightW, ShuffleComponent.LeftX), Fp2(7, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightW), Fp2(6, 7));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftZ), Fp2(5, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightZ), Fp2(6, 6));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightW, ShuffleComponent.LeftX), Fp2(7, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX), Fp2(5, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightW, ShuffleComponent.RightY), Fp2(7, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftX), Fp2(4, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.LeftW), Fp2(1, 3));
        }

        [Test]
        public static void Fp4_shuffle_result_3()
        {
            Fp4 a = Fp4(0, 1, 2, 3);
            Fp4 b = Fp4(4, 5, 6, 7);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.RightW, ShuffleComponent.RightY), Fp3(2, 7, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftX, ShuffleComponent.LeftW), Fp3(6, 0, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.RightW, ShuffleComponent.RightX), Fp3(2, 7, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.LeftZ), Fp3(5, 0, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightW, ShuffleComponent.RightZ, ShuffleComponent.LeftZ), Fp3(7, 6, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftW, ShuffleComponent.LeftY, ShuffleComponent.LeftY), Fp3(3, 1, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftW, ShuffleComponent.RightY, ShuffleComponent.RightX), Fp3(3, 5, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftW, ShuffleComponent.LeftY, ShuffleComponent.RightW), Fp3(3, 1, 7));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightY, ShuffleComponent.RightZ), Fp3(6, 5, 6));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX, ShuffleComponent.LeftY), Fp3(5, 4, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightW, ShuffleComponent.RightW, ShuffleComponent.LeftX), Fp3(7, 7, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftY, ShuffleComponent.RightY), Fp3(6, 1, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftY, ShuffleComponent.RightW), Fp3(6, 1, 7));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftW, ShuffleComponent.RightY, ShuffleComponent.RightY), Fp3(3, 5, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftX, ShuffleComponent.RightY), Fp3(6, 0, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftY, ShuffleComponent.RightW), Fp3(5, 1, 7));
        }

        [Test]
        public static void Fp4_shuffle_result_4()
        {
            Fp4 a = Fp4(0, 1, 2, 3);
            Fp4 b = Fp4(4, 5, 6, 7);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.LeftW, ShuffleComponent.RightX, ShuffleComponent.LeftZ), Fp4(1, 3, 4, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftW, ShuffleComponent.RightZ, ShuffleComponent.RightZ), Fp4(5, 3, 6, 6));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightZ, ShuffleComponent.RightW, ShuffleComponent.LeftZ), Fp4(6, 6, 7, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightY, ShuffleComponent.LeftZ, ShuffleComponent.LeftZ), Fp4(4, 5, 2, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftY, ShuffleComponent.LeftY, ShuffleComponent.LeftX), Fp4(6, 1, 1, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightY, ShuffleComponent.RightY, ShuffleComponent.RightW), Fp4(4, 5, 5, 7));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.RightW, ShuffleComponent.LeftX, ShuffleComponent.RightW), Fp4(1, 7, 0, 7));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.LeftY, ShuffleComponent.LeftX), Fp4(5, 0, 1, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightW, ShuffleComponent.LeftW, ShuffleComponent.LeftY), Fp4(4, 7, 3, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.RightX), Fp4(5, 4, 1, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftZ, ShuffleComponent.RightZ, ShuffleComponent.LeftX), Fp4(0, 2, 6, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.RightY, ShuffleComponent.RightW, ShuffleComponent.RightW), Fp4(2, 5, 7, 7));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftW, ShuffleComponent.RightX, ShuffleComponent.LeftZ, ShuffleComponent.RightX), Fp4(3, 4, 2, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftX, ShuffleComponent.LeftZ, ShuffleComponent.LeftW), Fp4(4, 0, 2, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightX, ShuffleComponent.LeftX, ShuffleComponent.RightY), Fp4(6, 4, 0, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftW, ShuffleComponent.RightW, ShuffleComponent.LeftY, ShuffleComponent.RightY), Fp4(3, 7, 1, 5));
        }

#endif

    }
}
