//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.FixedPoint.MathFp;
namespace Unity.Mathematics.FixedPoint.Tests
{
    [TestFixture]
    public class TestFp4x2
    {
#if ENABLE_DECIMAL
        [Test]
        public static void Fp4x2_zero()
        {
            TestUtils.AreEqual(Fp4x2.zero.c0.x, (Fp)0);
            TestUtils.AreEqual(Fp4x2.zero.c0.y, (Fp)0);
            TestUtils.AreEqual(Fp4x2.zero.c0.z, (Fp)0);
            TestUtils.AreEqual(Fp4x2.zero.c0.w, (Fp)0);
            TestUtils.AreEqual(Fp4x2.zero.c1.x, (Fp)0);
            TestUtils.AreEqual(Fp4x2.zero.c1.y, (Fp)0);
            TestUtils.AreEqual(Fp4x2.zero.c1.z, (Fp)0);
            TestUtils.AreEqual(Fp4x2.zero.c1.w, (Fp)0);
        }

        [Test]
        public static void Fp4x2_operator_equal_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(304.0451m, -242.63562m, 323.91107m, -435.55502m, 198.06403m, -117.03351m, -384.73096m, 304.45056m);
            Fp4x2 b0 = Fp4x2(-264.28522m, -218.33426m, 253.03296m, 372.23932m, -171.82083m, 49.70288m, 261.85016m, -238.16519m);
            bool4x2 r0 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp4x2 a1 = Fp4x2(57.849m, 245.8263m, -303.59222m, -446.4428m, 238.98315m, 171.6228m, -291.7655m, -139.28052m);
            Fp4x2 b1 = Fp4x2(-368.79456m, -479.64792m, 213.87708m, -320.8371m, 93.80847m, 25.883423m, -489.63315m, -447.4523m);
            bool4x2 r1 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp4x2 a2 = Fp4x2(-372.00873m, 116.63696m, -412.20416m, 189.54596m, 60.885193m, 55.26001m, 466.31592m, 274.3271m);
            Fp4x2 b2 = Fp4x2(399.854m, -88.43811m, -399.37903m, 96.70093m, -256.15207m, -480.7037m, -294.3447m, -162.43436m);
            bool4x2 r2 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp4x2 a3 = Fp4x2(-337.95966m, -335.89508m, 503.47186m, 286.8064m, -329.8424m, 54.682617m, -430.5898m, 152.00482m);
            Fp4x2 b3 = Fp4x2(143.76892m, 382.4588m, 348.62878m, -421.83197m, -433.79852m, -281.89743m, 50.561584m, 175.6972m);
            bool4x2 r3 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_equal_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(-441.88464m, -84.34961m, -254.78915m, -299.5752m, 336.64435m, 27.947937m, 309.77936m, -82.85208m);
            Fp b0 = (280.80237m);
            bool4x2 r0 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp4x2 a1 = Fp4x2(150.21582m, 440.7932m, -389.2873m, -329.5147m, 247.63269m, 90.41724m, -438.72107m, 169.65619m);
            Fp b1 = (-192.66446m);
            bool4x2 r1 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp4x2 a2 = Fp4x2(-247.76123m, -53.607788m, 105.0813m, -504.72043m, 34.19281m, 508.6532m, 486.59094m, 400.13477m);
            Fp b2 = (231.31848m);
            bool4x2 r2 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp4x2 a3 = Fp4x2(-411.47345m, 228.36359m, 487.919m, -130.65189m, 502.62256m, 165.63971m, 253.99951m, 139.4914m);
            Fp b3 = (-216.84076m);
            bool4x2 r3 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_equal_scalar_wide()
        {
            Fp a0 = (-193.7709m);
            Fp4x2 b0 = Fp4x2(-138.46414m, -273.42194m, 162.6225m, 187.72485m, 382.61987m, -82.54779m, 298.32867m, -235.21484m);
            bool4x2 r0 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            Fp a1 = (125.953125m);
            Fp4x2 b1 = Fp4x2(-18.586182m, -251.19241m, -295.58725m, -402.58438m, 258.1311m, -128.23999m, 490.22418m, -125.58237m);
            bool4x2 r1 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            Fp a2 = (-237.95346m);
            Fp4x2 b2 = Fp4x2(-202.5444m, 210.6543m, -485.73117m, -451.5777m, 58.90094m, 60.381775m, -380.57666m, 428.50537m);
            bool4x2 r2 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            Fp a3 = (-510.5632m);
            Fp4x2 b3 = Fp4x2(-168.52628m, 13.787476m, -168.90213m, -261.5316m, -10.708496m, 312.1266m, 324.50842m, 244.79773m);
            bool4x2 r3 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_not_equal_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(-498.66064m, 483.43823m, -368.5275m, -1.0883789m, -338.3922m, 405.47144m, -431.94257m, -256.16473m);
            Fp4x2 b0 = Fp4x2(496.85205m, 490.64667m, -360.57568m, -70.759705m, -336.28644m, 308.89386m, -222.3328m, 60.620728m);
            bool4x2 r0 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp4x2 a1 = Fp4x2(431.58868m, -181.17221m, -231.57767m, 338.64343m, 269.79736m, -118.2919m, -148.18341m, -383.60794m);
            Fp4x2 b1 = Fp4x2(234.66309m, -55.329132m, -350.50763m, 419.24213m, -435.70135m, 162.47571m, -183.24216m, -115.81906m);
            bool4x2 r1 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp4x2 a2 = Fp4x2(-32.300903m, 97.237854m, -10.931793m, -461.59253m, 44.711792m, 78.70465m, 373.8048m, -40.56546m);
            Fp4x2 b2 = Fp4x2(292.2118m, -145.54517m, -180.45279m, 473.34064m, -465.45633m, -226.7468m, -213.40073m, -457.89676m);
            bool4x2 r2 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp4x2 a3 = Fp4x2(-214.38165m, -475.03076m, 266.521m, -394.08606m, -353.79138m, -291.1507m, 269.71625m, -434.57632m);
            Fp4x2 b3 = Fp4x2(-346.1724m, 89.81409m, 417.15234m, 363.84692m, -447.8039m, -444.82614m, 348.4359m, 356.8499m);
            bool4x2 r3 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_not_equal_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(-491.50952m, 506.73987m, -201.46179m, 458.7696m, -47.28424m, -178.72217m, -4.25885m, -480.9433m);
            Fp b0 = (-40.51297m);
            bool4x2 r0 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp4x2 a1 = Fp4x2(380.7296m, 178.6864m, -210.24811m, 149.29901m, 307.94647m, -204.93494m, -81.21683m, 395.02234m);
            Fp b1 = (203.23236m);
            bool4x2 r1 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp4x2 a2 = Fp4x2(-193.018m, -401.1488m, 321.42255m, 158.42194m, -454.762m, 403.64246m, -502.65527m, 317.45734m);
            Fp b2 = (237.71686m);
            bool4x2 r2 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp4x2 a3 = Fp4x2(-268.6849m, 327.48834m, 340.33936m, -484.17932m, 366.2265m, 496.1463m, 97.20398m, 135.64307m);
            Fp b3 = (202.21942m);
            bool4x2 r3 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_not_equal_scalar_wide()
        {
            Fp a0 = (-84.47537m);
            Fp4x2 b0 = Fp4x2(145.24762m, -294.39984m, -501.69632m, -231.25659m, -315.36432m, -83.16135m, -131.2561m, 504.67365m);
            bool4x2 r0 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            Fp a1 = (-449.54895m);
            Fp4x2 b1 = Fp4x2(-457.44342m, -376.26813m, -385.2497m, 425.68658m, -18.988708m, -334.19855m, 155.14642m, -431.13464m);
            bool4x2 r1 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            Fp a2 = (231.5097m);
            Fp4x2 b2 = Fp4x2(-168.78336m, -38.183533m, 412.3233m, -199.63107m, -218.60913m, 351.11078m, 71.79602m, -157.31311m);
            bool4x2 r2 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            Fp a3 = (-244.58215m);
            Fp4x2 b3 = Fp4x2(202.2995m, 212.07178m, 359.22083m, 245.27911m, 115.828735m, 128.41241m, 372.49237m, -284.46402m);
            bool4x2 r3 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_less_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(-248.45181m, -455.30365m, 320.315m, -270.12848m, -52.971436m, 351.49738m, -189.24158m, 166.60394m);
            Fp4x2 b0 = Fp4x2(225.04071m, 307.312m, -435.28625m, 384.59454m, 128.18854m, 25.515686m, 253.86078m, -402.4974m);
            bool4x2 r0 = bool4x2(true, true, false, true, true, false, true, false);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp4x2 a1 = Fp4x2(-281.60788m, -328.3689m, 303.74066m, -10.85434m, -377.5345m, -204.24298m, -485.56396m, -118.21863m);
            Fp4x2 b1 = Fp4x2(39.97223m, -195.34567m, 480.38788m, 430.75067m, 456.32416m, -183.97815m, -316.16702m, 15.29895m);
            bool4x2 r1 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp4x2 a2 = Fp4x2(-229.2432m, -47.903534m, -313.9403m, 465.46155m, -204.12457m, -197.98264m, 341.6419m, 407.021m);
            Fp4x2 b2 = Fp4x2(-77.77652m, -184.09119m, -500.24542m, -144.36426m, 446.16736m, -84.16861m, -293.43997m, 321.036m);
            bool4x2 r2 = bool4x2(true, false, false, false, true, true, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp4x2 a3 = Fp4x2(-347.1526m, 459.48096m, 465.06903m, -374.56448m, -276.10492m, 172.8465m, 280.95673m, 358.1585m);
            Fp4x2 b3 = Fp4x2(479.0058m, 122.157715m, 245.73413m, -216.83966m, -374.0543m, 375.99078m, 425.84967m, -248.80441m);
            bool4x2 r3 = bool4x2(true, false, false, true, false, true, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_less_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(-217.34143m, -154.63306m, -189.59198m, -383.10138m, 449.96143m, -495.594m, 339.89673m, 278.93567m);
            Fp b0 = (-277.67377m);
            bool4x2 r0 = bool4x2(false, false, false, true, false, true, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp4x2 a1 = Fp4x2(448.09546m, -379.16406m, 231.91278m, 191.04297m, -42.53656m, 3.5787964m, -328.5581m, 409.57263m);
            Fp b1 = (168.98419m);
            bool4x2 r1 = bool4x2(false, true, false, false, true, true, true, false);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp4x2 a2 = Fp4x2(-503.11368m, -287.729m, -265.64056m, 331.79572m, 164.5708m, 502.8482m, 303.45343m, 168.84894m);
            Fp b2 = (321.62482m);
            bool4x2 r2 = bool4x2(true, true, true, false, true, false, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp4x2 a3 = Fp4x2(442.40686m, 409.4076m, -65.446625m, 268.86694m, 264.36053m, 49.8692m, 326.2m, -96.36563m);
            Fp b3 = (-151.07874m);
            bool4x2 r3 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_less_scalar_wide()
        {
            Fp a0 = (-485.6832m);
            Fp4x2 b0 = Fp4x2(-362.635m, -4.044037m, 131.79993m, 413.48376m, 382.34747m, 55.00757m, -373.25812m, -144.24112m);
            bool4x2 r0 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            Fp a1 = (-243.22845m);
            Fp4x2 b1 = Fp4x2(212.25671m, 71.16406m, -104.41278m, 177.30798m, -44.35016m, -280.36896m, -397.822m, 453.41125m);
            bool4x2 r1 = bool4x2(true, true, true, true, true, false, false, true);
            TestUtils.AreEqual(a1 < b1, r1);

            Fp a2 = (-310.9288m);
            Fp4x2 b2 = Fp4x2(-159.81488m, -139.51483m, -350.74994m, -428.73398m, -352.40662m, 62.795044m, 352.87518m, -509.05646m);
            bool4x2 r2 = bool4x2(true, true, false, false, false, true, true, false);
            TestUtils.AreEqual(a2 < b2, r2);

            Fp a3 = (10.939697m);
            Fp4x2 b3 = Fp4x2(-200.63272m, 304.57733m, -134.67667m, -237.67072m, 298.4048m, 290.37836m, -444.8108m, -93.98566m);
            bool4x2 r3 = bool4x2(false, true, false, false, true, true, false, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_greater_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(-241.33841m, -475.21497m, -39.85724m, -167.34067m, -383.31873m, 119.09595m, 134.24622m, 295.21844m);
            Fp4x2 b0 = Fp4x2(438.91602m, 228.49042m, -206.5971m, 366.85388m, 35.72583m, -91.07013m, 154.46704m, 467.31146m);
            bool4x2 r0 = bool4x2(false, false, true, false, false, true, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp4x2 a1 = Fp4x2(-324.31348m, 278.55414m, -216.29721m, -217.02304m, 408.92578m, 408.4909m, -165.98468m, -188.39972m);
            Fp4x2 b1 = Fp4x2(-304.5686m, -105.56061m, 118.17328m, 291.72064m, 198.42969m, 311.83734m, 477.4394m, 421.5794m);
            bool4x2 r1 = bool4x2(false, true, false, false, true, true, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp4x2 a2 = Fp4x2(276.64758m, -91.25357m, -49.06787m, -288.82318m, 411.2578m, 85.75275m, 495.4361m, 22.718994m);
            Fp4x2 b2 = Fp4x2(-35.827118m, 327.37164m, -200.52045m, -307.49384m, 104.79114m, 39.848938m, 371.0691m, 63.974304m);
            bool4x2 r2 = bool4x2(true, false, true, true, true, true, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp4x2 a3 = Fp4x2(76.05542m, -267.30304m, 217.2334m, 343.66144m, 143.93909m, 331.56464m, -103.08804m, 20.838562m);
            Fp4x2 b3 = Fp4x2(455.26648m, -251.13776m, 204.78363m, 152.48834m, -254.93558m, 273.71313m, 32.82202m, -348.75812m);
            bool4x2 r3 = bool4x2(false, false, true, true, true, true, false, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_greater_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(-348.3178m, -2.4205933m, 423.71265m, 250.03534m, -209.6311m, -121.415405m, 202.20648m, 420.89746m);
            Fp b0 = (239.55536m);
            bool4x2 r0 = bool4x2(false, false, true, true, false, false, false, true);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp4x2 a1 = Fp4x2(422.2362m, -84.361145m, 17.824524m, 509.54065m, 501.89423m, -436.39563m, -129.45663m, -187.94016m);
            Fp b1 = (-299.2479m);
            bool4x2 r1 = bool4x2(true, true, true, true, true, false, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp4x2 a2 = Fp4x2(-292.8944m, 356.62354m, -255.7496m, -205.14075m, -500.93753m, -29.945099m, 61.921204m, 499.33307m);
            Fp b2 = (-164.38376m);
            bool4x2 r2 = bool4x2(false, true, false, false, false, true, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp4x2 a3 = Fp4x2(-378.25275m, 320.78027m, 487.72894m, 194.74487m, 305.70337m, 304.59412m, 452.4339m, -32.457245m);
            Fp b3 = (-97.266815m);
            bool4x2 r3 = bool4x2(false, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_greater_scalar_wide()
        {
            Fp a0 = (-34.200226m);
            Fp4x2 b0 = Fp4x2(212.36633m, 82.05115m, 458.8661m, 136.99329m, 227.5271m, 495.51807m, -142.25m, -196.3866m);
            bool4x2 r0 = bool4x2(false, false, false, false, false, false, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            Fp a1 = (-97.57742m);
            Fp4x2 b1 = Fp4x2(-241.31299m, -139.42554m, 305.07654m, -305.36148m, -506.0047m, -429.6786m, -430.8932m, 88.38849m);
            bool4x2 r1 = bool4x2(true, true, false, true, true, true, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            Fp a2 = (-263.5904m);
            Fp4x2 b2 = Fp4x2(-340.4632m, 438.38214m, 114.980286m, 49.168518m, 458.23285m, 508.97046m, -243.17514m, -92.2117m);
            bool4x2 r2 = bool4x2(true, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            Fp a3 = (21.118713m);
            Fp4x2 b3 = Fp4x2(-406.11978m, 454.279m, -245.1478m, 349.24713m, -351.03763m, -328.44318m, -90.44647m, -126.328m);
            bool4x2 r3 = bool4x2(true, false, true, false, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_less_equal_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(-266.1326m, -124.733765m, -292.27527m, 24.822144m, -272.5923m, -285.86377m, 384.44617m, 267.29004m);
            Fp4x2 b0 = Fp4x2(-192.43298m, -372.29657m, -239.20337m, -314.14038m, 439.8761m, 301.66156m, 257.67798m, -234.71451m);
            bool4x2 r0 = bool4x2(true, false, true, false, true, true, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp4x2 a1 = Fp4x2(478.6623m, -110.5802m, 109.78064m, 178.77972m, 399.04333m, -236.436m, 166.79718m, 195.17603m);
            Fp4x2 b1 = Fp4x2(-127.03546m, -511.36487m, -384.00253m, 8.338257m, -464.58316m, 166.00934m, -353.5489m, 5.9090576m);
            bool4x2 r1 = bool4x2(false, false, false, false, false, true, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp4x2 a2 = Fp4x2(101.0589m, -499.5724m, 226.72626m, -346.31998m, 91.10675m, 438.5157m, -422.07498m, -96.408264m);
            Fp4x2 b2 = Fp4x2(-159.5957m, 447.97522m, -339.27612m, 352.64783m, 175.11664m, -384.6341m, 184.44794m, 344.69257m);
            bool4x2 r2 = bool4x2(false, true, false, true, true, false, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp4x2 a3 = Fp4x2(-38.98822m, 355.982m, -299.03247m, -486.72812m, 140.7873m, -259.33997m, 509.23267m, 31.062439m);
            Fp4x2 b3 = Fp4x2(490.128m, -427.9264m, 49.47937m, -394.13007m, 378.92804m, -339.6921m, 370.8128m, -431.0434m);
            bool4x2 r3 = bool4x2(true, false, true, true, true, false, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_less_equal_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(-347.2307m, 357.8626m, -179.71185m, -320.96027m, 26.583496m, -314.84348m, 219.6524m, 479.43463m);
            Fp b0 = (-160.18707m);
            bool4x2 r0 = bool4x2(true, false, true, true, false, true, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp4x2 a1 = Fp4x2(166.25684m, 508.216m, 43.63623m, 213.9112m, -351.45435m, -510.48376m, 58.587646m, -473.1872m);
            Fp b1 = (94.45245m);
            bool4x2 r1 = bool4x2(false, false, true, false, true, true, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp4x2 a2 = Fp4x2(335.4579m, -309.0292m, 235.10156m, -257.19537m, -489.77023m, -458.4973m, 456.54657m, 315.64874m);
            Fp b2 = (270.98102m);
            bool4x2 r2 = bool4x2(false, true, true, true, true, true, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp4x2 a3 = Fp4x2(368.87433m, -79.75519m, -10.78952m, -374.55328m, -290.48325m, -424.3211m, -427.78427m, 432.9981m);
            Fp b3 = (-200.92328m);
            bool4x2 r3 = bool4x2(false, false, false, true, true, true, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_less_equal_scalar_wide()
        {
            Fp a0 = (-187.50052m);
            Fp4x2 b0 = Fp4x2(177.5221m, -221.34222m, -35.76126m, 354.90814m, 297.5418m, -487.66107m, 217.42084m, -94.54605m);
            bool4x2 r0 = bool4x2(true, false, true, true, true, false, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            Fp a1 = (283.79358m);
            Fp4x2 b1 = Fp4x2(431.82996m, -8.173676m, 456.12714m, -499.4815m, -282.17194m, -207.38339m, -116.17682m, 459.26715m);
            bool4x2 r1 = bool4x2(true, false, true, false, false, false, false, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            Fp a2 = (-479.46613m);
            Fp4x2 b2 = Fp4x2(56.500244m, -277.44678m, 493.29077m, -505.90054m, 446.98572m, 460.13263m, 433.5786m, 504.737m);
            bool4x2 r2 = bool4x2(true, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            Fp a3 = (-263.66388m);
            Fp4x2 b3 = Fp4x2(-388.37427m, -148.78448m, -227.64874m, -510.88272m, 417.94672m, -183.90958m, 309.99933m, -106.806915m);
            bool4x2 r3 = bool4x2(false, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_greater_equal_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(-480.5502m, -331.65723m, -467.8819m, -426.36612m, 130.68m, 397.9231m, 318.48987m, -65.386536m);
            Fp4x2 b0 = Fp4x2(-13.955231m, -36.309723m, -361.51007m, -270.75452m, -221.99017m, 153.435m, 90.831665m, -417.45892m);
            bool4x2 r0 = bool4x2(false, false, false, false, true, true, true, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp4x2 a1 = Fp4x2(356.61475m, 435.95337m, -488.66916m, 131.80145m, 103.69757m, -163.08237m, 455.47546m, 93.445435m);
            Fp4x2 b1 = Fp4x2(251.08832m, 137.00128m, -407.28433m, 228.05487m, -243.401m, 424.24408m, 269.84637m, 115.634094m);
            bool4x2 r1 = bool4x2(true, true, false, false, true, false, true, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp4x2 a2 = Fp4x2(89.21301m, 489.87122m, -245.09006m, 491.81232m, -260.6297m, -310.3274m, 71.13989m, -46.399384m);
            Fp4x2 b2 = Fp4x2(445.47614m, -228.73865m, 173.26428m, -298.96143m, -88.07672m, -60.371002m, -404.40866m, -99.03479m);
            bool4x2 r2 = bool4x2(false, true, false, true, false, false, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp4x2 a3 = Fp4x2(-411.68314m, 66.261475m, 106.591736m, 370.58514m, 366.2433m, 371.99274m, 313.57233m, -214.22995m);
            Fp4x2 b3 = Fp4x2(-115.19504m, -255.03613m, 343.273m, 438.73413m, -47.712128m, 287.5191m, -338.6102m, 372.83356m);
            bool4x2 r3 = bool4x2(false, true, false, false, true, true, true, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_greater_equal_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(-100.195435m, 360.16846m, -374.34125m, 242.43842m, -297.3426m, 155.94312m, -314.72128m, 91.45465m);
            Fp b0 = (71.966736m);
            bool4x2 r0 = bool4x2(false, true, false, true, false, true, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp4x2 a1 = Fp4x2(-222.22919m, -277.31842m, 428.42255m, 321.47345m, -383.9345m, 287.05243m, -243.28503m, -333.85324m);
            Fp b1 = (-388.12286m);
            bool4x2 r1 = bool4x2(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp4x2 a2 = Fp4x2(437.79694m, 127.66785m, 314.34784m, -314.6262m, 347.53973m, -145.12482m, 35.18756m, -121.66431m);
            Fp b2 = (298.99707m);
            bool4x2 r2 = bool4x2(true, false, true, false, true, false, false, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp4x2 a3 = Fp4x2(350.87073m, -48.212738m, -136.74988m, 343.28424m, -190.20853m, -291.74176m, 152.89203m, 114.13196m);
            Fp b3 = (-250.16486m);
            bool4x2 r3 = bool4x2(true, true, true, true, true, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_greater_equal_scalar_wide()
        {
            Fp a0 = (66.15973m);
            Fp4x2 b0 = Fp4x2(228.81372m, -371.95468m, 184.22943m, 266.50446m, 225.0069m, -488.35345m, -52.242126m, 451.52258m);
            bool4x2 r0 = bool4x2(false, true, false, false, false, true, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            Fp a1 = (52.532227m);
            Fp4x2 b1 = Fp4x2(45.85956m, -379.48004m, 401.27222m, 172.98633m, 370.27435m, 192.75183m, 481.17358m, 15.350586m);
            bool4x2 r1 = bool4x2(true, true, false, false, false, false, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            Fp a2 = (128.0401m);
            Fp4x2 b2 = Fp4x2(-165.92456m, -76.330444m, -327.95792m, 356.7912m, -9.228088m, -284.01025m, 313.27112m, -90.26172m);
            bool4x2 r2 = bool4x2(true, true, true, false, true, true, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            Fp a3 = (-321.32925m);
            Fp4x2 b3 = Fp4x2(-57.97351m, -106.32416m, -178.8837m, 209.28741m, 70.184814m, 105.86798m, 247.28058m, -206.20792m);
            bool4x2 r3 = bool4x2(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_add_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(149.59412m, 261.85114m, 134.76111m, 296.27722m, -87.83832m, 262.9261m, -230.0998m, -408.89618m);
            Fp4x2 b0 = Fp4x2(82.11688m, -336.5427m, -203.66907m, 348.16364m, 417.2708m, 96.18884m, -128.52588m, 215.17627m);
            Fp4x2 r0 = Fp4x2(231.711m, -74.69156m, -68.90796m, 644.44086m, 329.4325m, 359.11493m, -358.62567m, -193.71991m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp4x2 a1 = Fp4x2(-478.518m, 195.41254m, -321.6739m, 350.58875m, 113.98291m, -90.31268m, -423.45035m, -448.143m);
            Fp4x2 b1 = Fp4x2(292.04285m, 113.43524m, 155.31805m, -440.69635m, -165.62283m, 32.225952m, -454.52457m, -508.79465m);
            Fp4x2 r1 = Fp4x2(-186.47516m, 308.84778m, -166.35583m, -90.107605m, -51.639923m, -58.08673m, -877.9749m, -956.9376m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp4x2 a2 = Fp4x2(438.0074m, -54.86862m, -195.57837m, 164.81592m, -389.52502m, 497.3791m, 428.81763m, 40.856934m);
            Fp4x2 b2 = Fp4x2(-153.16425m, -372.93164m, 180.11145m, -34.079956m, -110.680084m, -490.98834m, -308.06354m, 242.1145m);
            Fp4x2 r2 = Fp4x2(284.84314m, -427.80026m, -15.466919m, 130.73596m, -500.2051m, 6.390747m, 120.75409m, 282.97144m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp4x2 a3 = Fp4x2(233.47986m, 316.9823m, 174.2768m, 433.16278m, 243.52814m, 61.474426m, 398.64362m, 259.61395m);
            Fp4x2 b3 = Fp4x2(255.45197m, -106.347046m, -212.55377m, 506.27606m, 190.54742m, -211.61603m, -247.94873m, -145.31372m);
            Fp4x2 r3 = Fp4x2(488.93182m, 210.63525m, -38.276978m, 939.43884m, 434.07556m, -150.1416m, 150.69489m, 114.30023m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_add_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(-363.30127m, 85.21643m, 307.5595m, -324.80725m, 213.70538m, 85.79199m, -287.34515m, 389.57996m);
            Fp b0 = (84.48932m);
            Fp4x2 r0 = Fp4x2(-278.81195m, 169.70575m, 392.04883m, -240.31793m, 298.1947m, 170.28131m, -202.85583m, 474.06927m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp4x2 a1 = Fp4x2(474.44275m, -410.64044m, -86.13693m, 429.21674m, 222.11395m, 192.88623m, 167.73853m, 114.861084m);
            Fp b1 = (286.0359m);
            Fp4x2 r1 = Fp4x2(760.47864m, -124.60455m, 199.89896m, 715.2526m, 508.14984m, 478.92212m, 453.7744m, 400.89697m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp4x2 a2 = Fp4x2(-501.71588m, -12.338318m, -398.42938m, -175.8247m, 457.7224m, 507.90253m, -477.5033m, -375.98926m);
            Fp b2 = (160.07806m);
            Fp4x2 r2 = Fp4x2(-341.63782m, 147.73975m, -238.35132m, -15.746643m, 617.8005m, 667.9806m, -317.42523m, -215.9112m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp4x2 a3 = Fp4x2(482.24597m, 387.1908m, -323.7256m, 183.09943m, -389.15732m, 42.869568m, -385.58276m, -165.13174m);
            Fp b3 = (-182.66864m);
            Fp4x2 r3 = Fp4x2(299.57733m, 204.52216m, -506.39423m, 0.43078613m, -571.8259m, -139.79907m, -568.2514m, -347.80038m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_add_scalar_wide()
        {
            Fp a0 = (-510.89264m);
            Fp4x2 b0 = Fp4x2(130.32959m, 272.09174m, 331.812m, -379.09714m, 397.8896m, -333.4043m, -9.8524475m, 236.39392m);
            Fp4x2 r0 = Fp4x2(-380.56305m, -238.8009m, -179.08063m, -889.98975m, -113.00305m, -844.29694m, -520.7451m, -274.49872m);
            TestUtils.AreEqual(a0 + b0, r0);

            Fp a1 = (-45.938232m);
            Fp4x2 b1 = Fp4x2(-418.6372m, -504.4516m, 474.44263m, -500.95m, -202.51782m, -32.80835m, 113.29993m, -390.25403m);
            Fp4x2 r1 = Fp4x2(-464.57544m, -550.38983m, 428.5044m, -546.88824m, -248.45605m, -78.74658m, 67.361694m, -436.19226m);
            TestUtils.AreEqual(a1 + b1, r1);

            Fp a2 = (114.28601m);
            Fp4x2 b2 = Fp4x2(305.88098m, 467.55792m, 55.11212m, -58.26184m, 259.49323m, 167.08618m, 473.4843m, -351.8205m);
            Fp4x2 r2 = Fp4x2(420.167m, 581.84393m, 169.39813m, 56.02417m, 373.77924m, 281.3722m, 587.7703m, -237.53448m);
            TestUtils.AreEqual(a2 + b2, r2);

            Fp a3 = (443.01263m);
            Fp4x2 b3 = Fp4x2(-388.40283m, -58.419525m, 37.049866m, 25.75061m, -475.7782m, 280.8266m, -155.1466m, -261.24048m);
            Fp4x2 r3 = Fp4x2(54.609802m, 384.5931m, 480.0625m, 468.76324m, -32.765564m, 723.83923m, 287.86603m, 181.77216m);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_sub_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(-493.45367m, -228.40881m, 463.7627m, 280.9309m, -394.85977m, -289.75592m, 248.1676m, 499.35565m);
            Fp4x2 b0 = Fp4x2(-470.96182m, 95.77942m, 189.22583m, -88.87137m, -353.6308m, -352.10352m, 346.07532m, -379.2524m);
            Fp4x2 r0 = Fp4x2(-22.491852m, -324.18823m, 274.53687m, 369.80228m, -41.228973m, 62.347595m, -97.907715m, 878.60803m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp4x2 a1 = Fp4x2(-272.3052m, -342.8852m, 328.01593m, -486.20126m, -428.74026m, -42.623505m, -502.78284m, -276.01123m);
            Fp4x2 b1 = Fp4x2(-63.3519m, 326.07965m, 57.516968m, -5.383026m, 204.36798m, -478.10825m, -341.72345m, 407.61432m);
            Fp4x2 r1 = Fp4x2(-208.95331m, -668.96484m, 270.49896m, -480.81824m, -633.1083m, 435.48474m, -161.05939m, -683.62555m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp4x2 a2 = Fp4x2(-211.62009m, -347.22595m, -158.27963m, -173.81665m, -70.89194m, -173.12573m, -264.8333m, -74.43515m);
            Fp4x2 b2 = Fp4x2(310.6997m, 48.0141m, -163.44263m, 488.14728m, 180.8819m, 343.0777m, 319.71008m, 489.9417m);
            Fp4x2 r2 = Fp4x2(-522.3198m, -395.24005m, 5.1629944m, -661.9639m, -251.77383m, -516.2034m, -584.5434m, -564.37683m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp4x2 a3 = Fp4x2(-51.254578m, 108.359985m, -60.07065m, -330.40884m, -496.76056m, 12.519653m, -280.15063m, -98.08853m);
            Fp4x2 b3 = Fp4x2(-263.96368m, 41.593506m, 480.24548m, -38.970642m, 288.97418m, -252.60535m, 247.03918m, 458.86365m);
            Fp4x2 r3 = Fp4x2(212.7091m, 66.76648m, -540.31616m, -291.4382m, -785.73474m, 265.125m, -527.1898m, -556.95215m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_sub_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(-483.1618m, 208.13171m, -387.3754m, -336.09125m, 167.81488m, -376.95837m, 348.0346m, -303.7441m);
            Fp b0 = (-369.26047m);
            Fp4x2 r0 = Fp4x2(-113.90134m, 577.3922m, -18.11493m, 33.16922m, 537.0753m, -7.6979065m, 717.29504m, 65.51636m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp4x2 a1 = Fp4x2(237.17828m, -357.72092m, 308.1668m, 243.65826m, 246.66418m, -157.99301m, 350.88452m, 498.3803m);
            Fp b1 = (276.68842m);
            Fp4x2 r1 = Fp4x2(-39.51013m, -634.4093m, 31.478394m, -33.03015m, -30.024231m, -434.68143m, 74.196106m, 221.6919m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp4x2 a2 = Fp4x2(183.44073m, -164.35855m, 385.76703m, 238.23523m, -130.01239m, -231.33072m, 391.2126m, -119.787445m);
            Fp b2 = (334.32684m);
            Fp4x2 r2 = Fp4x2(-150.88611m, -498.6854m, 51.440186m, -96.09161m, -464.33923m, -565.6576m, 56.885742m, -454.1143m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp4x2 a3 = Fp4x2(-302.35925m, -73.66461m, -177.00601m, -481.27005m, 379.8385m, 181.22339m, 134.36224m, 133.43787m);
            Fp b3 = (-145.07779m);
            Fp4x2 r3 = Fp4x2(-157.28146m, 71.41318m, -31.928223m, -336.19226m, 524.91626m, 326.30118m, 279.44003m, 278.51566m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_sub_scalar_wide()
        {
            Fp a0 = (-400.4135m);
            Fp4x2 b0 = Fp4x2(-434.79865m, -476.15903m, 360.5266m, 427.36743m, 34.250977m, -102.27759m, -235.2923m, -404.2934m);
            Fp4x2 r0 = Fp4x2(34.38513m, 75.745514m, -760.9401m, -827.78094m, -434.6645m, -298.13593m, -165.12122m, 3.8798828m);
            TestUtils.AreEqual(a0 - b0, r0);

            Fp a1 = (53.207886m);
            Fp4x2 b1 = Fp4x2(-349.06525m, 180.38147m, 508.37018m, 59.979797m, 278.88702m, 184.60626m, 476.90186m, 413.65137m);
            Fp4x2 r1 = Fp4x2(402.27313m, -127.173584m, -455.1623m, -6.7719116m, -225.67914m, -131.39838m, -423.69397m, -360.44348m);
            TestUtils.AreEqual(a1 - b1, r1);

            Fp a2 = (336.2138m);
            Fp4x2 b2 = Fp4x2(-11.193787m, -247.1394m, -336.0969m, -210.80411m, 498.80597m, 490.13202m, 413.41382m, -404.97784m);
            Fp4x2 r2 = Fp4x2(347.4076m, 583.3532m, 672.31067m, 547.01794m, -162.59216m, -153.91821m, -77.20001m, 741.19165m);
            TestUtils.AreEqual(a2 - b2, r2);

            Fp a3 = (323.63397m);
            Fp4x2 b3 = Fp4x2(241.0108m, 277.08936m, 156.94482m, -0.57788086m, 167.80084m, 239.34027m, 7.104553m, -43.08737m);
            Fp4x2 r3 = Fp4x2(82.62317m, 46.544617m, 166.68915m, 324.21185m, 155.83313m, 84.2937m, 316.52942m, 366.72134m);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_mul_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(-326.98944m, 183.26929m, -95.33392m, -352.96515m, -222.24484m, 237.92462m, -66.21646m, -462.0301m);
            Fp4x2 b0 = Fp4x2(351.58496m, 113.25659m, 286.7157m, 288.06653m, 327.3562m, 406.58655m, -200.43045m, 386.18604m);
            Fp4x2 r0 = Fp4x2(-114964.57m, 20756.455m, -27333.732m, -101677.445m, -72753.23m, 96736.95m, 13271.795m, -178429.56m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp4x2 a1 = Fp4x2(-500.88995m, 435.0948m, 252.29065m, -6.518158m, 322.92114m, 82.13257m, -243.62183m, -397.79288m);
            Fp4x2 b1 = Fp4x2(363.50323m, 324.0984m, 356.03528m, -241.42923m, -351.41443m, -257.6211m, -54.470886m, -133.72797m);
            Fp4x2 r1 = Fp4x2(-182075.12m, 141013.52m, 89824.375m, 1573.6738m, -113479.15m, -21159.082m, 13270.297m, 53196.03m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp4x2 a2 = Fp4x2(-227.1383m, -58.505035m, 79.093445m, 421.37585m, 272.33777m, -359.5229m, 412.57416m, 390.20898m);
            Fp4x2 b2 = Fp4x2(-409.5271m, 505.06732m, -170.17267m, 133.84436m, 292.0456m, 392.42755m, 162.28137m, -168.54077m);
            Fp4x2 r2 = Fp4x2(93019.29m, -29548.982m, -13459.543m, 56398.78m, 79535.05m, -141086.69m, 66953.1m, -65766.125m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp4x2 a3 = Fp4x2(262.00195m, 0.791626m, 269.64508m, -72.31424m, -153.89685m, 302.33545m, -307.41687m, 19.688354m);
            Fp4x2 b3 = Fp4x2(414.51172m, 82.95386m, 3.3320312m, -171.02472m, -87.30148m, -255.9195m, 416.65594m, 344.226m);
            Fp4x2 r3 = Fp4x2(108602.88m, 65.66843m, 898.4658m, 12367.522m, 13435.423m, -77373.54m, -128087.07m, 6777.2437m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4x2_operator_mul_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(398.63098m, 133.9815m, 100.58301m, 289.0614m, -66.26727m, -440.14893m, 265.87543m, 258.4983m);
            Fp b0 = (188.26575m);
            Fp4x2 r0 = Fp4x2(75048.56m, 25224.129m, 18936.336m, 54420.36m, -12475.857m, -82864.97m, 50055.234m, 48666.375m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp4x2 a1 = Fp4x2(-59.58963m, -313.44278m, -256.9532m, 383.3626m, -297.26385m, 206.87476m, 460.85834m, -33.312927m);
            Fp b1 = (338.4347m);
            Fp4x2 r1 = Fp4x2(-20167.197m, -106079.914m, -86961.875m, 129743.2m, -100604.4m, 70013.59m, 155970.45m, -11274.25m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp4x2 a2 = Fp4x2(-508.58292m, -454.5296m, 22.078491m, 90.67731m, -353.6305m, 55.33612m, 67.805725m, 265.92883m);
            Fp b2 = (-417.235m);
            Fp4x2 r2 = Fp4x2(212198.58m, 189645.66m, -9211.919m, -37833.746m, 147547.02m, -23088.166m, -28290.92m, -110954.81m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp4x2 a3 = Fp4x2(-257.91882m, 387.38086m, 384.8125m, 414.6073m, 498.15466m, 233.70929m, -203.77933m, -454.85236m);
            Fp b3 = (383.11536m);
            Fp4x2 r3 = Fp4x2(-98812.664m, 148411.56m, 147427.58m, 158842.42m, 190850.7m, 89537.62m, -78070.99m, -174260.92m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4x2_operator_mul_scalar_wide()
        {
            Fp a0 = (291.10083m);
            Fp4x2 b0 = Fp4x2(85.88977m, -2.0483398m, -372.21533m, -32.73163m, -458.91272m, -425.4938m, 127.91998m, 166.95068m);
            Fp4x2 r0 = Fp4x2(25002.584m, -596.27344m, -108352.195m, -9528.204m, -133589.88m, -123861.6m, 37237.613m, 48599.484m);
            TestUtils.AreEqual(a0 * b0, r0, Fp.Point1);

            Fp a1 = (-505.2238m);
            Fp4x2 b1 = Fp4x2(-52.959717m, 493.21753m, -320.13397m, 459.70593m, -309.70544m, -463.31314m, 124.56317m, 393.03064m);
            Fp4x2 r1 = Fp4x2(26756.508m, -249185.23m, 161739.3m, -232254.38m, 156470.56m, 234076.81m, -62932.277m, -198568.42m);
            TestUtils.AreEqual(a1 * b1, r1, Fp.Point1);

            Fp a2 = (321.9226m);
            Fp4x2 b2 = Fp4x2(324.49915m, 217.63403m, -343.80927m, 305.8797m, 312.56818m, -404.74002m, 86.315735m, -316.86298m);
            Fp4x2 r2 = Fp4x2(104463.61m, 70061.31m, -110679.98m, 98469.59m, 100622.766m, -130294.96m, 27786.986m, -102005.35m);
            TestUtils.AreEqual(a2 * b2, r2, Fp.Point1);

            Fp a3 = (242.69629m);
            Fp4x2 b3 = Fp4x2(278.34778m, 185.50299m, -128.3453m, 336.5357m, -161.05597m, -490.4827m, 336.52277m, -449.29254m);
            Fp4x2 r3 = Fp4x2(67553.98m, 45020.887m, -31148.93m, 81675.97m, -39087.688m, -119038.33m, 81672.83m, -109041.63m);
            TestUtils.AreEqual(a3 * b3, r3, Fp.Point1);
        }

        [Test]
        public static void Fp4x2_operator_div_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(-434.30182m, -58.547546m, -242.22162m, -61.09958m, 507.04565m, 55.52173m, 84.16864m, 121.1817m);
            Fp4x2 b0 = Fp4x2(-418.87305m, 154.74506m, 228.1217m, 170.04639m, -183.44586m, 254.94373m, -327.2115m, -54.62494m);
            Fp4x2 r0 = Fp4x2(1.036834m, -0.3783484m, -1.0618087m, -0.35931125m, -2.764007m, 0.21778034m, -0.2572301m, -2.2184317m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp4x2 a1 = Fp4x2(-251.65366m, 232.27637m, -11.3958435m, 29.057007m, 322.31866m, -203.0835m, -48.977356m, 42.2453m);
            Fp4x2 b1 = Fp4x2(345.10803m, 82.34033m, -104.82977m, -236.51917m, 359.3108m, 322.64587m, 371.59705m, -355.33997m);
            Fp4x2 r1 = Fp4x2(-0.72920257m, 2.8209307m, 0.10870808m, -0.12285265m, 0.897047m, -0.62943155m, -0.13180234m, -0.11888699m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp4x2 a2 = Fp4x2(-38.711334m, -135.21942m, -482.07678m, 242.29352m, 475.21832m, 136.9826m, 469.2395m, 122.68744m);
            Fp4x2 b2 = Fp4x2(-239.45645m, -266.5359m, -357.02856m, -399.5715m, 476.43823m, 479.14832m, 31.718567m, -67.50827m);
            Fp4x2 r2 = Fp4x2(0.16166335m, 0.50732166m, 1.3502471m, -0.6063834m, 0.9974395m, 0.2858877m, 14.793843m, -1.817369m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp4x2 a3 = Fp4x2(-20.497894m, -467.7096m, -221.04147m, 267.99823m, 64.06995m, 344.4264m, -80.7948m, -292.97626m);
            Fp4x2 b3 = Fp4x2(-476.12637m, -14.658966m, 455.77832m, 182.52795m, -334.02838m, -89.53241m, 128.25458m, -376.5514m);
            Fp4x2 r3 = Fp4x2(0.043051373m, 31.906042m, -0.48497584m, 1.4682585m, -0.1918099m, -3.8469465m, -0.6299565m, 0.7780512m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_div_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(338.5183m, 342.57233m, -162.55743m, 62.311157m, -435.44455m, 124.90289m, 336.1009m, -230.52808m);
            Fp b0 = (18.585693m);
            Fp4x2 r0 = Fp4x2(18.213919m, 18.432045m, -8.746374m, 3.3526409m, -23.429018m, 6.7203784m, 18.08385m, -12.403523m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp4x2 a1 = Fp4x2(-93.8689m, -412.19177m, -377.6493m, -358.36334m, -439.82245m, -253.62341m, -156.09784m, 115.1026m);
            Fp b1 = (-125.544495m);
            Fp4x2 r1 = Fp4x2(0.74769425m, 3.2832325m, 3.0080912m, 2.8544729m, 3.5033193m, 2.0201874m, 1.2433667m, -0.91682714m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp4x2 a2 = Fp4x2(-68.532166m, 484.37848m, -506.15454m, -283.2752m, 219.09784m, -11.390045m, -192.22711m, 244.88446m);
            Fp b2 = (6.3016357m);
            Fp4x2 r2 = Fp4x2(-10.875298m, 76.86552m, -80.32114m, -44.95265m, 34.768406m, -1.8074744m, -30.50432m, 38.86046m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp4x2 a3 = Fp4x2(145.513m, -377.98132m, -49.026733m, -204.02267m, 404.14398m, -215.7409m, -93.07489m, -235.54022m);
            Fp b3 = (89.89917m);
            Fp4x2 r3 = Fp4x2(1.6186246m, -4.204503m, -0.54535246m, -2.2694612m, 4.4955254m, -2.3998098m, -1.0353254m, -2.620049m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_div_scalar_wide()
        {
            Fp a0 = (2.9528809m);
            Fp4x2 b0 = Fp4x2(260.17004m, 427.25922m, -21.09494m, -20.552216m, -133.13852m, 254.63452m, -286.85498m, 186.54468m);
            Fp4x2 r0 = Fp4x2(0.011349811m, 0.0069112163m, -0.13998052m, -0.14367701m, -0.022179013m, 0.011596546m, -0.010293985m, 0.015829349m);
            TestUtils.AreEqual(a0 / b0, r0);

            Fp a1 = (172.25421m);
            Fp4x2 b1 = Fp4x2(-81.20044m, 483.28802m, 492.59583m, -428.58005m, -63.68457m, 464.9878m, 224.61633m, 360.40833m);
            Fp4x2 r1 = Fp4x2(-2.1213458m, 0.35642144m, 0.3496867m, -0.4019184m, -2.704803m, 0.3704489m, 0.76688194m, 0.4779418m);
            TestUtils.AreEqual(a1 / b1, r1);

            Fp a2 = (-104.604706m);
            Fp4x2 b2 = Fp4x2(-371.11063m, -185.77655m, 472.09692m, 246.83105m, 280.94666m, 31.30542m, -239.26883m, -139.48044m);
            Fp4x2 r2 = Fp4x2(0.28186932m, 0.5630673m, -0.22157463m, -0.4237907m, -0.3723294m, -3.3414247m, 0.43718484m, 0.7499597m);
            TestUtils.AreEqual(a2 / b2, r2);

            Fp a3 = (-405.13333m);
            Fp4x2 b3 = Fp4x2(-29.43277m, -456.4468m, 62.66205m, -290.4594m, -185.98166m, 120.48212m, 241.99762m, 86.05719m);
            Fp4x2 r3 = Fp4x2(13.764703m, 0.8875806m, -6.46537m, 1.3948019m, 2.178351m, -3.3626013m, -1.6741211m, -4.707722m);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_mod_wide_wide()
        {
            Fp4x2 a0 = Fp4x2(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m, -385.32135m, 75.61359m);
            Fp4x2 b0 = Fp4x2(470.2685m, -371.4406m, 161.94507m, -151.37039m, 170.21747m, 453.35284m, 433.15808m, -159.1189m);
            Fp4x2 r0 = Fp4x2(56.91992m, -262.2188m, -97.763245m, 104.89154m, -65.37125m, -126.50305m, -385.32135m, 75.61359m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp4x2 a1 = Fp4x2(147.87054m, -146.02231m, -188.04791m, 14.303833m, -56.95459m, -280.97797m, -139.49966m, -284.42224m);
            Fp4x2 b1 = Fp4x2(190.11346m, 46.63446m, 297.8944m, -198.62778m, -45.952698m, 401.35815m, -246.4354m, -156.38309m);
            Fp4x2 r1 = Fp4x2(147.87054m, -6.118927m, -188.04791m, 14.303833m, -11.001892m, -280.97797m, -139.49966m, -128.03915m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp4x2 a2 = Fp4x2(74.799805m, -157.26028m, 208.92334m, 323.4063m, -427.9572m, -270.79147m, 321.25647m, -254.9324m);
            Fp4x2 b2 = Fp4x2(33.645386m, 159.46942m, 314.51416m, 458.85156m, -95.67474m, 501.60535m, 141.61151m, 486.41327m);
            Fp4x2 r2 = Fp4x2(7.509033m, -157.26028m, 208.92334m, 323.4063m, -45.25824m, -270.79147m, 38.033447m, -254.9324m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp4x2 a3 = Fp4x2(-347.11957m, -33.574707m, -27.461914m, -199.8555m, -56.03534m, 197.51398m, -69.076935m, 500.12927m);
            Fp4x2 b3 = Fp4x2(-299.43967m, 457.40955m, 49.858154m, 271.02557m, 448.409m, 460.18945m, 215.53345m, -330.93585m);
            Fp4x2 r3 = Fp4x2(-47.6799m, -33.574707m, -27.461914m, -199.8555m, -56.03534m, 197.51398m, -69.076935m, 169.19342m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_mod_wide_scalar()
        {
            Fp4x2 a0 = Fp4x2(360.08112m, 57.401245m, -85.35019m, 449.2752m, 4.46344m, 469.19336m, -152.73862m, 262.32312m);
            Fp b0 = (-297.3982m);
            Fp4x2 r0 = Fp4x2(62.682922m, 57.401245m, -85.35019m, 151.87701m, 4.46344m, 171.79517m, -152.73862m, 262.32312m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp4x2 a1 = Fp4x2(279.7296m, -24.107025m, 109.5332m, -276.18713m, 357.42072m, 510.55994m, -287.36353m, 173.2602m);
            Fp b1 = (-242.91284m);
            Fp4x2 r1 = Fp4x2(36.816772m, -24.107025m, 109.5332m, -33.274292m, 114.50787m, 24.734253m, -44.450684m, 173.2602m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp4x2 a2 = Fp4x2(-111.50394m, 330.5569m, 443.2447m, 175.37036m, 496.28973m, 497.073m, -223.45349m, 34.037292m);
            Fp b2 = (36.7323m);
            Fp4x2 r2 = Fp4x2(-1.3070374m, 36.698486m, 2.4570923m, 28.441162m, 18.769836m, 19.5531m, -3.0596924m, 34.037292m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp4x2 a3 = Fp4x2(279.83612m, -64.484924m, -208.74591m, 153.03174m, -392.8873m, -285.10107m, 496.4566m, -334.78363m);
            Fp b3 = (-84.645294m);
            Fp4x2 r3 = Fp4x2(25.900238m, -64.484924m, -39.455322m, 68.386444m, -54.30612m, -31.165192m, 73.23013m, -80.84775m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_mod_scalar_wide()
        {
            Fp a0 = (321.83087m);
            Fp4x2 b0 = Fp4x2(-360.08008m, 271.34174m, -418.93903m, -57.065247m, -18.80716m, 10.327942m, 114.91266m, -373.9153m);
            Fp4x2 r0 = Fp4x2(321.83087m, 50.489136m, 321.83087m, 36.50464m, 2.1091614m, 1.6646729m, 92.005554m, 321.83087m);
            TestUtils.AreEqual(a0 % b0, r0);

            Fp a1 = (-178.94406m);
            Fp4x2 b1 = Fp4x2(11.08252m, -162.6925m, 118.41644m, -13.732086m, -58.26706m, 219.90881m, -60.29535m, -317.5764m);
            Fp4x2 r1 = Fp4x2(-1.6237488m, -16.251556m, -60.52762m, -0.42694092m, -4.1428833m, -178.94406m, -58.353363m, -178.94406m);
            TestUtils.AreEqual(a1 % b1, r1);

            Fp a2 = (-219.50665m);
            Fp4x2 b2 = Fp4x2(-362.4784m, -481.1638m, 113.84534m, 331.60565m, -180.93997m, 462.0606m, -15.502106m, 163.53247m);
            Fp4x2 r2 = Fp4x2(-219.50665m, -219.50665m, -105.661316m, -219.50665m, -38.56668m, -219.50665m, -2.4771729m, -55.974182m);
            TestUtils.AreEqual(a2 % b2, r2);

            Fp a3 = (-417.56512m);
            Fp4x2 b3 = Fp4x2(307.13324m, 198.07489m, 306.0138m, -494.00125m, 325.5888m, -93.9595m, 302.48358m, 394.8454m);
            Fp4x2 r3 = Fp4x2(-110.431885m, -21.415344m, -111.55133m, -417.56512m, -91.97632m, -41.72711m, -115.08154m, -22.719727m);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [Test]
        public static void Fp4x2_operator_plus()
        {
            Fp4x2 a0 = Fp4x2(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m, 298.37836m, 256.47144m);
            Fp4x2 r0 = Fp4x2(-462.95068m, -341.85828m, 350.2633m, -306.49417m, -402.10608m, -325.1939m, 298.37836m, 256.47144m);
            TestUtils.AreEqual(+a0, r0);

            Fp4x2 a1 = Fp4x2(167.59698m, 500.9478m, -509.95538m, -135.21799m, -382.86426m, 322.83105m, -15.965393m, -401.84415m);
            Fp4x2 r1 = Fp4x2(167.59698m, 500.9478m, -509.95538m, -135.21799m, -382.86426m, 322.83105m, -15.965393m, -401.84415m);
            TestUtils.AreEqual(+a1, r1);

            Fp4x2 a2 = Fp4x2(-459.20764m, -399.96255m, -457.5369m, -299.72546m, -281.65063m, -477.81766m, -301.2943m, -481.5745m);
            Fp4x2 r2 = Fp4x2(-459.20764m, -399.96255m, -457.5369m, -299.72546m, -281.65063m, -477.81766m, -301.2943m, -481.5745m);
            TestUtils.AreEqual(+a2, r2);

            Fp4x2 a3 = Fp4x2(51.541565m, 441.76825m, 120.826416m, -191.02594m, -311.4584m, 110.38733m, -326.90134m, 450.82037m);
            Fp4x2 r3 = Fp4x2(51.541565m, 441.76825m, 120.826416m, -191.02594m, -311.4584m, 110.38733m, -326.90134m, 450.82037m);
            TestUtils.AreEqual(+a3, r3);
        }

        [Test]
        public static void Fp4x2_operator_neg()
        {
            Fp4x2 a0 = Fp4x2(-161.17307m, 91.577576m, -474.2732m, -138.7461m, -302.52325m, 428.21216m, 440.5053m, -457.04636m);
            Fp4x2 r0 = Fp4x2(161.17307m, -91.577576m, 474.2732m, 138.7461m, 302.52325m, -428.21216m, -440.5053m, 457.04636m);
            TestUtils.AreEqual(-a0, r0);

            Fp4x2 a1 = Fp4x2(370.19952m, 62.18921m, 176.51025m, -386.41965m, -161.73965m, -413.31476m, -179.76102m, -394.13074m);
            Fp4x2 r1 = Fp4x2(-370.19952m, -62.18921m, -176.51025m, 386.41965m, 161.73965m, 413.31476m, 179.76102m, 394.13074m);
            TestUtils.AreEqual(-a1, r1);

            Fp4x2 a2 = Fp4x2(43.724304m, 147.67554m, 356.8322m, -21.410583m, 480.02087m, 114.6911m, 355.2517m, -243.5343m);
            Fp4x2 r2 = Fp4x2(-43.724304m, -147.67554m, -356.8322m, 21.410583m, -480.02087m, -114.6911m, -355.2517m, 243.5343m);
            TestUtils.AreEqual(-a2, r2);

            Fp4x2 a3 = Fp4x2(-263.83936m, -428.1227m, -418.94492m, 0.4013672m, 60.900513m, 294.01508m, -288.94208m, 470.2558m);
            Fp4x2 r3 = Fp4x2(263.83936m, 428.1227m, 418.94492m, -0.4013672m, -60.900513m, -294.01508m, 288.94208m, -470.2558m);
            TestUtils.AreEqual(-a3, r3);
        }

        [Test]
        public static void Fp4x2_operator_prefix_inc()
        {
            Fp4x2 a0 = Fp4x2(-283.03375m, 366.7337m, -401.91684m, 187.16315m, 27.883484m, 130.98157m, -495.23444m, 224.36108m);
            Fp4x2 r0 = Fp4x2(-282.03375m, 367.7337m, -400.91684m, 188.16315m, 28.883484m, 131.98157m, -494.23444m, 225.36108m);
            TestUtils.AreEqual(++a0, r0);

            Fp4x2 a1 = Fp4x2(203.96112m, 28.987854m, -483.0141m, -269.13318m, -40.76111m, 21.258972m, 193.15027m, -143.68582m);
            Fp4x2 r1 = Fp4x2(204.96112m, 29.987854m, -482.0141m, -268.13318m, -39.76111m, 22.258972m, 194.15027m, -142.68582m);
            TestUtils.AreEqual(++a1, r1);

            Fp4x2 a2 = Fp4x2(451.3499m, -183.26956m, 370.29773m, -180.14572m, 235.54474m, 493.35364m, 385.1552m, -135.32303m);
            Fp4x2 r2 = Fp4x2(452.3499m, -182.26956m, 371.29773m, -179.14572m, 236.54474m, 494.35364m, 386.1552m, -134.32303m);
            TestUtils.AreEqual(++a2, r2);

            Fp4x2 a3 = Fp4x2(464.82544m, -218.15811m, -507.06058m, 170.8164m, -500.54514m, -229.95221m, 480.92822m, 75.92224m);
            Fp4x2 r3 = Fp4x2(465.82544m, -217.15811m, -506.06058m, 171.8164m, -499.54514m, -228.95221m, 481.92822m, 76.92224m);
            TestUtils.AreEqual(++a3, r3);
        }

        [Test]
        public static void Fp4x2_operator_postfix_inc()
        {
            Fp4x2 a0 = Fp4x2(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m, 145.12164m, -225.01251m);
            Fp4x2 r0 = Fp4x2(366.14648m, 179.27643m, -389.90704m, 183.24811m, 189.8518m, -110.858795m, 145.12164m, -225.01251m);
            TestUtils.AreEqual(a0++, r0);

            Fp4x2 a1 = Fp4x2(375.78876m, -219.50537m, -302.35114m, -167.30942m, -432.4173m, -195.24594m, 430.40125m, -116.777405m);
            Fp4x2 r1 = Fp4x2(375.78876m, -219.50537m, -302.35114m, -167.30942m, -432.4173m, -195.24594m, 430.40125m, -116.777405m);
            TestUtils.AreEqual(a1++, r1);

            Fp4x2 a2 = Fp4x2(495.3412m, -190.37909m, -511.83737m, -214.7761m, -367.92316m, 425.3698m, 170.81726m, 43.400146m);
            Fp4x2 r2 = Fp4x2(495.3412m, -190.37909m, -511.83737m, -214.7761m, -367.92316m, 425.3698m, 170.81726m, 43.400146m);
            TestUtils.AreEqual(a2++, r2);

            Fp4x2 a3 = Fp4x2(-493.16553m, 48.611633m, -364.19983m, 462.49628m, -326.0879m, 392.2071m, 137.73834m, 98.75751m);
            Fp4x2 r3 = Fp4x2(-493.16553m, 48.611633m, -364.19983m, 462.49628m, -326.0879m, 392.2071m, 137.73834m, 98.75751m);
            TestUtils.AreEqual(a3++, r3);
        }

        [Test]
        public static void Fp4x2_operator_prefix_dec()
        {
            Fp4x2 a0 = Fp4x2(127.71149m, 412.1825m, 421.8966m, -407.7751m, -148.3689m, -202.65967m, -365.90997m, 111.1109m);
            Fp4x2 r0 = Fp4x2(126.71149m, 411.1825m, 420.8966m, -408.7751m, -149.3689m, -203.65967m, -366.90997m, 110.1109m);
            TestUtils.AreEqual(--a0, r0);

            Fp4x2 a1 = Fp4x2(-473.15137m, 49.586304m, -490.94742m, 437.7041m, 440.35724m, -22.001892m, 185.19067m, -135.55646m);
            Fp4x2 r1 = Fp4x2(-474.15137m, 48.586304m, -491.94742m, 436.7041m, 439.35724m, -23.001892m, 184.19067m, -136.55646m);
            TestUtils.AreEqual(--a1, r1);

            Fp4x2 a2 = Fp4x2(336.039m, 310.96857m, 290.07666m, 155.52148m, -183.0806m, 450.9137m, -27.427094m, 212.71722m);
            Fp4x2 r2 = Fp4x2(335.039m, 309.96857m, 289.07666m, 154.52148m, -184.0806m, 449.9137m, -28.427094m, 211.71722m);
            TestUtils.AreEqual(--a2, r2);

            Fp4x2 a3 = Fp4x2(299.13446m, 260.42664m, 398.1562m, 405.4978m, 122.074524m, 416.10016m, -365.77808m, 413.51202m);
            Fp4x2 r3 = Fp4x2(298.13446m, 259.42664m, 397.1562m, 404.4978m, 121.074524m, 415.10016m, -366.77808m, 412.51202m);
            TestUtils.AreEqual(--a3, r3);
        }

        [Test]
        public static void Fp4x2_operator_postfix_dec()
        {
            Fp4x2 a0 = Fp4x2(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m, 106.726135m, -494.1874m);
            Fp4x2 r0 = Fp4x2(333.3805m, -215.50674m, 152.04675m, -233.58646m, -187.37677m, 39.012817m, 106.726135m, -494.1874m);
            TestUtils.AreEqual(a0--, r0);

            Fp4x2 a1 = Fp4x2(442.7943m, -498.21182m, -259.07544m, -407.2235m, 256.4026m, 272.2155m, -431.75604m, 78.12311m);
            Fp4x2 r1 = Fp4x2(442.7943m, -498.21182m, -259.07544m, -407.2235m, 256.4026m, 272.2155m, -431.75604m, 78.12311m);
            TestUtils.AreEqual(a1--, r1);

            Fp4x2 a2 = Fp4x2(-341.83966m, -287.3698m, 211.68933m, 355.79425m, 405.0161m, 420.21088m, -370.72998m, 249.26392m);
            Fp4x2 r2 = Fp4x2(-341.83966m, -287.3698m, 211.68933m, 355.79425m, 405.0161m, 420.21088m, -370.72998m, 249.26392m);
            TestUtils.AreEqual(a2--, r2);

            Fp4x2 a3 = Fp4x2(180.30334m, 369.93585m, -352.15085m, 98.14557m, -367.599m, -292.01447m, 185.35925m, 132.24475m);
            Fp4x2 r3 = Fp4x2(180.30334m, 369.93585m, -352.15085m, 98.14557m, -367.599m, -292.01447m, 185.35925m, 132.24475m);
            TestUtils.AreEqual(a3--, r3);
        }

#endif

    }
}
